<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hHtoDDAdverMTHhhMapper">

	<select id="selectUpdate0816List" resultType="Map">
		SELECT DISTINCT STATS_DTTM FROM BILLING.MOB_COM_STATS_INFO WHERE STATS_DTTM BETWEEN ${SDATE} AND ${EDATE}
	</select>
	
	<update id="updateSourceTable" parameterType="Map">
update BILLING.EXL_ITL_RCV_STATS a left join dreamsearch.EXL_ITL_INFO b on a.EXL_ITL_SEQ =b.EXL_ITL_SEQ
set a.EXL_ITL_CLICK_CNT =0, a.ADVRTS_AMT =0
where a.STATS_DTTM = #{STATS_DTTM}
and PAR_NO in (600822,548938,591788,602069,640803,674030,674613,680788,680789	)
;

update BILLING.MOB_CAMP_MEDIA_STATS A 
set A.CLICK_CNT =0, A.ADVRTS_AMT =0
where STATS_DTTM= #{STATS_DTTM}
AND SITE_CODE in('cc77709f065bade8fa096e19daa22972','a17a623aa8bb0b66cae59617c2ff1c66')
and PLTFOM_TP_CODE ='01' and ADVRTS_PRDT_CODE ='01' and ADVRTS_TP_CODE ='01' and ITL_TP_CODE ='99'
;
	</update>
	
	<update id="updateUpdate0816mediascript" parameterType="Map">
INSERT INTO BILLING.MOB_MEDIA_SCRIPT_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, MEDIA_SCRIPT_NO
		, MEDIA_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_SCRIPT_NO
			, MEDIA_ID
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM (
			SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
			WHERE STATS_DTTM = ${STATS_DTTM}
			AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
			) S
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_SCRIPT_NO
	) S
	ON DUPLICATE KEY UPDATE
			MOB_MEDIA_SCRIPT_STATS.TOT_EPRS_CNT	=	S.TOT_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.PAR_EPRS_CNT	=	S.PAR_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.CLICK_CNT	=	S.CLICK_CNT
		,	MOB_MEDIA_SCRIPT_STATS.ADVRTS_AMT	=	S.ADVRTS_AMT
		,	MOB_MEDIA_SCRIPT_STATS.MEDIA_PYMNT_AMT	=	S.MEDIA_PYMNT_AMT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_EPRS_CNT	=	S.TRGT_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_PAR_EPRS_CNT	=	S.TRGT_PAR_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_CLICK_CNT	=	S.TRGT_CLICK_CNT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_ADVRTS_AMT	=	S.TRGT_ADVRTS_AMT
		,	MOB_MEDIA_SCRIPT_STATS.ALT_USER_ID='BATCH', MOB_MEDIA_SCRIPT_STATS.ALT_DTTM=NOW()
;
	</update>

	<update id="updateUpdate0816media" parameterType="Map">
INSERT INTO BILLING.MOB_MEDIA_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, MEDIA_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_ID
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM (
			SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
			WHERE STATS_DTTM = ${STATS_DTTM}
			AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
			) S
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_ID
	) S
	ON DUPLICATE KEY UPDATE
			MOB_MEDIA_STATS.TOT_EPRS_CNT	=	S.TOT_EPRS_CNT
		,	MOB_MEDIA_STATS.PAR_EPRS_CNT	=	S.PAR_EPRS_CNT
		,	MOB_MEDIA_STATS.CLICK_CNT	=	S.CLICK_CNT
		,	MOB_MEDIA_STATS.ADVRTS_AMT	=	S.ADVRTS_AMT
		,	MOB_MEDIA_STATS.MEDIA_PYMNT_AMT	=	S.MEDIA_PYMNT_AMT
		,	MOB_MEDIA_STATS.TRGT_EPRS_CNT	=	S.TRGT_EPRS_CNT
		,	MOB_MEDIA_STATS.TRGT_PAR_EPRS_CNT	=	S.TRGT_PAR_EPRS_CNT
		,	MOB_MEDIA_STATS.TRGT_CLICK_CNT	=	S.TRGT_CLICK_CNT
		,	MOB_MEDIA_STATS.TRGT_ADVRTS_AMT	=	S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW()
;
	</update>
	
	<update id="updateUpdate0816mediascriptchrg" parameterType="Map">
INSERT INTO BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS(
			STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO , MEDIA_ID, ITL_TP_CODE
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
			)
				SELECT * FROM (
					SELECT
						STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, MEDIA_ID , ITL_TP_CODE
						, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
						, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
						, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
					FROM (
						SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
						WHERE STATS_DTTM = ${STATS_DTTM}
						AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
						)S
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, MEDIA_ID, ITL_TP_CODE
				) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_SCRIPT_CHRG_STATS.TOT_EPRS_CNT = S.TOT_EPRS_CNT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.PAR_EPRS_CNT = S.PAR_EPRS_CNT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.CLICK_CNT = S.CLICK_CNT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.ADVRTS_AMT = S.ADVRTS_AMT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.MEDIA_PYMNT_AMT = S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.TRGT_EPRS_CNT = S.TRGT_EPRS_CNT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.TRGT_PAR_EPRS_CNT = S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.TRGT_CLICK_CNT = S.TRGT_CLICK_CNT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.TRGT_ADVRTS_AMT = S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_SCRIPT_CHRG_STATS.ALT_USER_ID ='BATCH'
			, MOB_MEDIA_SCRIPT_CHRG_STATS.ALT_DTTM = NOW()
;
	</update>
	
	<update id="updateUpdate0816mediachrg" parameterType="Map">
INSERT INTO BILLING.MOB_MEDIA_CHRG_STATS(
			STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
			)
				SELECT * FROM (
					SELECT
						STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, IFNULL(MEDIA_ID,'-') AS MEDIA_ID, ITL_TP_CODE
						, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
						, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
						, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
					FROM (
						SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
						WHERE STATS_DTTM = ${STATS_DTTM}
						AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
						)S
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, IFNULL(MEDIA_ID,'-'), ITL_TP_CODE
				) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_CHRG_STATS.TOT_EPRS_CNT = S.TOT_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.PAR_EPRS_CNT = S.PAR_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.CLICK_CNT = S.CLICK_CNT
			, MOB_MEDIA_CHRG_STATS.ADVRTS_AMT = S.ADVRTS_AMT
			, MOB_MEDIA_CHRG_STATS.MEDIA_PYMNT_AMT = S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_CHRG_STATS.TRGT_EPRS_CNT = S.TRGT_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.TRGT_PAR_EPRS_CNT = S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.TRGT_CLICK_CNT = S.TRGT_CLICK_CNT
			, MOB_MEDIA_CHRG_STATS.TRGT_ADVRTS_AMT = S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_CHRG_STATS.ALT_USER_ID ='BATCH'
			, MOB_MEDIA_CHRG_STATS.ALT_DTTM = NOW()
;
	</update>
	
	<update id="updateUpdate0816com" parameterType="Map">
INSERT INTO BILLING.MOB_COM_STATS_INFO(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM (
			SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
			WHERE STATS_DTTM = ${STATS_DTTM}
			AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
			) S
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
	) S
	ON DUPLICATE KEY UPDATE
			MOB_COM_STATS_INFO.TOT_EPRS_CNT	=	S.TOT_EPRS_CNT
		,	MOB_COM_STATS_INFO.PAR_EPRS_CNT	=	S.PAR_EPRS_CNT
		,	MOB_COM_STATS_INFO.CLICK_CNT	=	S.CLICK_CNT
		,	MOB_COM_STATS_INFO.ADVRTS_AMT	=	S.ADVRTS_AMT
		,	MOB_COM_STATS_INFO.MEDIA_PYMNT_AMT	=	S.MEDIA_PYMNT_AMT
		,	MOB_COM_STATS_INFO.TRGT_EPRS_CNT	=	S.TRGT_EPRS_CNT
		,	MOB_COM_STATS_INFO.TRGT_PAR_EPRS_CNT	=	S.TRGT_PAR_EPRS_CNT
		,	MOB_COM_STATS_INFO.TRGT_CLICK_CNT	=	S.TRGT_CLICK_CNT
		,	MOB_COM_STATS_INFO.TRGT_ADVRTS_AMT	=	S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW()
;
	</update>
	
	<update id="updateUpdate0816advermedia" parameterType="Map">
INSERT INTO BILLING.MOB_ADVER_MEDIA_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, ADVER_ID, MEDIA_SCRIPT_NO
		, TOT_EPRS_CNT, PAR_EPRS_CNT
		, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID, MEDIA_SCRIPT_NO
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM (
			SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
			WHERE STATS_DTTM = ${STATS_DTTM}
			AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
			) S
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID, MEDIA_SCRIPT_NO
	) S
	ON DUPLICATE KEY UPDATE
			MOB_ADVER_MEDIA_STATS.TOT_EPRS_CNT	=	S.TOT_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.PAR_EPRS_CNT	=	S.PAR_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.CLICK_CNT	=	S.CLICK_CNT
		,	MOB_ADVER_MEDIA_STATS.ADVRTS_AMT	=	S.ADVRTS_AMT
		,	MOB_ADVER_MEDIA_STATS.MEDIA_PYMNT_AMT	=	S.MEDIA_PYMNT_AMT
		,	MOB_ADVER_MEDIA_STATS.TRGT_EPRS_CNT	=	S.TRGT_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.TRGT_PAR_EPRS_CNT	=	S.TRGT_PAR_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.TRGT_CLICK_CNT	=	S.TRGT_CLICK_CNT
		,	MOB_ADVER_MEDIA_STATS.TRGT_ADVRTS_AMT	=	S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW()
;
	</update>
	
	<update id="updateUpdate0816adver" parameterType="Map">
INSERT INTO BILLING.MOB_ADVER_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, ADVER_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM (
			SELECT * from BILLING.MOB_CAMP_MEDIA_STATS 
			WHERE STATS_DTTM = ${STATS_DTTM}
			and PLTFOM_TP_CODE ='01' and ADVRTS_PRDT_CODE ='01' and ADVRTS_TP_CODE ='01' and ITL_TP_CODE ='99'
			) S
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID
	) S
	ON DUPLICATE KEY UPDATE
			MOB_ADVER_STATS.TOT_EPRS_CNT	=	S.TOT_EPRS_CNT
		,	MOB_ADVER_STATS.PAR_EPRS_CNT	=	S.PAR_EPRS_CNT
		,	MOB_ADVER_STATS.CLICK_CNT	=	S.CLICK_CNT
		,	MOB_ADVER_STATS.ADVRTS_AMT	=	S.ADVRTS_AMT
		,	MOB_ADVER_STATS.MEDIA_PYMNT_AMT	=	S.MEDIA_PYMNT_AMT
		,	MOB_ADVER_STATS.TRGT_EPRS_CNT	=	S.TRGT_EPRS_CNT
		,	MOB_ADVER_STATS.TRGT_PAR_EPRS_CNT	=	S.TRGT_PAR_EPRS_CNT
		,	MOB_ADVER_STATS.TRGT_CLICK_CNT	=	S.TRGT_CLICK_CNT
		,	MOB_ADVER_STATS.TRGT_ADVRTS_AMT	=	S.TRGT_ADVRTS_AMT
		,	MOB_ADVER_STATS.ALT_USER_ID='BATCH', ALT_DTTM=NOW()
;
	</update>
	
	<update id="updateUpdate0816camp" parameterType="Map">
INSERT INTO BILLING.MOB_CAMP_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, SITE_CODE
		, TOT_EPRS_CNT, CLICK_CNT, ADVRTS_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM (
			SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
			WHERE STATS_DTTM = ${STATS_DTTM}
			AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
			) S
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE
	) S
	ON DUPLICATE KEY UPDATE
			MOB_CAMP_STATS.TOT_EPRS_CNT	=	S.TOT_EPRS_CNT
		,	MOB_CAMP_STATS.CLICK_CNT	=	S.CLICK_CNT
		,	MOB_CAMP_STATS.ADVRTS_AMT	=	S.ADVRTS_AMT
		,	MOB_CAMP_STATS.TRGT_EPRS_CNT	=	S.TRGT_EPRS_CNT
		,	MOB_CAMP_STATS.TRGT_PAR_EPRS_CNT	=	S.TRGT_PAR_EPRS_CNT
		,	MOB_CAMP_STATS.TRGT_CLICK_CNT	=	S.TRGT_CLICK_CNT
		,	MOB_CAMP_STATS.TRGT_ADVRTS_AMT	=	S.TRGT_ADVRTS_AMT
		,	MOB_CAMP_STATS.ALT_USER_ID='BATCH', MOB_CAMP_STATS.ALT_DTTM=NOW()
;
	</update>

	
	<update id="updateUpdate0816kpimedia" parameterType="Map">
INSERT INTO BILLING.MOB_KPI_MEDIA_STATS
			(
				STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID ,MEDIA_ID,ITL_TP_CODE
				,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
				,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM (
 					SELECT STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID ,MEDIA_ID,ITL_TP_CODE,SUM(TOT_EPRS_CNT)TOT_EPRS_CNT,SUM(PAR_EPRS_CNT)PAR_EPRS_CNT
					,SUM(CLICK_CNT)CLICK_CNT,SUM(ADVRTS_AMT)ADVRTS_AMT,SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT,SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT,SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT,SUM(RETRN_CNT)RETRN_CNT,SUM(AVAL_CNT)AVAL_CNT
					,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
 					FROM (
						SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
						WHERE STATS_DTTM =20220914 and ITL_TP_CODE in('04')
						) S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A 
 					where CONVERT(S.SITE_CODE USING EUCKR)= A.SITE_CODE
					GROUP BY STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,MEDIA_ID,ITL_TP_CODE
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_KPI_MEDIA_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_KPI_MEDIA_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 
			,MOB_KPI_MEDIA_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_KPI_MEDIA_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_KPI_MEDIA_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_KPI_MEDIA_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_KPI_MEDIA_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_KPI_MEDIA_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_KPI_MEDIA_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_KPI_MEDIA_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_KPI_MEDIA_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_KPI_MEDIA_STATS.ALT_DTTM 			= NOW()
;
	</update>
	
	<update id="updateUpdate0816kpi" parameterType="Map">
INSERT INTO BILLING.MOB_KPI_STATS
			(
				STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ITL_TP_CODE
				,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
				,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM (
 					SELECT STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ITL_TP_CODE,SUM(TOT_EPRS_CNT)TOT_EPRS_CNT,SUM(PAR_EPRS_CNT)PAR_EPRS_CNT
					,SUM(CLICK_CNT)CLICK_CNT,SUM(ADVRTS_AMT)ADVRTS_AMT,SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT,SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT,SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT,SUM(RETRN_CNT)RETRN_CNT,SUM(AVAL_CNT)AVAL_CNT
					,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
 					FROM (
						SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
						WHERE STATS_DTTM = ${STATS_DTTM}
						AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
						) S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A 
 					WHERE CONVERT(S.SITE_CODE USING EUCKR)= A.SITE_CODE
					GROUP BY STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ITL_TP_CODE
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_KPI_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_KPI_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 
			,MOB_KPI_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_KPI_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_KPI_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_KPI_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_KPI_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_KPI_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_KPI_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_KPI_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_KPI_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_KPI_STATS.ALT_DTTM 			= NOW()
;
	</update>
	
	<update id="updateUpdate0816ctgr" parameterType="Map">
INSERT INTO BILLING.MOB_CTGR_STATS ( 
	STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, 
	MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM
		)
	SELECT * FROM (
				SELECT
				MCMHS.STATS_DTTM, PLTFOM_TP_CODE,MCMHS.ADVRTS_PRDT_CODE,MCMHS.ADVRTS_TP_CODE,CTGR_SEQ,MCMHS.ITL_TP_CODE
				,SUM(MCMHS.TOT_EPRS_CNT) AS TOT_EPRS_CNT
				,SUM(MCMHS.PAR_EPRS_CNT) AS PAR_EPRS_CNT					
				,SUM(MCMHS.CLICK_CNT) AS CLICK_CNT				
				,SUM(MCMHS.ADVRTS_AMT) AS ADVRTS_AMT
				,SUM(MCMHS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
				,SUM(MCMHS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
				,SUM(MCMHS.TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
				,SUM(MCMHS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
				,SUM(MCMHS.TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
				,'BATCH' AS REG_USER_ID
				, NOW() AS REG_DTTM
				FROM (
						SELECT * FROM BILLING.MOB_CAMP_MEDIA_STATS 
						WHERE STATS_DTTM = ${STATS_DTTM}
						AND PLTFOM_TP_CODE ='01' AND ADVRTS_PRDT_CODE ='01' AND ADVRTS_TP_CODE ='01' AND ITL_TP_CODE ='99'
						) MCMHS 
				INNER JOIN dreamsearch.MOB_CTGR_USER_INFO  AS MCUI  ON MCMHS.ADVER_ID = MCUI.USER_ID
				GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE
	) R
	ON DUPLICATE KEY UPDATE 
	MOB_CTGR_STATS.TOT_EPRS_CNT = R.TOT_EPRS_CNT,
	MOB_CTGR_STATS.PAR_EPRS_CNT = R.PAR_EPRS_CNT,
	MOB_CTGR_STATS.CLICK_CNT = R.CLICK_CNT,
	MOB_CTGR_STATS.ADVRTS_AMT = R.ADVRTS_AMT,
	MOB_CTGR_STATS.MEDIA_PYMNT_AMT = R.MEDIA_PYMNT_AMT,
	MOB_CTGR_STATS.TRGT_EPRS_CNT = R.TRGT_EPRS_CNT,
	MOB_CTGR_STATS.TRGT_PAR_EPRS_CNT  = R.TRGT_PAR_EPRS_CNT,
	MOB_CTGR_STATS.TRGT_CLICK_CNT = R.TRGT_CLICK_CNT,
	MOB_CTGR_STATS.TRGT_ADVRTS_AMT = R.TRGT_ADVRTS_AMT,
	MOB_CTGR_STATS.REG_USER_ID = R.REG_USER_ID, 
	MOB_CTGR_STATS.REG_DTTM = R.REG_DTTM,
	MOB_CTGR_STATS.ALT_USER_ID = 'BATCH',
	MOB_CTGR_STATS.ALT_DTTM = NOW()
;
	</update>






	<delete id="deleteFRME_CTGR_DAY_STATS" parameterType="Map">
		DELETE from BILLING.FRME_CTGR_DAY_STATS 
			WHERE STATS_DTTM = 20210702
				AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
				AND ALGM_SEQ = #{ALGM_SEQ}
	</delete>
	
	<update id="updateTrgtStats" parameterType="Map">
		update BILLING.MOB_COM_STATS_INFO 
	set TRGT_EPRS_CNT=TOT_EPRS_CNT, TRGT_PAR_EPRS_CNT=PAR_EPRS_CNT, TRGT_CLICK_CNT=CLICK_CNT, TRGT_ADVRTS_AMT=ADVRTS_AMT, ALT_DTTM = NOW()
	WHERE STATS_DTTM IN( 20210629, 20210705) AND ADVRTS_TP_CODE IN ('04','10','16','17','34','37','40','41','42','47','49','50') AND ITL_TP_CODE ='04' AND TOT_EPRS_CNT!=TRGT_EPRS_CNT
	</update>
	
	<update id="updateTrgtStats2" parameterType="Map">
		update BILLING.MOB_MEDIA_STATS 
	set TRGT_EPRS_CNT=TOT_EPRS_CNT, TRGT_PAR_EPRS_CNT=PAR_EPRS_CNT, TRGT_CLICK_CNT=CLICK_CNT, TRGT_ADVRTS_AMT=ADVRTS_AMT, ALT_DTTM = NOW()
	WHERE STATS_DTTM IN( 20210629, 20210705) AND ADVRTS_TP_CODE IN ('04','10','16','17','34','37','40','41','42','47','49','50') AND ITL_TP_CODE ='04' AND TOT_EPRS_CNT!=TRGT_EPRS_CNT
	</update>

	<update id="updateTrgtStats3" parameterType="Map">
		update BILLING.MOB_MEDIA_SCRIPT_STATS 
	set TRGT_EPRS_CNT=TOT_EPRS_CNT, TRGT_PAR_EPRS_CNT=PAR_EPRS_CNT, TRGT_CLICK_CNT=CLICK_CNT, TRGT_ADVRTS_AMT=ADVRTS_AMT, ALT_DTTM = NOW()
	WHERE STATS_DTTM IN( 20210629, 20210705) AND ADVRTS_TP_CODE IN ('04','10','16','17','34','37','40','41','42','47','49','50') AND ITL_TP_CODE ='04' AND TOT_EPRS_CNT!=TRGT_EPRS_CNT
	</update>

	<update id="updateTrgtStats4" parameterType="Map">
		update BILLING.MOB_ADVER_STATS 
	set TRGT_EPRS_CNT=TOT_EPRS_CNT, TRGT_PAR_EPRS_CNT=PAR_EPRS_CNT, TRGT_CLICK_CNT=CLICK_CNT, TRGT_ADVRTS_AMT=ADVRTS_AMT, ALT_DTTM = NOW()
	WHERE STATS_DTTM IN( 20210629, 20210705) AND ADVRTS_TP_CODE IN ('04','10','16','17','34','37','40','41','42','47','49','50') AND ITL_TP_CODE ='04' AND TOT_EPRS_CNT!=TRGT_EPRS_CNT
	</update>
	
	<update id="updateTrgtStats5" parameterType="Map">
		update BILLING.MOB_CAMP_STATS 
	set TRGT_EPRS_CNT=TOT_EPRS_CNT, TRGT_PAR_EPRS_CNT=PAR_EPRS_CNT, TRGT_CLICK_CNT=CLICK_CNT, TRGT_ADVRTS_AMT=ADVRTS_AMT, ALT_DTTM = NOW()
	WHERE STATS_DTTM IN( 20210629, 20210705) AND ADVRTS_TP_CODE IN ('04','10','16','17','34','37','40','41','42','47','49','50') AND ITL_TP_CODE ='04' AND TOT_EPRS_CNT!=TRGT_EPRS_CNT
	</update>

	<update id="updateTrgtStats6" parameterType="Map">
		update BILLING.MOB_CAMP_MEDIA_STATS 
	set TRGT_EPRS_CNT=TOT_EPRS_CNT, TRGT_PAR_EPRS_CNT=PAR_EPRS_CNT, TRGT_CLICK_CNT=CLICK_CNT, TRGT_ADVRTS_AMT=ADVRTS_AMT, ALT_DTTM = NOW()
	WHERE STATS_DTTM IN( 20210629, 20210705) AND ADVRTS_TP_CODE IN ('04','10','16','17','34','37','40','41','42','47','49','50') AND ITL_TP_CODE ='04' AND TOT_EPRS_CNT!=TRGT_EPRS_CNT
	AND SITE_CODE IN('1b9c91470d6f47279f4098e5fa1cd582','2a78102c4ad044cb8e30ae70ca6a3378','eb4b9f3928ea4f638fa4532a6c77ad1c','f550ddf3617f489dad64af6cbe9bb8f0','48913dfb7ddc4752910af447f475ce87','6ae9d93b11f84477984f963392ea97a8','86e0ff980c3448e2b04608bd3b0fed6d','a51998b8c1e787e1254a6879890b8b53','b5a859e8fe0440199f6fabad0808c480','d06e287295ff4a7782deb2a061efccf1','fabcbce0f1f7418884f7c25dccb0c80d','bb9764d4847aaec64071e931d0793ccf','0c7e2f73b9ff4de0be5da78b59dc7802','0ddcdf34c37d4c2bbce81794137c8c33','19ae4ad39bef46ccbc2714aa38399fa7','231c0b3971d94252bac1a979349a8cf3','80bfeb990a094e34a620cb283e2ddfc7','97774c5470b04f8d94702333224427c5','9b31effbdbb34acca98a7b8ace9a12ff','a4b97c14360a4dccb6b22b6d78fac991','b6c01c87c2dcc9022f476a7082d9432b','e8267bacf6f74dcea1f3bbfad68a33c3','5499165665ef1b993416650718310494','6ff7c72b1fd17ad21cc46a099244cc2e','a7232d37d9334094886b2879247fbe92','dfbe796830faae2168befa4600482b9e','ffa9239b017760682df0e7bfffaab6ee','090cb9beaa2efbaab729a599a7b6dfca','0ac5ed524c654dc6882fcb9c92637958','168f3aa456f847ffb8189cdaf5cac7d0','1d6d5154aefa433b9288804c0b5a7b58','95450ad52f194399a74aee8aa8042ba4','95460bd236799672994c54e4b6edd9bc','c9168e39b96941548e1fc74ec122259b','d8a9682bc5cf43c4b0c5f9b20cada5ec','0a26ecab02194abb95fa57cf47a8dbd9','7e28f530a38e4436ccb417dcd75e18db','c8d5fe9d1c58b4644ce641d24173654f'	)
	</update>
	
	<select id="sql_SELECT_COM_CODE" resultType="Map" parameterType="Map">
		/* MOBON_COM_CODE : COMCODE */
		SELECT 
			STATS_HH, ADVRTS_TP_CODE, START_DATE, END_DATE
		FROM (
			SELECT CODE_ID STATS_HH
			FROM dreamsearch.MOBON_COM_CODE
			WHERE CODE_TP_ID='ADVRTS_TP_CODE' AND CODE_ID &lt; 24
		)a, (
			SELECT
				code_id AS ADVRTS_TP_CODE
				, CONCAT(DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m'),'01')START_DATE
				, DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')END_DATE
			FROM dreamsearch.MOBON_COM_CODE
			WHERE CODE_TP_ID = 'ADVRTS_TP_CODE' AND CODE_VAL NOT IN ('ST')
			ORDER BY code_id
		)b;
	</select>
	
	<update id="update_TRGT_ADVER_MTH_HH_STATS" parameterType="Map">
		/* TRGT_ADVER_MTH_HH_STATS : TRGT_ADVER_MTH_HH_STATS */
		
		INSERT INTO BILLING.TRGT_ADVER_MTH_HH_STATS(
			STATS_MTH, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, ITL_TP_CODE, WKDAY_YN
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, EXHS_AMT
			, SESS_CNVRS_CNT, DIRECT_CNVRS_CNT, TOT_CNVRS_CNT
			, SESS_SALES_AMT, DIRECT_SALES_AMT, TOT_SALES_AMT
			, REG_USER_ID, REG_DTTM
			)
			SELECT * FROM (
				SELECT S.STATS_MTH, S.STATS_HH, S.PLTFOM_TP_CODE, S.ADVRTS_PRDT_CODE, S.ADVRTS_TP_CODE, S.ADVER_ID, S.ITL_TP_CODE, S.WKDAY_YN
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(EXHS_AMT)EXHS_AMT
					, IFNULL(SUM(SESS_CNVRS_CNT),0)SESS_CNVRS_CNT, IFNULL(SUM(DIRECT_CNVRS_CNT),0)DIRECT_CNVRS_CNT, IFNULL(SUM(TOT_CNVRS_CNT),0)TOT_CNVRS_CNT
					, IFNULL(SUM(SESS_SALES_AMT),0)SESS_SALES_AMT, IFNULL(SUM(DIRECT_SALES_AMT),0)DIRECT_SALES_AMT, IFNULL(SUM(TOT_SALES_AMT),0)TOT_SALES_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM
				FROM (
					SELECT
						DATE_FORMAT(REG_DTTM,'%Y%m') STATS_MTH, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, ITL_TP_CODE
						, CASE WHEN DAYOFWEEK(STATS_DTTM) IN (1,7) THEN 'N' ELSE 'Y' END WKDAY_YN
						
						, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)EXHS_AMT
						
					FROM BILLING.MOB_ADVER_HH_STATS
					WHERE ADVRTS_TP_CODE NOT IN('18') AND ITL_TP_CODE != 99
						AND STATS_DTTM =${END_DATE}
						AND STATS_HH =#{STATS_HH}
						AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
					GROUP BY
						DATE_FORMAT(REG_DTTM,'%Y%m'), STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, ITL_TP_CODE
						, CASE WHEN DAYOFWEEK(STATS_DTTM) IN (1,7) THEN 'N' ELSE 'Y' END
				) S LEFT JOIN (
					SELECT
						DATE_FORMAT(REG_DTTM,'%Y%m') STATS_MTH, DATE_FORMAT(REG_DTTM,'%H') STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, (
							SELECT CASE WHEN aa.userid LIKE ('%kakao%') THEN '03' WHEN aa.userid LIKE ('%daisy%') THEN '02' ELSE '01' END ITL_TP_CODE
							FROM dreamsearch.media_script aa
							WHERE aa.no=A.MEDIA_SCRIPT_NO
						) ITL_TP_CODE
						, CASE WHEN DAYOFWEEK(STATS_DTTM) IN (1,7) THEN 'N' ELSE 'Y' END WKDAY_YN
						
						, SUM(CASE WHEN SESION_SELNG_YN='Y' THEN ORDER_CNT ELSE 0 END)SESS_CNVRS_CNT
						, SUM(CASE WHEN DIRECT_YN='Y' THEN ORDER_CNT ELSE 0 END)DIRECT_CNVRS_CNT
						, SUM(ORDER_CNT)TOT_CNVRS_CNT
						, SUM(CASE WHEN SESION_SELNG_YN='Y' THEN ORDER_AMT ELSE 0 END)SESS_SALES_AMT
						, SUM(CASE WHEN DIRECT_YN='Y' THEN ORDER_AMT ELSE 0 END)DIRECT_SALES_AMT
						, SUM(ORDER_AMT)TOT_SALES_AMT
						
					FROM BILLING.MOB_CNVRS_NCL A
					WHERE ADVRTS_TP_CODE NOT IN('18')
						AND STATS_DTTM =${END_DATE}
						AND DATE_FORMAT(REG_DTTM,'%H') =#{STATS_HH}
						AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
					GROUP BY
						DATE_FORMAT(REG_DTTM,'%Y%m'), STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, ITL_TP_CODE
						, CASE WHEN DAYOFWEEK(STATS_DTTM) IN (1,7) THEN 'N' ELSE 'Y' END
				) C ON S.STATS_MTH=C.STATS_MTH AND S.STATS_HH=C.STATS_HH 
					AND S.PLTFOM_TP_CODE=C.PLTFOM_TP_CODE AND S.ADVRTS_PRDT_CODE=C.ADVRTS_PRDT_CODE 
					AND S.ADVRTS_TP_CODE=C.ADVRTS_TP_CODE AND S.ADVER_ID=C.ADVER_ID 
					AND S.ITL_TP_CODE=C.ITL_TP_CODE AND S.WKDAY_YN=C.WKDAY_YN
				GROUP BY S.STATS_MTH, S.STATS_HH, S.PLTFOM_TP_CODE, S.ADVRTS_PRDT_CODE, S.ADVRTS_TP_CODE, S.ADVER_ID, S.ITL_TP_CODE, S.WKDAY_YN
			) SS
		ON DUPLICATE KEY UPDATE
			TRGT_ADVER_MTH_HH_STATS.TOT_EPRS_CNT		= TRGT_ADVER_MTH_HH_STATS.TOT_EPRS_CNT + SS.TOT_EPRS_CNT
			, TRGT_ADVER_MTH_HH_STATS.PAR_EPRS_CNT		= TRGT_ADVER_MTH_HH_STATS.PAR_EPRS_CNT + SS.PAR_EPRS_CNT
			, TRGT_ADVER_MTH_HH_STATS.CLICK_CNT			= TRGT_ADVER_MTH_HH_STATS.CLICK_CNT + SS.CLICK_CNT
			, TRGT_ADVER_MTH_HH_STATS.EXHS_AMT			= TRGT_ADVER_MTH_HH_STATS.EXHS_AMT + SS.EXHS_AMT
			
			, TRGT_ADVER_MTH_HH_STATS.SESS_CNVRS_CNT	= TRGT_ADVER_MTH_HH_STATS.SESS_CNVRS_CNT + SS.SESS_CNVRS_CNT
			, TRGT_ADVER_MTH_HH_STATS.DIRECT_CNVRS_CNT	= TRGT_ADVER_MTH_HH_STATS.DIRECT_CNVRS_CNT + SS.DIRECT_CNVRS_CNT
			, TRGT_ADVER_MTH_HH_STATS.TOT_CNVRS_CNT		= TRGT_ADVER_MTH_HH_STATS.TOT_CNVRS_CNT + SS.TOT_CNVRS_CNT
			, TRGT_ADVER_MTH_HH_STATS.SESS_SALES_AMT	= TRGT_ADVER_MTH_HH_STATS.SESS_SALES_AMT + SS.SESS_SALES_AMT
			, TRGT_ADVER_MTH_HH_STATS.DIRECT_SALES_AMT	= TRGT_ADVER_MTH_HH_STATS.DIRECT_SALES_AMT + SS.DIRECT_SALES_AMT
			, TRGT_ADVER_MTH_HH_STATS.TOT_SALES_AMT		= TRGT_ADVER_MTH_HH_STATS.DIRECT_SALES_AMT + SS.TOT_SALES_AMT
			
			, TRGT_ADVER_MTH_HH_STATS.ALT_USER_ID		= 'BATCH'
			, TRGT_ADVER_MTH_HH_STATS.ALT_DTTM			= NOW()
		;
	</update>
	
	<select id="selectCNVRS_ADVERID_TOP1" resultType="Map">
		/* 임시 : 광고주카테고리 */
		SELECT s.*, @rank :=@rank+1 rank 
		FROM (
			SELECT STATS_DTTM, COUNT(*)CNT
			FROM BILLING.MOB_CNVRS_STATS s
			WHERE ADVER_ID='' 
			GROUP BY STATS_DTTM
			HAVING COUNT(*)>1000
			LIMIT 1
		)s, (SELECT @rank :=0 ) r 
		WHERE @rank=0 
	</select>
	
	<update id="updateCNVRS_ADVERID" parameterType="Map">
		/* 임시 : 광고주카테고리 */
		UPDATE BILLING.MOB_CNVRS_STATS A, (
			SELECT site_code, userid FROM dreamsearch.adsite UNION ALL SELECT site_code, userid FROM dreamsearch.iadsite
		)B 
		SET A.ADVER_ID=B.userid
		WHERE A.SITE_CODE=B.SITE_CODE
		AND A.STATS_DTTM = #{STATS_DTTM} AND ADVER_ID='';
		
		UPDATE BILLING.MOB_CNVRS_HH_STATS A, (
			SELECT site_code, userid FROM dreamsearch.adsite UNION ALL SELECT site_code, userid FROM dreamsearch.iadsite
		)B 
		SET A.ADVER_ID=B.userid
		WHERE A.SITE_CODE=B.SITE_CODE
		AND A.STATS_DTTM = #{STATS_DTTM} AND ADVER_ID='';
	</update>
	
	<update id="updateNCL_ABTEST_OLD" parameterType="Map">
	UPDATE
		BILLING.MOB_CNVRS_NCL_ABTEST A
			SET DEVICE_TP_CODE=CASE 
				WHEN INSTR(MOB_DEVICE,'m') THEN '02' ELSE '01' END
			, BROWSER_TP_CODE = CASE 
				WHEN INSTR(BR_NAME,'chrom') THEN '01' 
				WHEN INSTR(BR_NAME,'ie') THEN '02' 
				WHEN INSTR(BR_NAME,'safari') THEN '03' 
				WHEN INSTR(BR_NAME,'samsung') THEN '04' 
				WHEN INSTR(BR_NAME,'naver') THEN '05' 
				WHEN INSTR(BR_NAME,'facebook') THEN '06' ELSE '99' END
	WHERE STATS_DTTM IN(#{STATS_DTTM})
	</update>

	<update id="updateNCL_ABTEST" parameterType="Map">
	UPDATE
		BILLING.MOB_CNVRS_NCL_ABTEST A
			SET OS_TP_CODE='00'
	WHERE STATS_DTTM IN(#{STATS_DTTM})
	</update>
	
	<insert id="updateMOB_CNVRS_KPI_STATS" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_KPI_STATS(
			STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
			,ORDER_AMT,ORDER_CNT,ORDER_QY,TRGT_ORDER_AMT,TRGT_ORDER_CNT,TRGT_ORDER_QY
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
				)
			SELECT * FROM (
				SELECT 
						STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
						,SUM(ORDER_AMT     ) AS ORDER_AMT     
						,SUM(ORDER_CNT     ) AS ORDER_CNT     
						,SUM(ORDER_QY      ) AS ORDER_QY      
						,SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
						,SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
						,SUM(TRGT_ORDER_QY ) AS TRGT_ORDER_QY 
						,REG_USER_ID
						,REG_DTTM
						,'BATCH' as ALT_USER_ID
						,NOW() AS ALT_DTTM
					FROM BILLING.MOB_CNVRS_STATS S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A
					WHERE STATS_DTTM =#{STATS_DTTM}
						AND S.SITE_CODE=A.SITE_CODE					
					 GROUP BY
					 	STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
			) S
			ON DUPLICATE KEY UPDATE
					MOB_CNVRS_KPI_STATS.ORDER_AMT	=	S.ORDER_AMT
				,	MOB_CNVRS_KPI_STATS.ORDER_CNT	=	S.ORDER_CNT
				,	MOB_CNVRS_KPI_STATS.ORDER_QY	=	S.ORDER_QY
				,	MOB_CNVRS_KPI_STATS.TRGT_ORDER_AMT	=	S.TRGT_ORDER_AMT
				,	MOB_CNVRS_KPI_STATS.TRGT_ORDER_CNT	=	S.TRGT_ORDER_CNT
				,	MOB_CNVRS_KPI_STATS.TRGT_ORDER_QY	=	S.TRGT_ORDER_QY
				,	ALT_USER_ID='BATCH', ALT_DTTM=NOW()
				;
		]]>
	</insert>
	
	<update id="updatePCODE_RECOM_STATS" parameterType="Map">
		INSERT INTO BILLING.MOB_PCODE_RECOM_STATS(
			STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVRSB_TP_CODE, RECOM_TP_CODE, RECOM_ALGO_CODE, ITL_TP_CODE, SITE_CODE, PAR_NO, CLICK_PCODE
			, ADVER_ID, MEDIA_ID, CLICK_CNT, ADVRTS_AMT, REG_DTTM
			)
		SELECT * FROM (
			SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVRSB_TP_CODE, RECOM_TP_CODE, '99'RECOM_ALGO_CODE, ITL_TP_CODE, SITE_CODE, PAR_NO, PCODE, ADVER_ID, MEDIA_ID
				, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, MIN(REG_DTTM)REG_DTTM
				FROM (
						SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVRSB_TP_CODE
							, RECOM_TP_CODE
							, (SELECT CASE WHEN INSTR(userid,'kakao') THEN '03' WHEN INSTR(userid,'googlemedia') THEN '04' WHEN INSTR(userid,'igaworks') THEN '08' ELSE '01' END FROM dreamsearch.media_script WHERE NO=b.PAR_NO )ITL_TP_CODE
							, SITE_CODE, PAR_NO, PCODE, ADVER_ID, MEDIA_ID
							, CLICK_CNT, ADVRTS_AMT, REG_DTTM 
							FROM BILLING.MOB_PCODE_RECOM_STATS_20200921_bak b 
							WHERE STATS_DTTM= #{STATS_DTTM} AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}
				) A
			GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVRSB_TP_CODE, RECOM_TP_CODE, SITE_CODE, PAR_NO, PCODE, ADVER_ID, MEDIA_ID
		)A
		ON DUPLICATE KEY UPDATE CLICK_CNT=A.CLICK_CNT, ADVRTS_AMT=A.ADVRTS_AMT
		;
	</update>
	
	<update id="INSERT_RENEW_MIGRATION_DELETE1" parameterType="Map">
			DELETE FROM BILLING.MOB_CNVRS_RENEW_STATS 
				WHERE STATS_DTTM =#{STATS_DTTM} AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}; 
	</update>
	<update id="INSERT_RENEW_MIGRATION_DELETE2" parameterType="Map">
			DELETE FROM BILLING.MOB_CNVRS_RENEW_ADVER_STATS 
				WHERE STATS_DTTM =#{STATS_DTTM} AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE};
	</update>
	<update id="INSERT_RENEW_MIGRATION_DELETE3" parameterType="Map">
			DELETE FROM BILLING.MOB_CNVRS_RENEW_MEDIA_STATS 
				WHERE STATS_DTTM =#{STATS_DTTM} AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE};
	</update>
	<update id="INSERT_RENEW_MIGRATION_DELETE4" parameterType="Map">
			DELETE FROM BILLING.MOB_CNVRS_RENEW_COM_STATS 
				WHERE STATS_DTTM =#{STATS_DTTM} AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE};
	</update>
	<update id="INSERT_RENEW_MIGRATION_DELETE5" parameterType="Map">
			DELETE FROM BILLING.MOB_CNVRS_RENEW_KPI_STATS 
				WHERE STATS_DTTM =#{STATS_DTTM} AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE};
	</update>
	
	<update id="INSERT_RENEW_MIGRATION1" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_RENEW_STATS (
		STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, PAR_NO, MEDIA_ID, 
		MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN,
		ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID 
		) 
		SELECT * FROM (
			SELECT 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, PAR_NO, MEDIA_ID, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, HHSTATS.REG_USER_ID  
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS HHSTATS WHERE STATS_DTTM =#{STATS_DTTM}
				AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}
			GROUP BY
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, PAR_NO, MEDIA_ID, ITL_TP_CODE, TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
		]]>
	</update>

	<update id="INSERT_RENEW_MIGRATION2" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_RENEW_ADVER_STATS (
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE,
		MOB_ORDER_YN, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		)
		SELECT * FROM (
			SELECT 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, HHSTATS.REG_USER_ID  
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS HHSTATS WHERE STATS_DTTM =#{STATS_DTTM}
				AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}
			GROUP BY 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT		
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_ADVER_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_ADVER_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_ADVER_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_ADVER_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_ADVER_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_ADVER_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
		]]>
	</update>

	<update id="INSERT_RENEW_MIGRATION3" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_RENEW_MEDIA_STATS(
				STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, MEDIA_TP_CODE
		)
		SELECT * FROM (
			SELECT 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, REG_USER_ID, MEDIA_TP_CODE
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS HHSTATS WHERE STATS_DTTM =#{STATS_DTTM}
				AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}
			GROUP BY
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_MEDIA_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_MEDIA_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_MEDIA_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_MEDIA_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_MEDIA_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_MEDIA_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
		]]>
	</update>

	<update id="INSERT_RENEW_MIGRATION4" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_RENEW_COM_STATS(
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, MEDIA_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN,
		ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		) 
		SELECT * FROM (
			SELECT 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, MEDIA_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, REG_USER_ID
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS HHSTATS WHERE STATS_DTTM =#{STATS_DTTM}
				AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}
			GROUP BY
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, MEDIA_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_COM_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_COM_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_COM_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_COM_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_COM_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_COM_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
		]]>
	</update>
	
	<update id="INSERT_RENEW_MIGRATION5" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_RENEW_KPI_STATS (
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
		, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		)
			SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, IFNULL(KPI_NO,0)KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
			, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
			, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
			FROM (
				SELECT
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
				, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT     ) AS ORDER_AMT
				, SUM(ORDER_CNT     ) AS ORDER_CNT
				, SUM(ORDER_QY      ) AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
				, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, SUM(TRGT_ORDER_QY ) AS TRGT_ORDER_QY
				, REG_USER_ID
				FROM BILLING.MOB_CNVRS_RENEW_HH_STATS HHSTATS LEFT JOIN (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A
					ON CONVERT(HHSTATS.SITE_CODE USING EUCKR)=A.SITE_CODE 
				WHERE STATS_DTTM =#{STATS_DTTM}
					AND ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}
			GROUP BY
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
				, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
			) RESULT
		ON  DUPLICATE KEY UPDATE
		MOB_CNVRS_RENEW_KPI_STATS.ORDER_AMT = RESULT.ORDER_AMT
		, MOB_CNVRS_RENEW_KPI_STATS.ORDER_CNT = RESULT.ORDER_CNT
		, MOB_CNVRS_RENEW_KPI_STATS.ORDER_QY  = RESULT.ORDER_QY
		, MOB_CNVRS_RENEW_KPI_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT
		, MOB_CNVRS_RENEW_KPI_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT
		, MOB_CNVRS_RENEW_KPI_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
		;
		]]>
	</update>
	
	<update id="MOB_CTGR_STATS_MIGRATION" parameterType="Map">
	<![CDATA[
		
		INSERT INTO BILLING.MOB_CTGR_STATS (
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE,
		TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, 
		MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT,
		REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
		)
		SELECT  * FROM (
		SELECT MAS.STATS_DTTM, MAS.PLTFOM_TP_CODE, MAS.ADVRTS_PRDT_CODE , MAS.ADVRTS_TP_CODE, MCUI.CTGR_SEQ, MAS.ITL_TP_CODE,
				SUM(MAS.TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(MAS.PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(MAS.CLICK_CNT) AS CLICK_CNT , SUM(MAS.ADVRTS_AMT) AS ADVRTS_AMT,
				SUM(MAS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, SUM(MAS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT,  SUM(MAS.TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT ,SUM(MAS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT,
				SUM(MAS.TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT , MAS.REG_USER_ID, MAS.REG_DTTM , MAS.ALT_USER_ID, MAS.ALT_DTTM
		FROM BILLING.MOB_ADVER_STATS AS MAS 
		INNER JOIN dreamsearch.MOB_CTGR_USER_INFO  MCUI ON MAS.ADVER_ID = MCUI.USER_ID
		WHERE MAS.STATS_DTTM = #{STATS_DTTM}
		AND MAS.ADVRTS_TP_CODE= #{ADVRTS_TP_CODE}
		GROUP BY STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ , ITL_TP_CODE
		) RESULT
		ON DUPLICATE KEY UPDATE 
		MOB_CTGR_STATS.TOT_EPRS_CNT = RESULT.TOT_EPRS_CNT, 
		MOB_CTGR_STATS.PAR_EPRS_CNT = RESULT.PAR_EPRS_CNT, 
		MOB_CTGR_STATS.CLICK_CNT = RESULT.CLICK_CNT, 
		MOB_CTGR_STATS.ADVRTS_AMT = RESULT.ADVRTS_AMT, 
		MOB_CTGR_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT,
		MOB_CTGR_STATS.TRGT_EPRS_CNT = RESULT.TRGT_EPRS_CNT,
		MOB_CTGR_STATS.TRGT_PAR_EPRS_CNT = RESULT.TRGT_PAR_EPRS_CNT,
		MOB_CTGR_STATS.TRGT_CLICK_CNT = RESULT.TRGT_CLICK_CNT,
		MOB_CTGR_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT
		;
	]]>
	</update>

	<update id="MOB_CTGR_HH_STATS_MIGRATION" parameterType="Map">
	<![CDATA[
		
		INSERT INTO BILLING.MOB_CTGR_HH_STATS 
		(
			STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, 
			ADVRTS_AMT, MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID,REG_DTTM, ALT_USER_ID, ALT_DTTM
		)
		SELECT * FROM (	
			SELECT MAHS.STATS_DTTM, MAHS.STATS_HH ,MAHS.PLTFOM_TP_CODE, MAHS.ADVRTS_PRDT_CODE , MAHS.ADVRTS_TP_CODE, MCUI.CTGR_SEQ, MAHS.ITL_TP_CODE,
				SUM(MAHS.TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(MAHS.PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(MAHS.CLICK_CNT) AS CLICK_CNT , SUM(MAHS.ADVRTS_AMT) AS ADVRTS_AMT,
				SUM(MAHS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, SUM(MAHS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT,  SUM(MAHS.TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT ,SUM(MAHS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT,
				SUM(MAHS.TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT , MAHS.REG_USER_ID, MAHS.REG_DTTM , MAHS.ALT_USER_ID, MAHS.ALT_DTTM
			FROM BILLING.MOB_ADVER_HH_STATS AS MAHS 
			INNER JOIN dreamsearch.MOB_CTGR_USER_INFO  MCUI ON MAHS.ADVER_ID = MCUI.USER_ID
			WHERE MAHS.STATS_DTTM = #{STATS_DTTM}
			AND MAHS.STATS_HH = #{STATS_HH}
			GROUP BY STATS_DTTM , STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ , ITL_TP_CODE
		) RESULT
		ON DUPLICATE KEY UPDATE 
		MOB_CTGR_HH_STATS.TOT_EPRS_CNT = RESULT.TOT_EPRS_CNT, 
		MOB_CTGR_HH_STATS.PAR_EPRS_CNT = RESULT.PAR_EPRS_CNT, 
		MOB_CTGR_HH_STATS.CLICK_CNT = RESULT.CLICK_CNT, 
		MOB_CTGR_HH_STATS.ADVRTS_AMT = RESULT.ADVRTS_AMT, 
		MOB_CTGR_HH_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT,
		MOB_CTGR_HH_STATS.TRGT_EPRS_CNT = RESULT.TRGT_EPRS_CNT,
		MOB_CTGR_HH_STATS.TRGT_PAR_EPRS_CNT = RESULT.TRGT_PAR_EPRS_CNT,
		MOB_CTGR_HH_STATS.TRGT_CLICK_CNT = RESULT.TRGT_CLICK_CNT,
		MOB_CTGR_HH_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT
		;
	]]>
	</update>

	<update id="MOB_CNVRS_RENEW_CTGR_STATS_MIGRATION" parameterType="Map">
	<![CDATA[
		
		INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_STATS (
		 STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN,
		 ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
		) 
		SELECT * FROM (
			SELECT MCRS.STATS_DTTM , MCRS.PLTFOM_TP_CODE, MCRS.ADVRTS_PRDT_CODE, MCRS.ADVRTS_TP_CODE, 
			MCUI.CTGR_SEQ, MCRS.ITL_TP_CODE, MCRS.TRK_TP_CODE, MCRS.SESION_SELNG_YN, MCRS.SESION_SELNG2_YN, MCRS.DIRECT_YN, MCRS.CNVRS_TP_CODE, MCRS.MOB_ORDER_YN,
		 	 SUM(MCRS.ORDER_AMT) AS ORDER_AMT, SUM(MCRS.ORDER_CNT) AS ORDER_CNT, SUM(MCRS.ORDER_QY) AS ORDER_QY,
		 	  SUM(MCRS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(MCRS.TRGT_ORDER_QY) AS TRGT_ORDER_QY,
		 	 MCRS.REG_USER_ID, MCRS.REG_DTTM
			FROM BILLING.MOB_CNVRS_RENEW_STATS MCRS
			INNER JOIN dreamsearch.MOB_CTGR_USER_INFO MCUI ON MCRS.ADVER_ID = MCUI.USER_ID
			WHERE MCRS.STATS_DTTM = #{STATS_DTTM}
			AND MCRS.ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) RESULT 
		ON DUPLICATE KEY UPDATE 
		MOB_CNVRS_RENEW_CTGR_STATS.ORDER_AMT = RESULT.ORDER_AMT, 
		MOB_CNVRS_RENEW_CTGR_STATS.ORDER_CNT = RESULT.ORDER_CNT,
		MOB_CNVRS_RENEW_CTGR_STATS.ORDER_QY = RESULT.ORDER_QY,
		MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
		MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
		MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY;
	]]>
	</update>

	<update id="MOB_CNVRS_RENEW_CTGR_HH_STATS_MIGRATION" parameterType="Map">
	<![CDATA[
	
	INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_HH_STATS (
		STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN,
		 ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTMMOB_CTGR_HH_STATS
	)
	SELECT * FROM (
			SELECT MCRHS.STATS_DTTM, MCRHS.STATS_HH, MCRHS.PLTFOM_TP_CODE, MCRHS.ADVRTS_PRDT_CODE, MCRHS.ADVRTS_TP_CODE, 
			MCUI.CTGR_SEQ, MCRHS.ITL_TP_CODE, MCRHS.TRK_TP_CODE, MCRHS.SESION_SELNG_YN, MCRHS.SESION_SELNG2_YN, MCRHS.DIRECT_YN, MCRHS.CNVRS_TP_CODE, MCRHS.MOB_ORDER_YN,
		 	 SUM(MCRHS.ORDER_AMT) AS ORDER_AMT, SUM(MCRHS.ORDER_CNT) AS ORDER_CNT, SUM(MCRHS.ORDER_QY) AS ORDER_QY,
		 	  SUM(MCRHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(MCRHS.TRGT_ORDER_QY) AS TRGT_ORDER_QY,
		 	 MCRHS.REG_USER_ID, MCRHS.REG_DTTM
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS MCRHS
			INNER JOIN dreamsearch.MOB_CTGR_USER_INFO MCUI ON MCRHS.ADVER_ID = MCUI.USER_ID
			WHERE MCRHS.STATS_DTTM = #{STATS_DTTM}
			AND MCRHS.STATS_HH = #{STATS_HH}
			GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
	)RESULT 	
	ON DUPLICATE KEY UPDATE 
		MOB_CNVRS_RENEW_CTGR_HH_STATS.ORDER_AMT = RESULT.ORDER_AMT, 
		MOB_CNVRS_RENEW_CTGR_HH_STATS.ORDER_CNT = RESULT.ORDER_CNT,
		MOB_CNVRS_RENEW_CTGR_HH_STATS.ORDER_QY = RESULT.ORDER_QY,
		MOB_CNVRS_RENEW_CTGR_HH_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
		MOB_CNVRS_RENEW_CTGR_HH_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
		MOB_CNVRS_RENEW_CTGR_HH_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY;
	]]>
	</update>
	
	<update id="MOB_MEDIA_SCRIPT_CHRG_STATS_MIGRATION" parameterType = "Map">
		UPDATE BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS MMSCS JOIN (
		SELECT A.STATS_DTTM , A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE,A.MEDIA_SCRIPT_NO, A.ITL_TP_CODE ,A.PAR_EPRS_CNT,A.TOT_EPRS_CNT 
			FROM (
				SELECT 'S' G, STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
					, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
					FROM BILLING.MOB_MEDIA_SCRIPT_STATS WHERE STATS_DTTM = #{STATS_DTTM}
					AND MEDIA_SCRIPT_NO IN (
						SELECT NO FROM dreamsearch.media_script WHERE EPRS_REST_RATE!=100)
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			) A, (
				SELECT 'C', STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
					, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
					FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS WHERE STATS_DTTM =  #{STATS_DTTM} 
					AND MEDIA_SCRIPT_NO IN (
						SELECT NO FROM dreamsearch.media_script WHERE EPRS_REST_RATE!=100
						)
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			)B
			WHERE A.STATS_DTTM=B.STATS_DTTM AND A.PLTFOM_TP_CODE=B.PLTFOM_TP_CODE AND A.ADVRTS_PRDT_CODE=B.ADVRTS_PRDT_CODE AND A.ADVRTS_TP_CODE=B.ADVRTS_TP_CODE AND A.MEDIA_SCRIPT_NO=B.MEDIA_SCRIPT_NO AND A.ITL_TP_CODE=B.ITL_TP_CODE 
			AND A.PAR_EPRS_CNT <![CDATA[ < ]]> B.PAR_EPRS_CNT
		) MMSS 
		    ON MMSCS.STATS_DTTM = MMSS.STATS_DTTM
			AND MMSCS.PLTFOM_TP_CODE = MMSS.PLTFOM_TP_CODE
			AND MMSCS.ADVRTS_PRDT_CODE = MMSS.ADVRTS_PRDT_CODE
			AND MMSCS.ADVRTS_TP_CODE = MMSS.ADVRTS_TP_CODE
			AND MMSCS.MEDIA_SCRIPT_NO = MMSS.MEDIA_SCRIPT_NO
			AND MMSCS.ITL_TP_CODE = MMSS.ITL_TP_CODE
		   SET MMSCS.PAR_EPRS_CNT = MMSS.PAR_EPRS_CNT
		    , MMSCS.TOT_EPRS_CNT = MMSS.TOT_EPRS_CNT
		     , MMSCS.ALT_USER_ID ='BATCH'
		     , MMSCS.ALT_DTTM = NOW()
		  WHERE MMSCS.STATS_DTTM = #{STATS_DTTM}
	</update>

	<update id="MOB_MEDIA_CHRG_STATS_MIGRATION" parameterType = "Map">
	UPDATE BILLING.MOB_MEDIA_CHRG_STATS MMCS JOIN (
			SELECT STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE, SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT, 
			SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
 			FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS
			WHERE STATS_DTTM = #{STATS_DTTM} 
			GROUP BY STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE
		) MMSCS 
		ON MMCS.STATS_DTTM = MMSCS.STATS_DTTM
		AND MMCS.PLTFOM_TP_CODE = MMSCS.PLTFOM_TP_CODE
		AND MMCS.ADVRTS_PRDT_CODE = MMSCS.ADVRTS_PRDT_CODE
		AND MMCS.ADVRTS_TP_CODE = MMSCS.ADVRTS_TP_CODE
		AND MMCS.MEDIA_ID = MMSCS.MEDIA_ID
		AND MMCS.ITL_TP_CODE = MMSCS.ITL_TP_CODE
		SET MMCS.PAR_EPRS_CNT = MMSCS.PAR_EPRS_CNT
			, MMCS.TOT_EPRS_CNT = MMSCS.TOT_EPRS_CNT
			, MMCS.ALT_USER_ID ='BATCH'
		    , MMCS.ALT_DTTM = NOW() 
		WHERE MMCS.STATS_DTTM = #{STATS_DTTM}  ;
	</update>

	<update id="MOB_CNVRS_RENEW_CTGR_MTH_STATS" parameterType = "Map">
	INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_MTH_STATS (
		STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
			, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
	)
	SELECT * FROM (
		SELECT DATE_FORMAT(MCRSHS.STATS_DTTM, '%Y%m') AS STATS_MTH, MCRSHS.PLTFOM_TP_CODE, MCRSHS.ADVRTS_PRDT_CODE, MCRSHS.ADVRTS_TP_CODE, MCRSHS.CTGR_SEQ, MCRSHS.TRK_TP_CODE, MCRSHS.ITL_TP_CODE
		, MCRSHS.SESION_SELNG_YN, MCRSHS.SESION_SELNG2_YN, MCRSHS.DIRECT_YN, MCRSHS.CNVRS_TP_CODE, MCRSHS.MOB_ORDER_YN
		, SUM(MCRSHS.ORDER_AMT) AS ORDER_AMT , SUM(MCRSHS.ORDER_CNT) AS ORDER_CNT, IF(SUM(ORDER_QY) > 2000000000 , 2000000000 , SUM(ORDER_QY))  AS ORDER_QY, SUM(MCRSHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRSHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT,
		   IF(SUM(TRGT_ORDER_QY) > 2000000000 , 2000000000 , SUM(TRGT_ORDER_QY)) AS TRGT_ORDER_QY
		, MCRSHS.REG_USER_ID, MCRSHS.REG_DTTM  
		FROM BILLING.MOB_CNVRS_RENEW_CTGR_STATS AS MCRSHS
		WHERE MCRSHS.STATS_DTTM = ${STATS_DTTM}
		AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE} 
		GROUP BY DATE_FORMAT(STATS_DTTM, '%Y%m') , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, CTGR_SEQ, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_AMT = MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_AMT + RESULT.ORDER_AMT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_CNT = MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_CNT +RESULT.ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_QY = MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_QY + RESULT.ORDER_QY, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_AMT = MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_AMT + RESULT.TRGT_ORDER_AMT, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_CNT = MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_CNT + RESULT.TRGT_ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_QY = MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_QY + RESULT.TRGT_ORDER_QY,  
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.REG_DTTM = RESULT.REG_DTTM, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ALT_USER_ID = 'BATCH',
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ALT_DTTM = NOW();	 
	</update>

	<update id="MOB_CTGR_MTH_STATS" parameterType = "Map">
	INSERT INTO BILLING.MOB_CTGR_MTH_STATS ( 
	STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, 
	MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM
		)
	SELECT * FROM (
		SELECT DATE_FORMAT(MCHS.STATS_DTTM,'%Y%m') AS STATS_MTH, MCHS.PLTFOM_TP_CODE, MCHS.ADVRTS_PRDT_CODE, MCHS.ADVRTS_TP_CODE, MCHS.CTGR_SEQ, MCHS.ITL_TP_CODE,
		SUM(MCHS.TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(MCHS.PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(MCHS.CLICK_CNT) AS CLICK_CNT, SUM(MCHS.ADVRTS_AMT) AS ADVRTS_AMT, SUM(MCHS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, 
		SUM(MCHS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT, SUM(MCHS.TRGT_PAR_EPRS_CNT) AS  TRGT_PAR_EPRS_CNT, SUM(MCHS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT, SUM(MCHS.TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT,
		MCHS.REG_USER_ID, MCHS.REG_DTTM 
		FROM BILLING.MOB_CTGR_STATS AS MCHS
		WHERE MCHS.STATS_DTTM = ${STATS_DTTM}
		AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE} 
		GROUP BY DATE_FORMAT(MCHS.STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CTGR_MTH_STATS.TOT_EPRS_CNT = MOB_CTGR_MTH_STATS.TOT_EPRS_CNT + RESULT.TOT_EPRS_CNT,
	MOB_CTGR_MTH_STATS.PAR_EPRS_CNT = MOB_CTGR_MTH_STATS.PAR_EPRS_CNT + RESULT.PAR_EPRS_CNT,
	MOB_CTGR_MTH_STATS.CLICK_CNT = MOB_CTGR_MTH_STATS.CLICK_CNT + RESULT.CLICK_CNT,
	MOB_CTGR_MTH_STATS.ADVRTS_AMT = MOB_CTGR_MTH_STATS.ADVRTS_AMT + RESULT.ADVRTS_AMT,
	MOB_CTGR_MTH_STATS.MEDIA_PYMNT_AMT = MOB_CTGR_MTH_STATS.MEDIA_PYMNT_AMT + RESULT.MEDIA_PYMNT_AMT,
	MOB_CTGR_MTH_STATS.TRGT_EPRS_CNT = MOB_CTGR_MTH_STATS.TRGT_EPRS_CNT + RESULT.TRGT_EPRS_CNT,
	MOB_CTGR_MTH_STATS.TRGT_PAR_EPRS_CNT = MOB_CTGR_MTH_STATS.TRGT_PAR_EPRS_CNT + RESULT.TRGT_PAR_EPRS_CNT,
	MOB_CTGR_MTH_STATS.TRGT_CLICK_CNT = MOB_CTGR_MTH_STATS.TRGT_CLICK_CNT + RESULT.TRGT_CLICK_CNT,
	MOB_CTGR_MTH_STATS.TRGT_ADVRTS_AMT = MOB_CTGR_MTH_STATS.TRGT_ADVRTS_AMT + RESULT.TRGT_ADVRTS_AMT,
	MOB_CTGR_MTH_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CTGR_MTH_STATS.REG_DTTM = RESULT.REG_DTTM,
	MOB_CTGR_MTH_STATS.ALT_USER_ID = 'BATCH',
	MOB_CTGR_MTH_STATS.ALT_DTTM = NOW(); 
	</update>

	<update id="MOB_MEDIA_SCRIPT_MTH_STATS" parameterType = "Map">
	INSERT INTO BILLING.MOB_MEDIA_SCRIPT_MTH_STATS(
		STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, RETRN_CNT, AVAL_CNT
		) SELECT * FROM ( 
		SELECT DATE_FORMAT(STATS_DTTM , '%Y%m') AS STATS_MTH , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID , 
		SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(CLICK_CNT) AS CLICK_CNT, SUM(ADVRTS_AMT) AS ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, 
		SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT , SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT , SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT , SUM(RETRN_CNT) AS RETRN_CNT, SUM(AVAL_CNT) AS AVAL_CNT
		FROM BILLING.MOB_MEDIA_SCRIPT_STATS
		WHERE 1=1
		AND STATS_DTTM = ${STATS_DTTM} 
		AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		GROUP BY DATE_FORMAT(STATS_DTTM , '%Y%m'),PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID ) S
		ON DUPLICATE KEY UPDATE 
		MOB_MEDIA_SCRIPT_MTH_STATS.TOT_EPRS_CNT 		= MOB_MEDIA_SCRIPT_MTH_STATS.TOT_EPRS_CNT + S.TOT_EPRS_CNT 
		,MOB_MEDIA_SCRIPT_MTH_STATS.PAR_EPRS_CNT 		= MOB_MEDIA_SCRIPT_MTH_STATS.PAR_EPRS_CNT + S.PAR_EPRS_CNT 			
		,MOB_MEDIA_SCRIPT_MTH_STATS.CLICK_CNT 			= MOB_MEDIA_SCRIPT_MTH_STATS.CLICK_CNT + S.CLICK_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.ADVRTS_AMT 			= MOB_MEDIA_SCRIPT_MTH_STATS.ADVRTS_AMT + S.ADVRTS_AMT
		,MOB_MEDIA_SCRIPT_MTH_STATS.MEDIA_PYMNT_AMT 		= MOB_MEDIA_SCRIPT_MTH_STATS.MEDIA_PYMNT_AMT + S.MEDIA_PYMNT_AMT			
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_EPRS_CNT 		= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_EPRS_CNT + S.TRGT_EPRS_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_PAR_EPRS_CNT 	= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_PAR_EPRS_CNT + S.TRGT_PAR_EPRS_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_CLICK_CNT		= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_CLICK_CNT + S.TRGT_CLICK_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_ADVRTS_AMT 		= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_ADVRTS_AMT + S.TRGT_ADVRTS_AMT
		,MOB_MEDIA_SCRIPT_MTH_STATS.RETRN_CNT		= MOB_MEDIA_SCRIPT_MTH_STATS.RETRN_CNT + S.RETRN_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.AVAL_CNT 		= MOB_MEDIA_SCRIPT_MTH_STATS.AVAL_CNT + S.AVAL_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.ALT_USER_ID 			= 'BATCH'
		,MOB_MEDIA_SCRIPT_MTH_STATS.ALT_DTTM 			= NOW()
	</update>
	
	<select id="selectAdverIdsAdverStats" parameterType="Map" resultType="Map">
		SELECT DISTINCT ADVER_ID
		FROM dreamsearch.ACTION_PCODE_RECOM_LOG
		WHERE STATS_DTTM = ${STATS_DTTM};
	</select>
	
	<update id="migrationUniqClickRenew" parameterType = "Map">
		INSERT INTO BILLING.MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS 
			(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, IP, ITL_TP_CODE, UNIQUE_CNT, TOT_CLICK_CNT, ADVRTS_AMT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_DTTM, ALT_DTTM, ADVER_ID)
		SELECT * FROM 
			(SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, IP, ITL_TP_CODE, UNIQUE_CNT, TOT_CLICK_CNT, ADVRTS_AMT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_DTTM, ALT_DTTM, ADVER_ID
			FROM BILLING.MOB_CAMP_MEDIA_UNIQ_CLICK_STATS
			WHERE STATS_DTTM =  ${STATS_DTTM} AND ADVER_ID = #{ADVER_ID}
			GROUP BY SITE_CODE, IP, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE) RESULT
		ON DUPLICATE KEY UPDATE
			MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TOT_CLICK_CNT = RESULT.TOT_CLICK_CNT
			, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.ADVRTS_AMT = RESULT.ADVRTS_AMT
			, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_CLICK_CNT = RESULT.TRGT_CLICK_CNT
			, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT
			, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.ALT_DTTM = RESULT.ALT_DTTM;
		
	</update>
	
	<update id="migrationUniqClickRenewUseNo" parameterType = "Map">
		INSERT INTO BILLING.MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS 
			(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, IP, ITL_TP_CODE, UNIQUE_CNT, TOT_CLICK_CNT, ADVRTS_AMT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_DTTM, ALT_DTTM, ADVER_ID)
		SELECT * FROM 
			(SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, IP, ITL_TP_CODE, UNIQUE_CNT, TOT_CLICK_CNT, ADVRTS_AMT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_DTTM, ALT_DTTM, ADVER_ID
			FROM BILLING.MOB_CAMP_MEDIA_UNIQ_CLICK_STATS
			WHERE `NO` BETWEEN ${START_NO} AND  ${END_NO}
			<choose>
				<when test='MODE.equals("other")'>
					AND STATS_DTTM = 20211209
				</when>
				<otherwise>
					AND STATS_DTTM != 20211209
				</otherwise>
			</choose>
			) RESULT
		<choose>
			<when test='MODE.equals("other")'>
				ON DUPLICATE KEY UPDATE
					MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TOT_CLICK_CNT = MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TOT_CLICK_CNT + RESULT.TOT_CLICK_CNT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.ADVRTS_AMT = MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.ADVRTS_AMT + RESULT.ADVRTS_AMT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_CLICK_CNT = MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_CLICK_CNT + RESULT.TRGT_CLICK_CNT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_ADVRTS_AMT = MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_ADVRTS_AMT + RESULT.TRGT_ADVRTS_AMT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.ALT_DTTM = RESULT.ALT_DTTM
			</when>
			<otherwise>
				ON DUPLICATE KEY UPDATE
					MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TOT_CLICK_CNT = RESULT.TOT_CLICK_CNT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.ADVRTS_AMT = RESULT.ADVRTS_AMT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_CLICK_CNT = RESULT.TRGT_CLICK_CNT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT
					, MOB_CAMP_MEDIA_UNIQCLICK_RENEW_STATS.ALT_DTTM = RESULT.ALT_DTTM
			</otherwise>
		</choose>
		;
	</update>

	<update id="migrationMediaChrgStats" parameterType="Map">
		UPDATE BILLING.MOB_MEDIA_CHRG_STATS MMCS JOIN (
			SELECT
				STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE,
				SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(CLICK_CNT) AS CLICK_CNT,
				SUM(ADVRTS_AMT) AS ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT,
				SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT
			FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS
			WHERE
		    	STATS_DTTM = #{STATS_DTTM}
			GROUP BY
		    	STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE
			) MMSCS
			ON MMCS.STATS_DTTM = MMSCS.STATS_DTTM
				AND MMCS.PLTFOM_TP_CODE = MMSCS.PLTFOM_TP_CODE
				AND MMCS.ADVRTS_PRDT_CODE = MMSCS.ADVRTS_PRDT_CODE
				AND MMCS.ADVRTS_TP_CODE = MMSCS.ADVRTS_TP_CODE
				AND MMCS.MEDIA_ID = MMSCS.MEDIA_ID
				AND MMCS.ITL_TP_CODE = MMSCS.ITL_TP_CODE
		SET MMCS.TOT_EPRS_CNT = MMSCS.TOT_EPRS_CNT
				, MMCS.PAR_EPRS_CNT = MMSCS.PAR_EPRS_CNT
				, MMCS.CLICK_CNT = MMSCS.CLICK_CNT
				, MMCS.ADVRTS_AMT = MMSCS.ADVRTS_AMT
				, MMCS.MEDIA_PYMNT_AMT = MMSCS.MEDIA_PYMNT_AMT
				, MMCS.TRGT_EPRS_CNT = MMSCS.TRGT_EPRS_CNT
				, MMCS.TRGT_PAR_EPRS_CNT = MMSCS.TRGT_PAR_EPRS_CNT
				, MMCS.TRGT_CLICK_CNT = MMSCS.TRGT_CLICK_CNT
				, MMCS.TRGT_ADVRTS_AMT = MMSCS.TRGT_ADVRTS_AMT
				, MMCS.ALT_USER_ID ='BATCH'
				, MMCS.ALT_DTTM = NOW()
		WHERE MMCS.STATS_DTTM = #{STATS_DTTM};
	</update>

	<update id="migrationMediaParWkStats" parameterType="Map">
		INSERT INTO BILLING.MOB_MEDIA_PAR_WK_STATS (
			STATS_DTTM, STATS_YTH, STATS_WK, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_PAR_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID,
			TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, REG_USER_ID)
		SELECT * FROM(
			SELECT
				MEDIASCRIPTSTATS.STATS_DTTM,
				MEDIASCRIPTSTATS.STATS_YTH,
				MEDIASCRIPTSTATS.STATS_WK,
				MEDIASCRIPTSTATS.PLTFOM_TP_CODE,
				MEDIASCRIPTSTATS.ADVRTS_PRDT_CODE,
				MEDIASCRIPTSTATS.ADVRTS_TP_CODE,
				MEDIASCRIPTSTATS.MEDIA_PAR_NO,
				MEDIASCRIPTSTATS.ITL_TP_CODE,
				MEDIASCRIPTSTATS.MEDIA_TP_CODE,
				MEDIASCRIPTSTATS.MEDIA_ID,
				SUM(MEDIASCRIPTSTATS.TOT_EPRS_CNT) AS TOT_EPRS_CNT,
				SUM(MEDIASCRIPTSTATS.PAR_EPRS_CNT) AS PAR_EPRS_CNT,
				SUM(MEDIASCRIPTSTATS.CLICK_CNT) AS CLICK_CNT,
				SUM(MEDIASCRIPTSTATS.ADVRTS_AMT) AS ADVRTS_AMT,
				MEDIASCRIPTSTATS.REG_USER_ID
			FROM (
				SELECT
					CONCAT(DATE_FORMAT(REG_DTTM,'%Y%m'),'01') AS STATS_DTTM ,DATE_FORMAT(STATS_DTTM,'%Y%m') AS STATS_YTH, WEEKOFYEAR(STATS_DTTM) AS STATS_WK,
					PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO AS MEDIA_PAR_NO, ITL_TP_CODE,
					MEDIA_TP_CODE, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, REG_USER_ID, REG_DTTM
				FROM BILLING.MOB_MEDIA_SCRIPT_STATS
				WHERE STATS_DTTM = #{STATS_DTTM}
			) MEDIASCRIPTSTATS
			GROUP BY STATS_YTH, STATS_WK, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, MEDIA_ID, ITL_TP_CODE, MEDIA_PAR_NO, ADVRTS_TP_CODE
		) RESULT
		ON DUPLICATE KEY UPDATE
			BILLING.MOB_MEDIA_PAR_WK_STATS.TOT_EPRS_CNT 	= BILLING.MOB_MEDIA_PAR_WK_STATS.TOT_EPRS_CNT + RESULT.TOT_EPRS_CNT
			,BILLING.MOB_MEDIA_PAR_WK_STATS.PAR_EPRS_CNT 	= BILLING.MOB_MEDIA_PAR_WK_STATS.PAR_EPRS_CNT + RESULT.PAR_EPRS_CNT
			,BILLING.MOB_MEDIA_PAR_WK_STATS.CLICK_CNT 		= BILLING.MOB_MEDIA_PAR_WK_STATS.CLICK_CNT + RESULT.CLICK_CNT
			,BILLING.MOB_MEDIA_PAR_WK_STATS.ADVRTS_AMT 		= BILLING.MOB_MEDIA_PAR_WK_STATS.ADVRTS_AMT + RESULT.ADVRTS_AMT
		;
	</update>

	<delete id="deleteMobMediaScriptMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_MEDIA_SCRIPT_MTH_STATS WHERE STATS_MTH = ${STATS_MTH} AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE} AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE} AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE};
	</delete>

	<update id="migrationMobMediaScriptMthStats" parameterType = "Map">
		INSERT INTO BILLING.MOB_MEDIA_SCRIPT_MTH_STATS
		    (STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, RETRN_CNT, AVAL_CNT)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM , '%Y%m') AS STATS_MTH , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID ,
				   SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(CLICK_CNT) AS CLICK_CNT, SUM(ADVRTS_AMT) AS ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT,
				   SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT , SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT , SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT , SUM(RETRN_CNT) AS RETRN_CNT, SUM(AVAL_CNT) AS AVAL_CNT
			FROM BILLING.MOB_MEDIA_SCRIPT_STATS
			WHERE 1=1
				AND STATS_DTTM = ${STATS_DTTM}
				AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
				AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
				AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM , '%Y%m'),PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
		) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_SCRIPT_MTH_STATS.TOT_EPRS_CNT 		= MOB_MEDIA_SCRIPT_MTH_STATS.TOT_EPRS_CNT + S.TOT_EPRS_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.PAR_EPRS_CNT 		= MOB_MEDIA_SCRIPT_MTH_STATS.PAR_EPRS_CNT + S.PAR_EPRS_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.CLICK_CNT 			= MOB_MEDIA_SCRIPT_MTH_STATS.CLICK_CNT + S.CLICK_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.ADVRTS_AMT 			= MOB_MEDIA_SCRIPT_MTH_STATS.ADVRTS_AMT + S.ADVRTS_AMT
			,MOB_MEDIA_SCRIPT_MTH_STATS.MEDIA_PYMNT_AMT 	= MOB_MEDIA_SCRIPT_MTH_STATS.MEDIA_PYMNT_AMT + S.MEDIA_PYMNT_AMT
			,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_EPRS_CNT 		= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_EPRS_CNT + S.TRGT_EPRS_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_PAR_EPRS_CNT 	= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_PAR_EPRS_CNT + S.TRGT_PAR_EPRS_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_CLICK_CNT		= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_CLICK_CNT + S.TRGT_CLICK_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_ADVRTS_AMT 	= MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_ADVRTS_AMT + S.TRGT_ADVRTS_AMT
			,MOB_MEDIA_SCRIPT_MTH_STATS.RETRN_CNT			= MOB_MEDIA_SCRIPT_MTH_STATS.RETRN_CNT + S.RETRN_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.AVAL_CNT 			= MOB_MEDIA_SCRIPT_MTH_STATS.AVAL_CNT + S.AVAL_CNT
			,MOB_MEDIA_SCRIPT_MTH_STATS.ALT_USER_ID 		= 'BATCH'
			,MOB_MEDIA_SCRIPT_MTH_STATS.ALT_DTTM 			= NOW()
		;
	</update>

	<delete id="deleteMobMediaMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_MEDIA_MTH_STATS WHERE STATS_MTH = ${STATS_MTH} AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE} AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE} AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE};
	</delete>

	<update id="migrationMobMediaMthStats" parameterType="Map">
		<![CDATA[
		INSERT INTO BILLING.MOB_MEDIA_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
				DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, MEDIA_ID
				, IF(SUM(TOT_EPRS_CNT) < 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) < 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) < 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_MEDIA_STATS A
			WHERE
			    STATS_DTTM = ${STATS_DTTM}
			  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
				AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
				AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, MEDIA_ID
		) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_MTH_STATS.TOT_EPRS_CNT			= MOB_MEDIA_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.PAR_EPRS_CNT			= MOB_MEDIA_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.CLICK_CNT				= MOB_MEDIA_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_MEDIA_MTH_STATS.ADVRTS_AMT			= MOB_MEDIA_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_MEDIA_MTH_STATS.MEDIA_PYMNT_AMT		= MOB_MEDIA_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_MTH_STATS.TRGT_EPRS_CNT			= MOB_MEDIA_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_PAR_EPRS_CNT		= MOB_MEDIA_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_CLICK_CNT		= MOB_MEDIA_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_ADVRTS_AMT		= MOB_MEDIA_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_MTH_STATS.ALT_USER_ID			= 'BATCH'
			, MOB_MEDIA_MTH_STATS.ALT_DTTM				= NOW()
		;
		]]>
	</update>

	<delete id="deleteMobCampMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_CAMP_MTH_STATS WHERE STATS_MTH = ${STATS_MTH} AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE} AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE} AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE};
	</delete>

	<update id="migrationMobCampMthStats" parameterType="Map">
		<![CDATA[
		INSERT INTO BILLING.MOB_CAMP_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, SITE_CODE
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT, TRGT_EPRS_CNT
			, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
				DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, SITE_CODE
				, IF(SUM(TOT_EPRS_CNT) < 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) < 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) < 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, 0 MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_CAMP_STATS A
			WHERE
			    STATS_DTTM = ${STATS_DTTM}
			  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
			  	AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
			  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, SITE_CODE
		) S
		ON DUPLICATE KEY UPDATE
			MOB_CAMP_MTH_STATS.TOT_EPRS_CNT			= MOB_CAMP_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_CAMP_MTH_STATS.PAR_EPRS_CNT		= MOB_CAMP_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_CAMP_MTH_STATS.CLICK_CNT			= MOB_CAMP_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_CAMP_MTH_STATS.ADVRTS_AMT			= MOB_CAMP_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_CAMP_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_CAMP_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_CAMP_MTH_STATS.TRGT_EPRS_CNT		= MOB_CAMP_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_CAMP_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_CAMP_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_CAMP_MTH_STATS.TRGT_CLICK_CNT		= MOB_CAMP_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_CAMP_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_CAMP_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_CAMP_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_CAMP_MTH_STATS.ALT_DTTM			= NOW()
		;
		]]>
	</update>

	<delete id="deleteMobAdverMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_ADVER_MTH_STATS WHERE STATS_MTH = ${STATS_MTH} AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE} AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE} AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE};
	</delete>

	<update id="migrationMobAdverMthStats" parameterType="Map">
		<![CDATA[
		INSERT INTO BILLING.MOB_ADVER_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, ADVER_ID
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT, TRGT_EPRS_CNT
			, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
				DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, ADVER_ID
				, IF(SUM(TOT_EPRS_CNT) < 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) < 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) < 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_ADVER_STATS A
			WHERE
			    STATS_DTTM = ${STATS_DTTM}
			 	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
				AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
				AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, ADVER_ID
		) S
		ON DUPLICATE KEY UPDATE
			MOB_ADVER_MTH_STATS.TOT_EPRS_CNT		= MOB_ADVER_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_ADVER_MTH_STATS.PAR_EPRS_CNT		= MOB_ADVER_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_ADVER_MTH_STATS.CLICK_CNT			= MOB_ADVER_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_ADVER_MTH_STATS.ADVRTS_AMT		= MOB_ADVER_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_ADVER_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_ADVER_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_ADVER_MTH_STATS.TRGT_EPRS_CNT		= MOB_ADVER_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_ADVER_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_ADVER_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_ADVER_MTH_STATS.TRGT_CLICK_CNT	= MOB_ADVER_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_ADVER_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_ADVER_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_ADVER_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_ADVER_MTH_STATS.ALT_DTTM			= NOW()
		;
		]]>
	</update>

	<delete id="deleteMobComStatsMthInfo" parameterType="Map">
		DELETE FROM BILLING.MOB_COM_STATS_MTH_INFO WHERE STATS_MTH = ${STATS_MTH} AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE} AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE} AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE};
	</delete>

	<update id="migrationMobComStatsMthInfo" parameterType="Map">
		<![CDATA[
		INSERT INTO BILLING.MOB_COM_STATS_MTH_INFO
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
				DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, IF(SUM(TOT_EPRS_CNT) < 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) < 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) < 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_COM_STATS_INFO A
			WHERE
			    STATS_DTTM = ${STATS_DTTM}
			  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
			  	AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
			  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		) S
		ON DUPLICATE KEY UPDATE
			MOB_COM_STATS_MTH_INFO.TOT_EPRS_CNT			= MOB_COM_STATS_MTH_INFO.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.PAR_EPRS_CNT		= MOB_COM_STATS_MTH_INFO.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.CLICK_CNT			= MOB_COM_STATS_MTH_INFO.CLICK_CNT+ S.CLICK_CNT
			, MOB_COM_STATS_MTH_INFO.ADVRTS_AMT			= MOB_COM_STATS_MTH_INFO.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_COM_STATS_MTH_INFO.MEDIA_PYMNT_AMT	= MOB_COM_STATS_MTH_INFO.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_COM_STATS_MTH_INFO.TRGT_EPRS_CNT		= MOB_COM_STATS_MTH_INFO.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_PAR_EPRS_CNT	= MOB_COM_STATS_MTH_INFO.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_CLICK_CNT		= MOB_COM_STATS_MTH_INFO.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_ADVRTS_AMT	= MOB_COM_STATS_MTH_INFO.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_COM_STATS_MTH_INFO.ALT_USER_ID		= 'BATCH'
			, MOB_COM_STATS_MTH_INFO.ALT_DTTM			= NOW()
		;
		]]>
	</update>

	<delete id="deleteMobCtgrMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_CTGR_MTH_STATS WHERE STATS_MTH = ${STATS_MTH} AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE} AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE} AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE};
	</delete>

	<update id="migrationMobCtgrMthStats" parameterType = "Map">
		INSERT INTO BILLING.MOB_CTGR_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT,
			MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM)
		SELECT * FROM (
			SELECT
				DATE_FORMAT(MCHS.STATS_DTTM,'%Y%m') AS STATS_MTH, MCHS.PLTFOM_TP_CODE, MCHS.ADVRTS_PRDT_CODE, MCHS.ADVRTS_TP_CODE, MCHS.CTGR_SEQ, MCHS.ITL_TP_CODE,
				SUM(MCHS.TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(MCHS.PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(MCHS.CLICK_CNT) AS CLICK_CNT, SUM(MCHS.ADVRTS_AMT) AS ADVRTS_AMT, SUM(MCHS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT,
				SUM(MCHS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT, SUM(MCHS.TRGT_PAR_EPRS_CNT) AS  TRGT_PAR_EPRS_CNT, SUM(MCHS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT, SUM(MCHS.TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT,
				MCHS.REG_USER_ID, MCHS.REG_DTTM
			FROM BILLING.MOB_CTGR_STATS AS MCHS
			WHERE
			    MCHS.STATS_DTTM = ${STATS_DTTM}
			  	AND MCHS.PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
				AND MCHS.ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
				AND MCHS.ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(MCHS.STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE
		) RESULT
		ON DUPLICATE KEY UPDATE
			MOB_CTGR_MTH_STATS.TOT_EPRS_CNT 		= MOB_CTGR_MTH_STATS.TOT_EPRS_CNT + RESULT.TOT_EPRS_CNT,
			MOB_CTGR_MTH_STATS.PAR_EPRS_CNT 		= MOB_CTGR_MTH_STATS.PAR_EPRS_CNT + RESULT.PAR_EPRS_CNT,
			MOB_CTGR_MTH_STATS.CLICK_CNT 			= MOB_CTGR_MTH_STATS.CLICK_CNT + RESULT.CLICK_CNT,
			MOB_CTGR_MTH_STATS.ADVRTS_AMT 			= MOB_CTGR_MTH_STATS.ADVRTS_AMT + RESULT.ADVRTS_AMT,
			MOB_CTGR_MTH_STATS.MEDIA_PYMNT_AMT 		= MOB_CTGR_MTH_STATS.MEDIA_PYMNT_AMT + RESULT.MEDIA_PYMNT_AMT,
			MOB_CTGR_MTH_STATS.TRGT_EPRS_CNT 		= MOB_CTGR_MTH_STATS.TRGT_EPRS_CNT + RESULT.TRGT_EPRS_CNT,
			MOB_CTGR_MTH_STATS.TRGT_PAR_EPRS_CNT 	= MOB_CTGR_MTH_STATS.TRGT_PAR_EPRS_CNT + RESULT.TRGT_PAR_EPRS_CNT,
			MOB_CTGR_MTH_STATS.TRGT_CLICK_CNT 		= MOB_CTGR_MTH_STATS.TRGT_CLICK_CNT + RESULT.TRGT_CLICK_CNT,
			MOB_CTGR_MTH_STATS.TRGT_ADVRTS_AMT 		= MOB_CTGR_MTH_STATS.TRGT_ADVRTS_AMT + RESULT.TRGT_ADVRTS_AMT,
			MOB_CTGR_MTH_STATS.REG_USER_ID 			= RESULT.REG_USER_ID,
			MOB_CTGR_MTH_STATS.REG_DTTM 			= RESULT.REG_DTTM,
			MOB_CTGR_MTH_STATS.ALT_USER_ID 			= 'BATCH',
			MOB_CTGR_MTH_STATS.ALT_DTTM 			= NOW();
	</update>

	<delete id="deleteMobMediaParMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_MEDIA_PAR_MTH_STATS WHERE STATS_MTH = ${STATS_MTH} AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE} AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE} AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE};
	</delete>

	<update id="migrationMobMediaParMthStats" parameterType="Map">
		<![CDATA[
		INSERT INTO BILLING.MOB_MEDIA_PAR_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, MEDIA_PAR_NO
			, MEDIA_ID, MEDIA_TP_CODE, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
			    DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, MEDIA_SCRIPT_NO MEDIA_PAR_NO, MEDIA_ID, MEDIA_TP_CODE
				, IF(SUM(TOT_EPRS_CNT) < 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) < 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) < 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_MEDIA_SCRIPT_STATS
			WHERE
			    STATS_DTTM = ${STATS_DTTM}
			  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
			  	AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
			  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, MEDIA_SCRIPT_NO
		) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_PAR_MTH_STATS.TOT_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.CLICK_CNT			= MOB_MEDIA_PAR_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_MEDIA_PAR_MTH_STATS.ADVRTS_AMT		= MOB_MEDIA_PAR_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_MEDIA_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_MEDIA_PAR_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_CLICK_CNT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_MEDIA_PAR_MTH_STATS.ALT_DTTM			= NOW()
		;
		]]>
	</update>

	<delete id="deleteMobCampParMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_CAMP_PAR_MTH_STATS
		WHERE
			STATS_MTH = ${STATS_MTH}
		  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
		  	AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
		  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		  	AND SITE_CODE IN (
				SELECT DISTINCT SITE_CODE FROM BILLING.MOB_CAMP_STATS
				WHERE
					STATS_DTTM = ${DELETE_DATE}
			  		AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
			  		AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
			  		AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		);
	</delete>

	<update id="migrationMobCampParMthStats" parameterType="Map">
		<![CDATA[
		INSERT INTO BILLING.MOB_CAMP_PAR_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, SITE_CODE, MEDIA_PAR_NO
			, ADVER_ID, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
			    DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, SITE_CODE, MEDIA_SCRIPT_NO MEDIA_PAR_NO
				, CASE WHEN ADVER_ID IS NULL OR ADVER_ID='' THEN '-' ELSE ADVER_ID END ADVER_ID, MEDIA_ID
				, IF(SUM(TOT_EPRS_CNT) < 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) < 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) < 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_CAMP_MEDIA_STATS A
			WHERE
			    STATS_DTTM = ${STATS_DTTM}
			  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
			  	AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
			  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
				AND SITE_CODE IN (
					SELECT DISTINCT SITE_CODE FROM BILLING.MOB_CAMP_STATS
					WHERE
						STATS_DTTM = ${STATS_DTTM}
					  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
						AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
						AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
				)
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO
		) S
		ON DUPLICATE KEY UPDATE
			MOB_CAMP_PAR_MTH_STATS.TOT_EPRS_CNT			= MOB_CAMP_PAR_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_CAMP_PAR_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.CLICK_CNT			= MOB_CAMP_PAR_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_CAMP_PAR_MTH_STATS.ADVRTS_AMT			= MOB_CAMP_PAR_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_CAMP_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_CAMP_PAR_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_CAMP_PAR_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_CAMP_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_CLICK_CNT		= MOB_CAMP_PAR_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_CAMP_PAR_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_CAMP_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_CAMP_PAR_MTH_STATS.ALT_DTTM			= NOW()
		;
		]]>
	</update>

	<delete id="deleteMobAdverParMthStats" parameterType="Map">
		DELETE FROM BILLING.MOB_ADVER_PAR_MTH_STATS
		WHERE
			STATS_MTH = ${STATS_MTH}
		  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
		  	AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
		  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		  	AND ADVER_ID IN (
				SELECT DISTINCT ADVER_ID FROM BILLING.MOB_ADVER_STATS
				WHERE
					STATS_DTTM = ${DELETE_DATE}
			  		AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
			  		AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
					AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		);
	</delete>

	<update id="migrationMobAdverParMthStats" parameterType="Map">
		<![CDATA[
		INSERT INTO BILLING.MOB_ADVER_PAR_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID, MEDIA_PAR_NO, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT
			, MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
			    DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, ADVER_ID, MEDIA_SCRIPT_NO MEDIA_PAR_NO
				, IF(SUM(TOT_EPRS_CNT) < 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) < 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) < 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_ADVER_MEDIA_STATS A
			WHERE
			    STATS_DTTM = ${STATS_DTTM}
				AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
				AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
			  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			 	AND ADVER_ID IN (
					SELECT DISTINCT ADVER_ID FROM BILLING.MOB_ADVER_STATS
					WHERE
						STATS_DTTM = ${STATS_DTTM}
					  	AND PLTFOM_TP_CODE = #{PLTFOM_TP_CODE}
					  	AND ADVRTS_PRDT_CODE = #{ADVRTS_PRDT_CODE}
					  	AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
				)
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE, ADVER_ID, MEDIA_SCRIPT_NO
		) S
		ON DUPLICATE KEY UPDATE
			MOB_ADVER_PAR_MTH_STATS.TOT_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.CLICK_CNT			= MOB_ADVER_PAR_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_ADVER_PAR_MTH_STATS.ADVRTS_AMT		= MOB_ADVER_PAR_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_ADVER_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_ADVER_PAR_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_ADVER_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_CLICK_CNT	= MOB_ADVER_PAR_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_ADVER_PAR_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_ADVER_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_ADVER_PAR_MTH_STATS.ALT_DTTM			= NOW()
		;
		]]>
	</update>

	<select id="selectAdvrtsTpCodes"  resultType="Map">
		SELECT CODE_ID AS ADVRTS_TP_CODE
		FROM dreamsearch.MOBON_COM_CODE
		WHERE CODE_TP_ID = 'ADVRTS_TP_CODE';
	</select>

	<select id="selectAdvrtsPrdtCodes"  resultType="Map">
		SELECT CODE_ID AS ADVRTS_PRDT_CODE
		FROM dreamsearch.MOBON_COM_CODE
		WHERE CODE_TP_ID = 'ADVRTS_PRDT_CODE' AND CODE_ID != '08';
	</select>

	<select id="selectPltfomTpCodes"  resultType="Map">
		SELECT CODE_ID AS PLTFOM_TP_CODE
		FROM dreamsearch.MOBON_COM_CODE
		WHERE CODE_TP_ID = 'PLTFOM_TP_CODE';
	</select>

	<update id="migrationPluscallCampMediaHhStats" parameterType="Map">
		INSERT INTO BILLING.PLUSCALL_CAMP_MEDIA_HH_STATS
			(STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			, ADVER_ID, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT
			, AVAL_CALL_TIME, DB_CNVRS_CNT, AVAL_CALL_CNT, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
				STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
				, ADVER_ID, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT
				, 0 AS AVAL_CALL_TIME, 0 AS DB_CNVRS_CNT, 0 AS AVAL_CALL_CNT, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
			FROM BILLING.MOB_CAMP_MEDIA_HH_STATS
			WHERE
				SITE_CODE IN
			    <foreach item="SITE_CODE" collection="SITE_CODES" separator="," open="(" close=")">
					#{SITE_CODE}
				</foreach>
			  	AND STATS_DTTM = ${STATS_DTTM} AND ADVRTS_PRDT_CODE = '08'
		) AS RST
		ON DUPLICATE KEY UPDATE
		PLUSCALL_CAMP_MEDIA_HH_STATS.TOT_EPRS_CNT 		= RST.TOT_EPRS_CNT
		,PLUSCALL_CAMP_MEDIA_HH_STATS.PAR_EPRS_CNT 		= RST.PAR_EPRS_CNT
		,PLUSCALL_CAMP_MEDIA_HH_STATS.CLICK_CNT 		= RST.CLICK_CNT
		,PLUSCALL_CAMP_MEDIA_HH_STATS.ADVRTS_AMT 		= RST.ADVRTS_AMT
		,PLUSCALL_CAMP_MEDIA_HH_STATS.AVAL_CALL_TIME 	= PLUSCALL_CAMP_MEDIA_HH_STATS.AVAL_CALL_TIME
		,PLUSCALL_CAMP_MEDIA_HH_STATS.DB_CNVRS_CNT 		= PLUSCALL_CAMP_MEDIA_HH_STATS.DB_CNVRS_CNT
		,PLUSCALL_CAMP_MEDIA_HH_STATS.AVAL_CALL_CNT 	= PLUSCALL_CAMP_MEDIA_HH_STATS.AVAL_CALL_CNT
		,PLUSCALL_CAMP_MEDIA_HH_STATS.REG_USER_ID 		= PLUSCALL_CAMP_MEDIA_HH_STATS.REG_USER_ID
		,PLUSCALL_CAMP_MEDIA_HH_STATS.REG_DTTM 			= PLUSCALL_CAMP_MEDIA_HH_STATS.REG_DTTM
		,PLUSCALL_CAMP_MEDIA_HH_STATS.ALT_USER_ID 		= 'BATCH'
		,PLUSCALL_CAMP_MEDIA_HH_STATS.ALT_DTTM 			= NOW()
		;
	</update>

	<update id="migrationPluscallCampMediaStats" parameterType="Map">
		INSERT INTO BILLING.PLUSCALL_CAMP_MEDIA_STATS
			(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			, ADVER_ID, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT
			, AVAL_CALL_TIME, DB_CNVRS_CNT, AVAL_CALL_CNT, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT
				STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
				, ADVER_ID, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT
				, 0 AS AVAL_CALL_TIME, 0 AS DB_CNVRS_CNT, 0 AS AVAL_CALL_CNT, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
			FROM BILLING.MOB_CAMP_MEDIA_STATS
			WHERE
			    SITE_CODE IN
			    <foreach item="SITE_CODE" collection="SITE_CODES" separator="," open="(" close=")">
					#{SITE_CODE}
				</foreach>
				AND STATS_DTTM = ${STATS_DTTM} AND ADVRTS_PRDT_CODE = '08'
		) AS RST
		ON DUPLICATE KEY UPDATE
			PLUSCALL_CAMP_MEDIA_STATS.TOT_EPRS_CNT 		= RST.TOT_EPRS_CNT
			,PLUSCALL_CAMP_MEDIA_STATS.PAR_EPRS_CNT 	= RST.PAR_EPRS_CNT
			,PLUSCALL_CAMP_MEDIA_STATS.CLICK_CNT 		= RST.CLICK_CNT
			,PLUSCALL_CAMP_MEDIA_STATS.ADVRTS_AMT 		= RST.ADVRTS_AMT
			,PLUSCALL_CAMP_MEDIA_STATS.AVAL_CALL_TIME 	= PLUSCALL_CAMP_MEDIA_STATS.AVAL_CALL_TIME
			,PLUSCALL_CAMP_MEDIA_STATS.DB_CNVRS_CNT 	= PLUSCALL_CAMP_MEDIA_STATS.DB_CNVRS_CNT
			,PLUSCALL_CAMP_MEDIA_STATS.AVAL_CALL_CNT 	= PLUSCALL_CAMP_MEDIA_STATS.AVAL_CALL_CNT
			,PLUSCALL_CAMP_MEDIA_STATS.REG_USER_ID 		= PLUSCALL_CAMP_MEDIA_STATS.REG_USER_ID
			,PLUSCALL_CAMP_MEDIA_STATS.REG_DTTM 		= PLUSCALL_CAMP_MEDIA_STATS.REG_DTTM
			,PLUSCALL_CAMP_MEDIA_STATS.ALT_USER_ID 		= 'BATCH'
			,PLUSCALL_CAMP_MEDIA_STATS.ALT_DTTM 		= NOW()
		;
	</update>

	<select id="selectPluscallSiteCodes" parameterType="Map" resultType="String">
		SELECT DISTINCT SITE_CODE
		FROM BILLING.MOB_CAMP_STATS
		WHERE STATS_DTTM = ${STATS_DTTM} AND ADVRTS_PRDT_CODE = '08';
	</select>

	<select id="getDiffPointData" parameterType="String" resultType="Map">
		SELECT
		RST.userid AS userid, RST.STATS_DTTM, RST.STATS_HH, case when RST.AMT<![CDATA[<]]>RST.`point` then 'x' else 'ok' end ret , RST.AMT - RST.`point` DIFF
		FROM
		(
		WITH CHARGE AS (
		SELECT corrent_point.userid, corrent_point.`point`, corrent_point.lastupdate
		, last_point.charge, last_point.regdate, last_point.STATS_DTTM, last_point.STATS_HH,last_point.STATS_MMSECTION
		FROM (
		SELECT A.userid, (A.rpoint + IF(A.bpoint IS NULL, 0, A.bpoint)) AS charge
		, A.regdate , DATE_FORMAT(A.regdate, '%Y%m%d') AS STATS_DTTM, date_format(regdate,'%H')STATS_HH, 60-(date_format(regdate,'%i')) STATS_MMSECTION
		FROM dreamsearch.pointlog AS A JOIN
		(SELECT
		userid, SUBSTRING_INDEX( GROUP_CONCAT(no ORDER BY no DESC), ',', 1 ) AS no
		FROM dreamsearch.pointlog
		where 1=1
		and userid =#{adver}
		and userid !=''
		GROUP BY userid
		) AS B
		ON A.userid = B.userid AND A.no = B.no
		ORDER BY A.regdate DESC
		) AS last_point left join dreamsearch.admember corrent_point
		ON corrent_point.userid = last_point.userid
		)
		SELECT CC.ADVER_ID AS userid, CC.regdate, CC.STATS_DTTM, CC.STATS_HH, CC.STATS_MMSECTION, CC.`point`
		, CC.charge, CC.before_one_point, FF.ADVRTS_AMT, FF.ADVRTS_AMT2
		, (CC.charge - (CC.before_one_point - IFNULL(SUM(FF.ADVRTS_AMT),0) + IFNULL(SUM(FF.ADVRTS_AMT2*CC.STATS_MMSECTION),0) ) )  AS AMT
		FROM
		(
		SELECT A.ADVER_ID, SUM(before_one_point)before_one_point, min(userid)userid, min(`point`)`point`, min(lastupdate)lastupdate, min(charge)charge
		, MIN(regdate)regdate , min(STATS_DTTM)STATS_DTTM, MIN(STATS_HH)STATS_HH, MIN(STATS_MMSECTION)STATS_MMSECTION
		FROM (
		SELECT AA.ADVER_ID , SUM(AA.ADVRTS_AMT) AS before_one_point, BB.*
		FROM BILLING.MOB_CAMP_MEDIA_STATS AS AA
		JOIN CHARGE AS BB
		ON AA.STATS_DTTM =20220615 AND CONVERT(AA.SITE_CODE USING euckr) IN (select site_code from dreamsearch.adsite where userid=#{adver}
		union all select site_code from dreamsearch.iadsite where userid=#{adver})
		GROUP BY AA.ADVER_ID
		UNION ALL
		SELECT AA.ADVER_ID , SUM(AA.ADVRTS_AMT) AS before_one_point, BB.*
		FROM BILLING.MOB_ADVER_STATS AS AA
		JOIN CHARGE AS BB
		ON AA.STATS_DTTM BETWEEN BB.STATS_DTTM AND 20220614 AND AA.ADVER_ID = BB.userid
		GROUP BY AA.ADVER_ID
		) A
		) AS CC
		LEFT JOIN
		(
		SELECT DD.ADVER_ID
		, IFNULL(SUM(CASE WHEN DD.STATS_HH	<![CDATA[<]]>EE.STATS_HH THEN DD.ADVRTS_AMT END),0)ADVRTS_AMT
		, IFNULL(SUM(case when DD.STATS_HH=EE.STATS_HH then DD.ADVRTS_AMT/60 END),0)ADVRTS_AMT2
		FROM BILLING.MOB_ADVER_HH_STATS DD JOIN CHARGE EE
		ON DD.STATS_DTTM=EE.STATS_DTTM AND DD.STATS_HH<![CDATA[<=]]>EE.STATS_HH AND DD.ADVER_ID=EE.userid
		GROUP BY DD.ADVER_ID
		) FF
		ON CC.ADVER_ID=FF.ADVER_ID
		GROUP BY CC.ADVER_ID
		) AS RST
		WHERE RST.`point` != RST.AMT
		;
	</select>
	<select id="getDiffPointData2_XXX" parameterType="String" resultType="Map">
		SELECT
		RST.userid AS userid, RST.STATS_DTTM, RST.STATS_HH, case when RST.AMT<![CDATA[<]]>RST.`point` then 'x' else 'ok' end ret , RST.AMT - RST.`point` DIFF
		FROM (
		WITH CHARGE  as (
		select AA.*, BB.point, AA.rpoint + AA.bpoint as charge  from (
		SELECT regdate, userid , SUM(rpoint) as rpoint,
		DATE_FORMAT(MIN(regdate), '%Y%m%d') AS startDate,
		DATE_FORMAT(MIN(regdate),'%H') AS startHour,
		(DATE_FORMAT(MIN(regdate),'%i')) startHourSection,
		SUM(ifnull(bpoint,0))-(SELECT SUM(ifnull(bpoint,0)) as bpoint
		from dreamsearch.pointlog
		WHERE userid  = #{adver} and regdate > ADDDATE('20220607','%Y%m%d')) as bpoint
		FROM dreamsearch.pointlog p
		WHERE userid  = #{adver}
		and regdate  >= (
		select MAX(regdate) FROM dreamsearch.pointlog p2
		WHERE userid  = #{adver}
		AND regdate  <![CDATA[<=]]> ADDDATE('20220607','%Y%m%d')
		)
		order by regdate , pay_type
		) as AA
		JOIN dreamsearch.admember as BB on AA.userid = BB.userid
		)
		SELECT CC.ADVER_ID userid, CC.regdate, CC.STATS_DTTM, CC.STATS_HH, CC.STATS_MMSECTION, CC.`point`
		, CC.charge, CC.before_one_point, FF.ADVRTS_AMT, FF.ADVRTS_AMT2
		, (CC.charge - ((CC.before_one_point - IFNULL(SUM(FF.ADVRTS_AMT),0)) + IFNULL(SUM(FF.ADVRTS_AMT2*(60-CC.STATS_MMSECTION)),0) ) )  AS AMT
		FROM (
		SELECT AA.ADVER_ID, point, SUM(before_one_point)before_one_point, min(charge)charge
		, MIN(AA.regdate)regdate , min(startDate)STATS_DTTM, MIN(startHour)STATS_HH, MIN(startHourSection)STATS_MMSECTION
		FROM (
		SELECT AA.ADVER_ID , SUM(AA.ADVRTS_AMT) AS before_one_point, BB.*
		FROM BILLING.MOB_CAMP_MEDIA_STATS AS AA
		JOIN CHARGE AS BB
		ON AA.STATS_DTTM =20220616 AND CONVERT(AA.SITE_CODE USING euckr) IN (select site_code from dreamsearch.adsite where userid=#{adver}
		union all select site_code from dreamsearch.iadsite where userid=#{adver})
		GROUP BY AA.ADVER_ID
		UNION ALL
		SELECT AA.ADVER_ID , SUM(AA.ADVRTS_AMT) AS before_one_point, BB.*
		FROM BILLING.MOB_ADVER_STATS AS AA
		JOIN CHARGE AS BB
		ON AA.STATS_DTTM BETWEEN BB.startDate AND 20220615 AND AA.ADVER_ID = #{adver}
		GROUP BY AA.ADVER_ID
		) AA
		) CC join (
		SELECT DD.ADVER_ID
		, IFNULL(SUM(CASE WHEN DD.STATS_HH<![CDATA[<=]]>EE.startHour THEN DD.ADVRTS_AMT END),0)ADVRTS_AMT
		, IFNULL(SUM(case when DD.STATS_HH=EE.startHour then DD.ADVRTS_AMT/60 END),0)ADVRTS_AMT2
		FROM BILLING.MOB_ADVER_HH_STATS DD JOIN CHARGE EE
		ON DD.STATS_DTTM=EE.startDate AND DD.STATS_HH<![CDATA[<=]]>EE.startHour AND DD.ADVER_ID=#{adver}
		GROUP BY DD.ADVER_ID
		) FF on CC.ADVER_ID=FF.ADVER_ID
		GROUP BY CC.ADVER_ID
		)RST
		;
	</select>

	<select id="getDiffPointData2" parameterType="String" resultType="Map">
		SELECT
			RST.userid AS userid, RST.STATS_DTTM, RST.charge, RST.TOTAL_AMT, RST.`point`,
			CASE WHEN RST.TOTAL_AMT <![CDATA[<]]> RST.`point` THEN 'x' ELSE 'ok' END ret,
			ROUND((RST.charge - RST.TOTAL_AMT - RST.`point`), 2) AS DIFF
		FROM (
			SELECT AAA.*, SUM(AMT) AS TOTAL_AMT
			FROM (
				SELECT CC.ADVER_ID AS userid, CC.regdate, CC.startDate AS STATS_DTTM
					, CC.`point`, CC.charge, CC.ADVRTS_AMT AS AMT
				FROM (
					WITH CHARGE AS (
						select AA.*, BB.`point`, AA.rpoint AS charge
						from (
							SELECT
								regdate, userid , SUM(rpoint) AS rpoint,
								DATE_FORMAT(MIN(regdate), '%Y%m%d') AS startDate
							FROM dreamsearch.pointlog p
							WHERE userid  = #{adver}
								AND regdate <![CDATA[>=]]> 20220607
							ORDER BY regdate, pay_type
						) AS AA
						JOIN dreamsearch.admember AS BB ON AA.userid = BB.userid
					)
				SELECT 1 GG, AA.ADVER_ID, SUM(AA.ADVRTS_AMT) AS ADVRTS_AMT, BB.*
				FROM BILLING.MOB_CAMP_MEDIA_HH_STATS AS AA
				JOIN CHARGE AS BB
				WHERE STATS_DTTM = DATE_FORMAT(NOW(), '%Y%m%d') AND STATS_HH <![CDATA[<=]]> DATE_FORMAT(NOW(),'%H') AND CONVERT(AA.SITE_CODE USING euckr) IN (select site_code from dreamsearch.adsite where userid=BB.userid
					UNION ALL SELECT site_code FROM dreamsearch.iadsite WHERE userid=BB.userid)
					AND AA.ADVER_ID = BB.userid
				GROUP BY AA.ADVER_ID
				UNION ALL
				SELECT 2 GG, AA.ADVER_ID , SUM(AA.ADVRTS_AMT) AS ADVRTS_AMT, BB.*
				FROM BILLING.MOB_ADVER_HH_STATS AS AA
				JOIN CHARGE AS BB
				ON AA.STATS_DTTM between BB.startDate and DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY), '%Y%m%d') AND AA.ADVER_ID =BB.userid
				GROUP BY AA.ADVER_ID
				) AS CC
			)AAA GROUP BY userid
		) AS RST;
	</select>
</mapper>