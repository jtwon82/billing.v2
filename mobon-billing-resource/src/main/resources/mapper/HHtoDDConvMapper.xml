<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hHtoDDConvMapper">

	<select id="sql_select_ctgr_mod_date_dd" resultType="Map">
		/* SELECT : MOB_CNVRS_HH_STATS , MOB_CTGR_CNVRS_HH_STATS : 변경데이터 수집 */
<!-- 		 SELECT A.STATS_DTTM
			 , A.STATS_HH
			 , DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 MINUTE),'%Y%m%d%H%i') AS MAX_LAST_EXE_TIME
		  FROM (SELECT STATS_DTTM
					 , STATS_HH	
					 , SUM(ORDER_AMT) AS ORDER_AMT
					 , SUM(ORDER_CNT) AS ORDER_CNT
					 , SUM(ORDER_QY) AS ORDER_QY
					 , SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
					 , SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
					 , SUM(TRGT_ORDER_QY) AS TRGT_ORDER_QY
  				  FROM BILLING.MOB_CNVRS_RENEW_HH_STATS MCHS
				     , dreamsearch.MOB_CTGR_USER_INFO MCUI
			     WHERE 1=1
				   AND MCHS.ADVER_ID = MCUI.USER_ID
			       AND STATS_DTTM =  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 MINUTE) ,'%Y%m%d')
			       AND STATS_HH != DATE_FORMAT(NOW() ,'%H')  
			     GROUP BY STATS_HH
		       ) A 
		  LEFT OUTER JOIN 
	  	       (SELECT STATS_DTTM
					 , STATS_HH	
					 , SUM(ORDER_AMT) AS ORDER_AMT
					 , SUM(ORDER_CNT) AS ORDER_CNT
					 , SUM(ORDER_QY) AS ORDER_QY
					 , SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
					 , SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
					 , SUM(TRGT_ORDER_QY) AS TRGT_ORDER_QY
			      FROM BILLING.MOB_CNVRS_RENEW_CTGR_HH_STATS
			     WHERE 1=1
  			       AND STATS_DTTM =  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 MINUTE) ,'%Y%m%d')
			  	   AND STATS_HH != DATE_FORMAT(NOW() ,'%H')
			     GROUP BY STATS_HH  
		       ) B ON A.STATS_HH = B.STATS_HH
	     WHERE 1=1
	 	   AND (
	 	 		   (A.ORDER_AMT - B.ORDER_AMT) != 0
				OR (A.ORDER_CNT - B.ORDER_CNT) != 0
				OR (A.ORDER_QY - B.ORDER_QY) != 0
				OR (A.TRGT_ORDER_AMT - B.TRGT_ORDER_AMT) != 0
				OR (A.TRGT_ORDER_CNT - B.TRGT_ORDER_CNT) != 0
				OR (A.TRGT_ORDER_QY - B.TRGT_ORDER_QY) != 0
				OR B.STATS_DTTM IS NULL 
			   )
		 -->
			
			
		SELECT A.STATS_DTTM , A.STATS_HH FROM (
				SELECT MCRHS.STATS_DTTM, MCRHS.STATS_HH, SUM(ORDER_CNT) AS ORDER_CNT, SUM(ORDER_AMT) AS ORDER_AMT,SUM(ORDER_QY) AS ORDER_QY, 
				SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT ,SUM(TRGT_ORDER_QY)  AS TRGT_ORDER_QY
				FROM BILLING.MOB_CNVRS_RENEW_HH_STATS AS MCRHS
				INNER JOIN (
					SELECT DISTINCT STATS_DTTM
					FROM BILLING.MOB_CNVRS_RENEW_NCL
					WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
				) AS NCL ON MCRHS.STATS_DTTM  = NCL.STATS_DTTM 
				GROUP BY STATS_DTTM, STATS_HH
			) AS A 
			LEFT OUTER JOIN (
				SELECT mcrchs.STATS_DTTM , STATS_HH, SUM(ORDER_CNT) AS ORDER_CNT, SUM(ORDER_AMT) AS ORDER_AMT,SUM(ORDER_QY) AS ORDER_QY,
				SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT ,SUM(TRGT_ORDER_QY)  AS TRGT_ORDER_QY
				FROM BILLING.MOB_CNVRS_RENEW_CTGR_HH_STATS mcrchs
				INNER JOIN (
					SELECT DISTINCT STATS_DTTM
					FROM BILLING.MOB_CNVRS_RENEW_NCL
					WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
				) AS NCL ON mcrchs.STATS_DTTM  = NCL.STATS_DTTM 
				GROUP BY STATS_DTTM, STATS_HH
			) AS B ON A.STATS_DTTM = B.STATS_DTTM AND A.STATS_HH = B.STATS_HH 
			WHERE A.ORDER_CNT != B.ORDER_CNT
			OR A.ORDER_AMT != B.ORDER_AMT
			OR A.ORDER_QY != B.ORDER_QY
			OR A.TRGT_ORDER_CNT != B.TRGT_ORDER_CNT
			OR A.TRGT_ORDER_AMT != B.TRGT_ORDER_AMT
			OR A.TRGT_ORDER_QY != B.TRGT_ORDER_QY
			OR B.STATS_DTTM IS NULL;
					
	</select>
	
	
	<insert id="insertCtgrCnvrs" parameterType="convData">
	/* INSERT : MOB_CNVRS_HH_STATS , MOB_CTGR_CNVRS_HH_STATS : 변경데이터 등록 */
	<!--
	
	 INSERT INTO BILLING.MOB_CTGR_CNVRS_HH_STATS (
		  STATS_DTTM
		, STATS_HH
		, PLTFOM_TP_CODE
		, ADVRTS_PRDT_CODE
		, ADVRTS_TP_CODE
		, CTGR_SEQ
		, ITL_TP_CODE
		, SESION_SELNG_YN
		, DIRECT_YN
		, CLICK_TP
		, CNVRS_TP_CODE
		, MOB_ORDER_YN
		, ORDER_AMT
		, ORDER_CNT
		, ORDER_QY
		, TRGT_ORDER_AMT
		, TRGT_ORDER_CNT
		, TRGT_ORDER_QY
		, REG_USER_ID
		, REG_DTTM
		, ALT_USER_ID
		, ALT_DTTM
		)
		SELECT * 
		  FROM (
				SELECT MCHS.STATS_DTTM
				     , MCHS.STATS_HH
				     , MCHS.PLTFOM_TP_CODE
				     , MCHS.ADVRTS_PRDT_CODE
				     , MCHS.ADVRTS_TP_CODE
				     , MCUI.CTGR_SEQ
				     , MCHS.ITL_TP_CODE
				     , MCHS.SESION_SELNG_YN
				     , MCHS.DIRECT_YN
				     , MCHS.CLICK_TP
				     , MCHS.CNVRS_TP_CODE
				     , MCHS.MOB_ORDER_YN
				     , SUM(MCHS.ORDER_AMT) AS ORDER_AMT
				     , SUM(MCHS.ORDER_CNT) AS ORDER_CNT
				     , SUM(MCHS.ORDER_QY) AS ORDER_QY
				     , SUM(MCHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
				     , SUM(MCHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				     , SUM(MCHS.TRGT_ORDER_QY) AS TRGT_ORDER_QY
				     , MCHS.REG_USER_ID
				     , MCHS.REG_DTTM
				     , 'BATCH' AS ALT_USER_ID
				     , NOW() AS ALT_DTTM
				  FROM BILLING.MOB_CNVRS_HH_STATS MCHS
				     , dreamsearch.MOB_CTGR_USER_INFO MCUI
				 WHERE STATS_DTTM = #{STATS_DTTM}
				   AND STATS_HH = #{STATS_HH}
				   AND MCHS.ADVER_ID = MCUI.USER_ID
				 GROUP BY MCHS.STATS_DTTM
				        , MCHS.STATS_HH
					     , MCHS.PLTFOM_TP_CODE
				        , MCHS.ADVRTS_PRDT_CODE
				        , MCHS.ADVRTS_TP_CODE
				        , MCUI.CTGR_SEQ
				        , MCHS.ITL_TP_CODE
				        , MCHS.SESION_SELNG_YN
				        , MCHS.DIRECT_YN
				        , MCHS.CLICK_TP
				        , MCHS.CNVRS_TP_CODE
				        , MCHS.MOB_ORDER_YN
		) S
		ON DUPLICATE KEY UPDATE
		  ORDER_AMT = S.ORDER_AMT
		, ORDER_CNT = S.ORDER_CNT
		, ORDER_QY = S.ORDER_QY
		, TRGT_ORDER_AMT = S.TRGT_ORDER_AMT
		, TRGT_ORDER_CNT = S.TRGT_ORDER_CNT
		, TRGT_ORDER_QY = S.TRGT_ORDER_QY
		, ALT_USER_ID = 'BATCH'
		, ALT_DTTM = NOW(); -->
		
	INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_HH_STATS (
	STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE,
	CTGR_SEQ, ITL_TP_CODE, TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN,
	DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN, ORDER_AMT, ORDER_CNT, ORDER_QY, 
	TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
	)
	SELECT * FROM (
		SELECT MCRHS.STATS_DTTM, MCRHS.STATS_HH, MCRHS.PLTFOM_TP_CODE, MCRHS.ADVRTS_PRDT_CODE, MCRHS.ADVRTS_TP_CODE, 
		MCUI.CTGR_SEQ, MCRHS.ITL_TP_CODE, MCRHS.TRK_TP_CODE, MCRHS.SESION_SELNG_YN, MCRHS.SESION_SELNG2_YN, 
		MCRHS.DIRECT_YN, MCRHS.CNVRS_TP_CODE, MCRHS.MOB_ORDER_YN,
		 SUM(MCRHS.ORDER_AMT) AS ORDER_AMT, SUM(MCRHS.ORDER_CNT) AS ORDER_CNT, SUM(MCRHS.ORDER_QY) AS ORDER_QY, SUM(MCRHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT,
		  SUM(MCRHS.TRGT_ORDER_QY) AS TRGT_ORDER_QY, MCRHS.REG_USER_ID, MCRHS.REG_DTTM
		  FROM BILLING.MOB_CNVRS_RENEW_HH_STATS MCRHS
		 INNER JOIN  dreamsearch.MOB_CTGR_USER_INFO MCUI ON MCRHS.ADVER_ID = MCUI.USER_ID
		 WHERE  STATS_DTTM = #{STATS_DTTM}
		 AND STATS_HH = #{STATS_HH}
		 GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ , ITL_TP_CODE, 
		 TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN 
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CNVRS_RENEW_CTGR_HH_STATS.ORDER_AMT = RESULT.ORDER_AMT,
	MOB_CNVRS_RENEW_CTGR_HH_STATS.ORDER_CNT = RESULT.ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_HH_STATS.ORDER_QY = RESULT.ORDER_QY, 
	MOB_CNVRS_RENEW_CTGR_HH_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT, 
	MOB_CNVRS_RENEW_CTGR_HH_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_HH_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY,  
	MOB_CNVRS_RENEW_CTGR_HH_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CNVRS_RENEW_CTGR_HH_STATS.REG_DTTM = RESULT.REG_DTTM, 
	MOB_CNVRS_RENEW_CTGR_HH_STATS.ALT_USER_ID = 'BATCH',
	MOB_CNVRS_RENEW_CTGR_HH_STATS.ALT_DTTM = NOW();	
	
	INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_STATS (
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
			, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
	)
	SELECT * FROM (
		SELECT MCRSHS.STATS_DTTM, MCRSHS.PLTFOM_TP_CODE, MCRSHS.ADVRTS_PRDT_CODE, MCRSHS.ADVRTS_TP_CODE, MCRSHS.CTGR_SEQ, MCRSHS.TRK_TP_CODE, MCRSHS.ITL_TP_CODE
		, MCRSHS.SESION_SELNG_YN, MCRSHS.SESION_SELNG2_YN, MCRSHS.DIRECT_YN, MCRSHS.CNVRS_TP_CODE, MCRSHS.MOB_ORDER_YN
		, SUM(MCRSHS.ORDER_AMT) AS ORDER_AMT , SUM(MCRSHS.ORDER_CNT) AS ORDER_CNT, SUM(MCRSHS.ORDER_QY) AS ORDER_QY, SUM(MCRSHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRSHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(MCRSHS.TRGT_ORDER_QY) AS TRGT_ORDER_QY
		, MCRSHS.REG_USER_ID, MCRSHS.REG_DTTM  
		FROM BILLING.MOB_CNVRS_RENEW_CTGR_HH_STATS AS MCRSHS
		WHERE  STATS_DTTM = #{STATS_DTTM}
		GROUP BY STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, CTGR_SEQ, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CNVRS_RENEW_CTGR_STATS.ORDER_AMT = RESULT.ORDER_AMT,
	MOB_CNVRS_RENEW_CTGR_STATS.ORDER_CNT = RESULT.ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_STATS.ORDER_QY = RESULT.ORDER_QY, 
	MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT, 
	MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY,  
	MOB_CNVRS_RENEW_CTGR_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CNVRS_RENEW_CTGR_STATS.REG_DTTM = RESULT.REG_DTTM, 
	MOB_CNVRS_RENEW_CTGR_STATS.ALT_USER_ID = 'BATCH',
	MOB_CNVRS_RENEW_CTGR_STATS.ALT_DTTM = NOW();
	
	INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_MTH_STATS (
		STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
			, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
	)
	SELECT * FROM (
		SELECT DATE_FORMAT(MCRSHS.STATS_DTTM, '%Y%m') AS STATS_MTH, MCRSHS.PLTFOM_TP_CODE, MCRSHS.ADVRTS_PRDT_CODE, MCRSHS.ADVRTS_TP_CODE, MCRSHS.CTGR_SEQ, MCRSHS.TRK_TP_CODE, MCRSHS.ITL_TP_CODE
		, MCRSHS.SESION_SELNG_YN, MCRSHS.SESION_SELNG2_YN, MCRSHS.DIRECT_YN, MCRSHS.CNVRS_TP_CODE, MCRSHS.MOB_ORDER_YN
		, SUM(MCRSHS.ORDER_AMT) AS ORDER_AMT , SUM(MCRSHS.ORDER_CNT) AS ORDER_CNT, SUM(MCRSHS.ORDER_QY) AS ORDER_QY, SUM(MCRSHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRSHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(MCRSHS.TRGT_ORDER_QY) AS TRGT_ORDER_QY
		, MCRSHS.REG_USER_ID, MCRSHS.REG_DTTM  
		FROM BILLING.MOB_CNVRS_RENEW_CTGR_STATS AS MCRSHS
		WHERE DATE_FORMAT(MCRSHS.STATS_DTTM, '%Y%m') = DATE_FORMAT(#{STATS_DTTM}, '%Y%m')
		GROUP BY DATE_FORMAT(STATS_DTTM, '%Y%m') , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, CTGR_SEQ, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_AMT = RESULT.ORDER_AMT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_CNT = RESULT.ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_QY = RESULT.ORDER_QY, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY,  
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.REG_DTTM = RESULT.REG_DTTM, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ALT_USER_ID = 'BATCH',
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ALT_DTTM = NOW();	  
	</insert>
	
	
</mapper>