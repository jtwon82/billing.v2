<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="parGatrDataMapper">

	<update id="MOB_CAMP_PAR_GATR_STATS" parameterType="List">
		/* MOB_CAMP_PAR_GATR_STATS */
		INSERT INTO MOB_CAMP_PAR_GATR_STATS
		(GATR_DTTM, STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, MEDIA_PAR_NO, ITL_TP_CODE, ADVER_ID, MEDIA_ID
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM)
		VALUES
			<foreach item="I" collection="list" separator=" , ">
			(DATE_FORMAT(NOW(),'%Y%m%d'), ${I.yyyymmdd}, #{I.platform}, #{I.product}, #{I.adGubun}, #{I.siteCode}, #{I.scriptNo}, #{I.interlock}, #{I.advertiserId}, #{I.scriptUserId}
				, #{I.viewCnt}, #{I.viewCnt3}, #{I.clickCnt}, #{I.point}, #{I.mpoint}
				<choose>
					<when test="I.targetYn">
						,#{I.viewCnt}
					</when>
					<otherwise>
						,0
					</otherwise>
				</choose>
				<choose>
					<when test="I.targetYn">
						,#{I.viewCnt3}
					</when>
					<otherwise>
						,0
					</otherwise>
				</choose>
				<choose>
					<when test="I.targetYn">
						,#{I.clickCnt}
					</when>
					<otherwise>
						,0
					</otherwise>
				</choose>
				<choose>
					<when test="I.targetYn">
						,#{I.point}
					</when>
					<otherwise>
						,0
					</otherwise>
				</choose>
				, 'BATCH', NOW())
			</foreach>
		ON DUPLICATE KEY UPDATE
			TOT_EPRS_CNT		= TOT_EPRS_CNT		+ VALUES(TOT_EPRS_CNT)
			, PAR_EPRS_CNT		= PAR_EPRS_CNT		+ VALUES(PAR_EPRS_CNT)
			, CLICK_CNT			= CLICK_CNT			+ VALUES(CLICK_CNT)
			, ADVRTS_AMT		= ADVRTS_AMT		+ VALUES(ADVRTS_AMT)
			, MEDIA_PYMNT_AMT	= MEDIA_PYMNT_AMT	+ VALUES(MEDIA_PYMNT_AMT)
			, TRGT_EPRS_CNT		= TRGT_EPRS_CNT		+ VALUES(TRGT_EPRS_CNT)
			, TRGT_PAR_EPRS_CNT	= TRGT_PAR_EPRS_CNT	+ VALUES(TRGT_PAR_EPRS_CNT)
			, TRGT_CLICK_CNT	= TRGT_CLICK_CNT	+ VALUES(TRGT_CLICK_CNT)
			, TRGT_ADVRTS_AMT	= TRGT_ADVRTS_AMT	+ VALUES(TRGT_ADVRTS_AMT)
			, ALT_USER_ID='BATCH', ALT_DTTM=NOW();
	</update>





	<select id="SELECT_DELETE_CODE" parameterType="Map" resultType="Map">
		SELECT STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		FROM (
			SELECT ${STATS_MTH} STATS_MTH
		) MTH, (
			SELECT CODE_ID PLTFOM_TP_CODE FROM dreamsearch.MOBON_COM_CODE a WHERE a.CODE_TP_ID='PLTFOM_TP_CODE' 
		) PLTFOM_TP_CODE, (
			SELECT CODE_ID ADVRTS_PRDT_CODE FROM dreamsearch.MOBON_COM_CODE a WHERE a.CODE_TP_ID='ADVRTS_PRDT_CODE' 
		) ADVRTS_PRDT_CODE, (
			SELECT CODE_ID ADVRTS_TP_CODE FROM dreamsearch.MOBON_COM_CODE a WHERE a.CODE_TP_ID='ADVRTS_TP_CODE' 
		) ADVRTS_TP_CODE, (
			SELECT CODE_ID ITL_TP_CODE FROM dreamsearch.MOBON_COM_CODE a WHERE a.CODE_TP_ID='ITL_TP_CODE' 
		) ITL_TP_CODE
		;
	</select>
	<select id="SELECT_DTTM_ADVRTS_CODE" parameterType="Map" resultType="Map">
		/* 전월 00~31까지 광고구분코드 */
		SELECT STATS_DTTM, CODE_ID ADVRTS_TP_CODE
		FROM (
			SELECT DISTINCT STATS_DTTM
			FROM BILLING.MOB_COM_STATS_INFO a 
			WHERE LEFT(STATS_DTTM,6) =${STATS_MTH}
		) A, (
			SELECT CODE_ID
			FROM dreamsearch.MOBON_COM_CODE a 
			WHERE a.CODE_TP_ID='ADVRTS_TP_CODE'
		)B;
	</select>
	
	<update id="DELETE_CAMP_PAR_MTH" parameterType="Map">
	 	DELETE FROM BILLING.MOB_CAMP_PAR_MTH_STATS 
	 		WHERE STATS_MTH =${STATS_MTH} 
	 		AND PLTFOM_TP_CODE =#{PLTFOM_TP_CODE}
	 		AND ADVRTS_PRDT_CODE =#{ADVRTS_PRDT_CODE}
	 		AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
	 		AND ITL_TP_CODE =#{ITL_TP_CODE} 
	 		;
	</update>
	<update id="DELETE_ADVER_PAR_MTH" parameterType="Map">
		DELETE FROM BILLING.MOB_ADVER_PAR_MTH_STATS 
	 		WHERE STATS_MTH =${STATS_MTH} 
	 		AND PLTFOM_TP_CODE =#{PLTFOM_TP_CODE}
	 		AND ADVRTS_PRDT_CODE =#{ADVRTS_PRDT_CODE}
	 		AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
	 		AND ITL_TP_CODE =#{ITL_TP_CODE} 
	 		;
	</update>
	<update id="DELETE_CAMP_MTH" parameterType="Map">
	 	DELETE FROM BILLING.MOB_CAMP_MTH_STATS 
	 		WHERE STATS_MTH =${STATS_MTH} 
	 		AND PLTFOM_TP_CODE =#{PLTFOM_TP_CODE}
	 		AND ADVRTS_PRDT_CODE =#{ADVRTS_PRDT_CODE}
	 		AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
	 		AND ITL_TP_CODE =#{ITL_TP_CODE} 
	 		;
	</update>
	<update id="DELETE_ADVER_MTH" parameterType="Map">
	 	DELETE FROM BILLING.MOB_ADVER_MTH_STATS 
	 		WHERE STATS_MTH =${STATS_MTH} 
	 		AND PLTFOM_TP_CODE =#{PLTFOM_TP_CODE}
	 		AND ADVRTS_PRDT_CODE =#{ADVRTS_PRDT_CODE}
	 		AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
	 		AND ITL_TP_CODE =#{ITL_TP_CODE} 
	 		;
	</update>
	<update id="DELETE_MEDIA_PAR_MTH" parameterType="Map">
	 	DELETE FROM BILLING.MOB_MEDIA_PAR_MTH_STATS 
	 		WHERE STATS_MTH =${STATS_MTH} 
	 		AND PLTFOM_TP_CODE =#{PLTFOM_TP_CODE}
	 		AND ADVRTS_PRDT_CODE =#{ADVRTS_PRDT_CODE}
	 		AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
	 		AND ITL_TP_CODE =#{ITL_TP_CODE} 
	 		;
	</update>
	<update id="DELETE_MEDIA_MTH" parameterType="Map">
	 	DELETE FROM BILLING.MOB_MEDIA_MTH_STATS 
	 		WHERE STATS_MTH =${STATS_MTH} 
	 		AND PLTFOM_TP_CODE =#{PLTFOM_TP_CODE}
	 		AND ADVRTS_PRDT_CODE =#{ADVRTS_PRDT_CODE}
	 		AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
	 		AND ITL_TP_CODE =#{ITL_TP_CODE} 
	 		;
	</update>
	<update id="DELETE_COM_STATS_PAR_MTH" parameterType="Map">
	 	DELETE FROM BILLING.MOB_COM_STATS_MTH_INFO 
	 		WHERE STATS_MTH =${STATS_MTH} 
	 		AND PLTFOM_TP_CODE =#{PLTFOM_TP_CODE}
	 		AND ADVRTS_PRDT_CODE =#{ADVRTS_PRDT_CODE}
	 		AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
	 		AND ITL_TP_CODE =#{ITL_TP_CODE} 
	 		;
	</update>
	
	<update id="UPDATE_CAMP_PAR_MTH" parameterType="Map">
		INSERT INTO BILLING.MOB_CAMP_PAR_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE, MEDIA_PAR_NO
			, ADVER_ID, MEDIA_ID
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, SITE_CODE, MEDIA_SCRIPT_NO MEDIA_PAR_NO
				, CASE WHEN ADVER_ID IS NULL OR ADVER_ID='' THEN '-' ELSE ADVER_ID END ADVER_ID, MEDIA_ID
				, IF(SUM(TOT_EPRS_CNT) &lt; 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) &lt; 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) &lt; 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_CAMP_MEDIA_STATS A
			WHERE STATS_DTTM =${STATS_DTTM}
				AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, SITE_CODE, MEDIA_SCRIPT_NO
		) S
		ON DUPLICATE KEY UPDATE
			MOB_CAMP_PAR_MTH_STATS.TOT_EPRS_CNT			= MOB_CAMP_PAR_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_CAMP_PAR_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.CLICK_CNT			= MOB_CAMP_PAR_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_CAMP_PAR_MTH_STATS.ADVRTS_AMT			= MOB_CAMP_PAR_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_CAMP_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_CAMP_PAR_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_CAMP_PAR_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_CAMP_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_CLICK_CNT		= MOB_CAMP_PAR_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_CAMP_PAR_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_CAMP_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_CAMP_PAR_MTH_STATS.ALT_DTTM			= NOW()
		;
	</update>
	<update id="UPDATE_ADVER_PAR_MTH" parameterType="Map">
		INSERT INTO BILLING.MOB_ADVER_PAR_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID, MEDIA_PAR_NO
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, ADVER_ID, MEDIA_SCRIPT_NO MEDIA_PAR_NO
				, IF(SUM(TOT_EPRS_CNT) &lt; 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) &lt; 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) &lt; 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_ADVER_MEDIA_STATS A
			WHERE STATS_DTTM =${STATS_DTTM}
				AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, ADVER_ID, MEDIA_SCRIPT_NO
		) S
		ON DUPLICATE KEY UPDATE
			MOB_ADVER_PAR_MTH_STATS.TOT_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.CLICK_CNT			= MOB_ADVER_PAR_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_ADVER_PAR_MTH_STATS.ADVRTS_AMT		= MOB_ADVER_PAR_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_ADVER_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_ADVER_PAR_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_ADVER_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_CLICK_CNT	= MOB_ADVER_PAR_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_ADVER_PAR_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_ADVER_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_ADVER_PAR_MTH_STATS.ALT_DTTM			= NOW()
		;
	</update>
	<update id="UPDATE_CAMP_MTH" parameterType="Map">
		INSERT INTO BILLING.MOB_CAMP_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, SITE_CODE
				, IF(SUM(TOT_EPRS_CNT) &lt; 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) &lt; 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) &lt; 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, 0 MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_CAMP_STATS A
			WHERE STATS_DTTM =${STATS_DTTM}
				AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, SITE_CODE
		) S
		ON DUPLICATE KEY UPDATE
			MOB_CAMP_MTH_STATS.TOT_EPRS_CNT			= MOB_CAMP_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_CAMP_MTH_STATS.PAR_EPRS_CNT		= MOB_CAMP_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_CAMP_MTH_STATS.CLICK_CNT			= MOB_CAMP_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_CAMP_MTH_STATS.ADVRTS_AMT			= MOB_CAMP_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_CAMP_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_CAMP_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_CAMP_MTH_STATS.TRGT_EPRS_CNT		= MOB_CAMP_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_CAMP_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_CAMP_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_CAMP_MTH_STATS.TRGT_CLICK_CNT		= MOB_CAMP_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_CAMP_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_CAMP_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_CAMP_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_CAMP_MTH_STATS.ALT_DTTM			= NOW()
		;
	</update>
	<update id="UPDATE_ADVER_MTH" parameterType="Map">
		INSERT INTO BILLING.MOB_ADVER_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, ADVER_ID
				, IF(SUM(TOT_EPRS_CNT) &lt; 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) &lt; 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) &lt; 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_ADVER_STATS A
			WHERE STATS_DTTM =${STATS_DTTM}
				AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, ADVER_ID
		) S
		ON DUPLICATE KEY UPDATE
			MOB_ADVER_MTH_STATS.TOT_EPRS_CNT		= MOB_ADVER_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_ADVER_MTH_STATS.PAR_EPRS_CNT		= MOB_ADVER_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_ADVER_MTH_STATS.CLICK_CNT			= MOB_ADVER_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_ADVER_MTH_STATS.ADVRTS_AMT		= MOB_ADVER_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_ADVER_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_ADVER_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_ADVER_MTH_STATS.TRGT_EPRS_CNT		= MOB_ADVER_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_ADVER_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_ADVER_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_ADVER_MTH_STATS.TRGT_CLICK_CNT	= MOB_ADVER_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_ADVER_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_ADVER_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_ADVER_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_ADVER_MTH_STATS.ALT_DTTM			= NOW()
		;
	</update>
	<update id="UPDATE_MEDIA_PAR_MTH" parameterType="Map">
		INSERT INTO BILLING.MOB_MEDIA_PAR_MTH_STATS
		(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_PAR_NO, MEDIA_ID
			, MEDIA_TP_CODE
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, MEDIA_SCRIPT_NO MEDIA_PAR_NO, MEDIA_ID
				, MEDIA_TP_CODE
				, IF(SUM(TOT_EPRS_CNT) &lt; 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) &lt; 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) &lt; 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_MEDIA_SCRIPT_STATS
			WHERE STATS_DTTM =${STATS_DTTM}
				AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, MEDIA_SCRIPT_NO
		) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_PAR_MTH_STATS.TOT_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.CLICK_CNT			= MOB_MEDIA_PAR_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_MEDIA_PAR_MTH_STATS.ADVRTS_AMT		= MOB_MEDIA_PAR_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_MEDIA_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_MEDIA_PAR_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_CLICK_CNT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_MEDIA_PAR_MTH_STATS.ALT_DTTM			= NOW()
		;
	</update>	
	<update id="UPDATE_MEDIA_MTH" parameterType="Map">
		INSERT INTO BILLING.MOB_MEDIA_MTH_STATS
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_ID
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, MEDIA_ID
				, IF(SUM(TOT_EPRS_CNT) &lt; 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) &lt; 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) &lt; 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_MEDIA_STATS A
			WHERE STATS_DTTM =${STATS_DTTM}
				AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, MEDIA_ID
		) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_MTH_STATS.TOT_EPRS_CNT			= MOB_MEDIA_MTH_STATS.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.PAR_EPRS_CNT			= MOB_MEDIA_MTH_STATS.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.CLICK_CNT				= MOB_MEDIA_MTH_STATS.CLICK_CNT+ S.CLICK_CNT
			, MOB_MEDIA_MTH_STATS.ADVRTS_AMT			= MOB_MEDIA_MTH_STATS.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_MEDIA_MTH_STATS.MEDIA_PYMNT_AMT		= MOB_MEDIA_MTH_STATS.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_MTH_STATS.TRGT_EPRS_CNT			= MOB_MEDIA_MTH_STATS.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_PAR_EPRS_CNT		= MOB_MEDIA_MTH_STATS.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_CLICK_CNT		= MOB_MEDIA_MTH_STATS.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_ADVRTS_AMT		= MOB_MEDIA_MTH_STATS.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_MTH_STATS.ALT_USER_ID			= 'BATCH'
			, MOB_MEDIA_MTH_STATS.ALT_DTTM				= NOW()
		;
	</update>	
	<update id="UPDATE_COM_STATS_MTH" parameterType="Map">
		INSERT INTO BILLING.MOB_COM_STATS_MTH_INFO
			(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
			, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
		SELECT * FROM (
			SELECT DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, IF(SUM(TOT_EPRS_CNT) &lt; 0,0,SUM(TOT_EPRS_CNT))TOT_EPRS_CNT, IF(SUM(PAR_EPRS_CNT) &lt; 0,0,SUM(PAR_EPRS_CNT))PAR_EPRS_CNT, IF(SUM(CLICK_CNT) &lt; 0,0,SUM(CLICK_CNT))CLICK_CNT
				, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
				, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
				, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
			FROM BILLING.MOB_COM_STATS_INFO A
			WHERE STATS_DTTM =${STATS_DTTM}
				AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		) S
		ON DUPLICATE KEY UPDATE
			MOB_COM_STATS_MTH_INFO.TOT_EPRS_CNT			= MOB_COM_STATS_MTH_INFO.TOT_EPRS_CNT+ S.TOT_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.PAR_EPRS_CNT		= MOB_COM_STATS_MTH_INFO.PAR_EPRS_CNT+ S.PAR_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.CLICK_CNT			= MOB_COM_STATS_MTH_INFO.CLICK_CNT+ S.CLICK_CNT
			, MOB_COM_STATS_MTH_INFO.ADVRTS_AMT			= MOB_COM_STATS_MTH_INFO.ADVRTS_AMT+ S.ADVRTS_AMT
			, MOB_COM_STATS_MTH_INFO.MEDIA_PYMNT_AMT	= MOB_COM_STATS_MTH_INFO.MEDIA_PYMNT_AMT+ S.MEDIA_PYMNT_AMT
			, MOB_COM_STATS_MTH_INFO.TRGT_EPRS_CNT		= MOB_COM_STATS_MTH_INFO.TRGT_EPRS_CNT+ S.TRGT_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_PAR_EPRS_CNT	= MOB_COM_STATS_MTH_INFO.TRGT_PAR_EPRS_CNT+ S.TRGT_PAR_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_CLICK_CNT		= MOB_COM_STATS_MTH_INFO.TRGT_CLICK_CNT+ S.TRGT_CLICK_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_ADVRTS_AMT	= MOB_COM_STATS_MTH_INFO.TRGT_ADVRTS_AMT+ S.TRGT_ADVRTS_AMT
			, MOB_COM_STATS_MTH_INFO.ALT_USER_ID		= 'BATCH'
			, MOB_COM_STATS_MTH_INFO.ALT_DTTM			= NOW()
		;
	</update>
	
	
	
	
	
	
	<select id="sql_SELECT_COM_CODE" resultType="Map" parameterType="Map">
		/* sql_SELECT_COM_CODE */
	 	SELECT 
			STATS_HH, ADVRTS_TP_CODE, STATS_DTTM
		FROM (
			SELECT CODE_ID STATS_HH
			FROM dreamsearch.MOBON_COM_CODE
			WHERE CODE_TP_ID='ADVRTS_TP_CODE' AND CODE_ID &lt; 24
		)a, (
			SELECT
				code_id AS ADVRTS_TP_CODE
				, DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')STATS_DTTM
			FROM dreamsearch.MOBON_COM_CODE
			WHERE CODE_TP_ID = 'ADVRTS_TP_CODE'
			ORDER BY code_id
		)b;
	</select>
	<select id="sql_SELECT_COM_CODE_XXX" resultType="Map" parameterType="Map">
		/* sql_SELECT_COM_CODE */
		SELECT
				code_id AS ADVRTS_TP_CODE
				, DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')STATS_DTTM
			FROM dreamsearch.MOBON_COM_CODE
			WHERE CODE_TP_ID = 'ADVRTS_TP_CODE'
			ORDER BY code_id;
	</select>


	<select id="sql_dd_select_tp_code_count" resultType="Map" parameterType="Map">
		/* sql_dd_select_tp_code_count */
		SELECT
				A.STATS_DTTM, A.STATS_HH, A.ADVRTS_TP_CODE, COUNT(*) AS TP_CODE_COUNT
			FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A
			WHERE A.STATS_DTTM =${STATS_DTTM}
				AND A.STATS_HH =#{STATS_HH}
				AND A.ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
			GROUP BY A.STATS_DTTM, A.STATS_HH, A.ADVRTS_TP_CODE;
	</select>
	 
	<insert id="CREATE_TEMP_TABLE_XXX">
		/* CREATE_TEMP_TABLE */
		DROP TABLE IF EXISTS BILLING_TEMP.MOB_CAMP_MEDIA_STATS_PARGATR;

		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_CAMP_MEDIA_STATS_PARGATR

			SELECT 
				STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
				, ADVER_ID, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM

				FROM BILLING.MOB_CAMP_MEDIA_STATS LIMIT 0,0;
	</insert>
	<update id="DROP_TEMP_TABLE_XXX">
		/* DROP_TEMP_TABLE */
		DROP TABLE IF EXISTS BILLING_TEMP.MOB_CAMP_MEDIA_STATS_PARGATR;
	</update>
	 














	
	
	
	<insert id="INSERT_TEMP_PARGATR_STATS1" parameterType="Map">
		/* INSERT_TEMP_PARGATR_STATS1 */
		INSERT INTO
					BILLING.MOB_CAMP_PAR_MTH_STATS
				(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, SITE_CODE, MEDIA_PAR_NO
				
				, ADVER_ID, MEDIA_ID
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
			SELECT * FROM (
				SELECT
					DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, SITE_CODE, MEDIA_SCRIPT_NO MEDIA_PAR_NO
					
					, ADVER_ID, MEDIA_ID
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT
					, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
					
				FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A
				
				WHERE STATS_DTTM =${STATS_DTTM}
					AND STATS_HH =#{STATS_HH}
					AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}

				GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, SITE_CODE, MEDIA_SCRIPT_NO
				LIMIT ${START_POINT}, ${END_POINT}
			) S
		ON DUPLICATE KEY UPDATE
			MOB_CAMP_PAR_MTH_STATS.TOT_EPRS_CNT			= MOB_CAMP_PAR_MTH_STATS.TOT_EPRS_CNT		+ S.TOT_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_CAMP_PAR_MTH_STATS.PAR_EPRS_CNT		+ S.PAR_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.CLICK_CNT			= MOB_CAMP_PAR_MTH_STATS.CLICK_CNT			+ S.CLICK_CNT
			, MOB_CAMP_PAR_MTH_STATS.ADVRTS_AMT			= MOB_CAMP_PAR_MTH_STATS.ADVRTS_AMT			+ S.ADVRTS_AMT
			, MOB_CAMP_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_CAMP_PAR_MTH_STATS.MEDIA_PYMNT_AMT	+ S.MEDIA_PYMNT_AMT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_CAMP_PAR_MTH_STATS.TRGT_EPRS_CNT		+ S.TRGT_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_CAMP_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	+ S.TRGT_PAR_EPRS_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_CLICK_CNT		= MOB_CAMP_PAR_MTH_STATS.TRGT_CLICK_CNT		+ S.TRGT_CLICK_CNT
			, MOB_CAMP_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_CAMP_PAR_MTH_STATS.TRGT_ADVRTS_AMT	+ S.TRGT_ADVRTS_AMT
			, MOB_CAMP_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_CAMP_PAR_MTH_STATS.ALT_DTTM			= NOW();
	</insert>
	<insert id="INSERT_TEMP_PARGATR_STATS2" parameterType="Map">
		/* INSERT_TEMP_PARGATR_STATS2 */
		INSERT INTO
					BILLING.MOB_CAMP_MTH_STATS
				(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, SITE_CODE
				
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
			SELECT * FROM (
				SELECT
					DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, SITE_CODE
					
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, 0 PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT
					, SUM(ADVRTS_AMT)ADVRTS_AMT, 0 MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
					
				FROM BILLING.MOB_CAMP_HH_STATS A
				
				WHERE STATS_DTTM =${STATS_DTTM}
					AND STATS_HH =#{STATS_HH}
					AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}

				GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, SITE_CODE
				LIMIT ${START_POINT}, ${END_POINT}
			) S
		ON DUPLICATE KEY UPDATE
			MOB_CAMP_MTH_STATS.TOT_EPRS_CNT			= MOB_CAMP_MTH_STATS.TOT_EPRS_CNT		+ S.TOT_EPRS_CNT
			, MOB_CAMP_MTH_STATS.PAR_EPRS_CNT		= MOB_CAMP_MTH_STATS.PAR_EPRS_CNT		+ S.PAR_EPRS_CNT
			, MOB_CAMP_MTH_STATS.CLICK_CNT			= MOB_CAMP_MTH_STATS.CLICK_CNT			+ S.CLICK_CNT
			, MOB_CAMP_MTH_STATS.ADVRTS_AMT			= MOB_CAMP_MTH_STATS.ADVRTS_AMT			+ S.ADVRTS_AMT
			, MOB_CAMP_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_CAMP_MTH_STATS.MEDIA_PYMNT_AMT	+ S.MEDIA_PYMNT_AMT
			, MOB_CAMP_MTH_STATS.TRGT_EPRS_CNT		= MOB_CAMP_MTH_STATS.TRGT_EPRS_CNT		+ S.TRGT_EPRS_CNT
			, MOB_CAMP_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_CAMP_MTH_STATS.TRGT_PAR_EPRS_CNT	+ S.TRGT_PAR_EPRS_CNT
			, MOB_CAMP_MTH_STATS.TRGT_CLICK_CNT		= MOB_CAMP_MTH_STATS.TRGT_CLICK_CNT		+ S.TRGT_CLICK_CNT
			, MOB_CAMP_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_CAMP_MTH_STATS.TRGT_ADVRTS_AMT	+ S.TRGT_ADVRTS_AMT
			, MOB_CAMP_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_CAMP_MTH_STATS.ALT_DTTM			= NOW();
	</insert>
	<insert id="INSERT_TEMP_PARGATR_STATS3" parameterType="Map">
		/* INSERT_TEMP_PARGATR_STATS3 */
		INSERT INTO
					BILLING.MOB_ADVER_PAR_MTH_STATS
				(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, ADVER_ID, MEDIA_PAR_NO
				
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
			SELECT * FROM (
				SELECT
					DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, ADVER_ID, MEDIA_SCRIPT_NO MEDIA_PAR_NO
					
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT
					, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
					
				FROM BILLING.MOB_ADVER_MEDIA_HH_STATS A
				
				WHERE STATS_DTTM =${STATS_DTTM}
					AND STATS_HH =#{STATS_HH}
					AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}

				GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, ADVER_ID, MEDIA_SCRIPT_NO
				LIMIT ${START_POINT}, ${END_POINT}
			) S
		ON DUPLICATE KEY UPDATE
			MOB_ADVER_PAR_MTH_STATS.TOT_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.TOT_EPRS_CNT		+ S.TOT_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.PAR_EPRS_CNT		+ S.PAR_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.CLICK_CNT			= MOB_ADVER_PAR_MTH_STATS.CLICK_CNT			+ S.CLICK_CNT
			, MOB_ADVER_PAR_MTH_STATS.ADVRTS_AMT		= MOB_ADVER_PAR_MTH_STATS.ADVRTS_AMT		+ S.ADVRTS_AMT
			, MOB_ADVER_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_ADVER_PAR_MTH_STATS.MEDIA_PYMNT_AMT	+ S.MEDIA_PYMNT_AMT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_ADVER_PAR_MTH_STATS.TRGT_EPRS_CNT		+ S.TRGT_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_ADVER_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	+ S.TRGT_PAR_EPRS_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_CLICK_CNT	= MOB_ADVER_PAR_MTH_STATS.TRGT_CLICK_CNT	+ S.TRGT_CLICK_CNT
			, MOB_ADVER_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_ADVER_PAR_MTH_STATS.TRGT_ADVRTS_AMT	+ S.TRGT_ADVRTS_AMT
			, MOB_ADVER_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_ADVER_PAR_MTH_STATS.ALT_DTTM			= NOW();
	</insert>
	<insert id="INSERT_TEMP_PARGATR_STATS4" parameterType="Map">
		/* INSERT_TEMP_PARGATR_STATS4 */
		INSERT INTO
					BILLING.MOB_ADVER_MTH_STATS
				(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, ADVER_ID
				
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
			SELECT * FROM (
				SELECT
					DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, ADVER_ID
					
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT
					, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
					
				FROM BILLING.MOB_ADVER_HH_STATS A
				
				WHERE STATS_DTTM =${STATS_DTTM}
					AND STATS_HH =#{STATS_HH}
					AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}

				GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, ADVER_ID
				LIMIT ${START_POINT}, ${END_POINT}
			) S
		ON DUPLICATE KEY UPDATE
			MOB_ADVER_MTH_STATS.TOT_EPRS_CNT		= MOB_ADVER_MTH_STATS.TOT_EPRS_CNT		+ S.TOT_EPRS_CNT
			, MOB_ADVER_MTH_STATS.PAR_EPRS_CNT		= MOB_ADVER_MTH_STATS.PAR_EPRS_CNT		+ S.PAR_EPRS_CNT
			, MOB_ADVER_MTH_STATS.CLICK_CNT			= MOB_ADVER_MTH_STATS.CLICK_CNT			+ S.CLICK_CNT
			, MOB_ADVER_MTH_STATS.ADVRTS_AMT		= MOB_ADVER_MTH_STATS.ADVRTS_AMT		+ S.ADVRTS_AMT
			, MOB_ADVER_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_ADVER_MTH_STATS.MEDIA_PYMNT_AMT	+ S.MEDIA_PYMNT_AMT
			, MOB_ADVER_MTH_STATS.TRGT_EPRS_CNT		= MOB_ADVER_MTH_STATS.TRGT_EPRS_CNT		+ S.TRGT_EPRS_CNT
			, MOB_ADVER_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_ADVER_MTH_STATS.TRGT_PAR_EPRS_CNT	+ S.TRGT_PAR_EPRS_CNT
			, MOB_ADVER_MTH_STATS.TRGT_CLICK_CNT	= MOB_ADVER_MTH_STATS.TRGT_CLICK_CNT	+ S.TRGT_CLICK_CNT
			, MOB_ADVER_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_ADVER_MTH_STATS.TRGT_ADVRTS_AMT	+ S.TRGT_ADVRTS_AMT
			, MOB_ADVER_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_ADVER_MTH_STATS.ALT_DTTM			= NOW();
	</insert>
	<insert id="INSERT_TEMP_PARGATR_STATS5" parameterType="Map">
		/* INSERT_TEMP_PARGATR_STATS5 */
		INSERT INTO
					BILLING.MOB_MEDIA_PAR_MTH_STATS
				(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, MEDIA_PAR_NO, MEDIA_ID
				
				, MEDIA_TP_CODE
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
			SELECT * FROM (
				SELECT
					DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, MEDIA_SCRIPT_NO MEDIA_PAR_NO, MEDIA_ID
					
					, MEDIA_TP_CODE
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT
					, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
					
				FROM BILLING.MOB_MEDIA_SCRIPT_HH_STATS
				
				WHERE STATS_DTTM =${STATS_DTTM}
					AND STATS_HH =#{STATS_HH}
					AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}

				GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, MEDIA_SCRIPT_NO
				LIMIT ${START_POINT}, ${END_POINT}
			) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_PAR_MTH_STATS.TOT_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.TOT_EPRS_CNT		+ S.TOT_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.PAR_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.PAR_EPRS_CNT		+ S.PAR_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.CLICK_CNT			= MOB_MEDIA_PAR_MTH_STATS.CLICK_CNT			+ S.CLICK_CNT
			, MOB_MEDIA_PAR_MTH_STATS.ADVRTS_AMT		= MOB_MEDIA_PAR_MTH_STATS.ADVRTS_AMT		+ S.ADVRTS_AMT
			, MOB_MEDIA_PAR_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_MEDIA_PAR_MTH_STATS.MEDIA_PYMNT_AMT	+ S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_EPRS_CNT		= MOB_MEDIA_PAR_MTH_STATS.TRGT_EPRS_CNT		+ S.TRGT_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_PAR_EPRS_CNT	+ S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_CLICK_CNT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_CLICK_CNT	+ S.TRGT_CLICK_CNT
			, MOB_MEDIA_PAR_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_MEDIA_PAR_MTH_STATS.TRGT_ADVRTS_AMT	+ S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_PAR_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_MEDIA_PAR_MTH_STATS.ALT_DTTM			= NOW();
	</insert>
	<insert id="INSERT_TEMP_PARGATR_STATS6" parameterType="Map">
		/* INSERT_TEMP_PARGATR_STATS6 */
		INSERT INTO
					BILLING.MOB_MEDIA_MTH_STATS
				(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				, MEDIA_ID
				
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
			SELECT * FROM (
				SELECT
					DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, MEDIA_ID
					
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT
					, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
					
				FROM BILLING.MOB_MEDIA_HH_STATS A
				
				WHERE STATS_DTTM =${STATS_DTTM}
					AND STATS_HH =#{STATS_HH}
					AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}

				GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					, MEDIA_ID
				LIMIT ${START_POINT}, ${END_POINT}
			) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_MTH_STATS.TOT_EPRS_CNT		= MOB_MEDIA_MTH_STATS.TOT_EPRS_CNT		+ S.TOT_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.PAR_EPRS_CNT		= MOB_MEDIA_MTH_STATS.PAR_EPRS_CNT		+ S.PAR_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.CLICK_CNT			= MOB_MEDIA_MTH_STATS.CLICK_CNT			+ S.CLICK_CNT
			, MOB_MEDIA_MTH_STATS.ADVRTS_AMT		= MOB_MEDIA_MTH_STATS.ADVRTS_AMT		+ S.ADVRTS_AMT
			, MOB_MEDIA_MTH_STATS.MEDIA_PYMNT_AMT	= MOB_MEDIA_MTH_STATS.MEDIA_PYMNT_AMT	+ S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_MTH_STATS.TRGT_EPRS_CNT		= MOB_MEDIA_MTH_STATS.TRGT_EPRS_CNT		+ S.TRGT_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_PAR_EPRS_CNT	= MOB_MEDIA_MTH_STATS.TRGT_PAR_EPRS_CNT	+ S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_CLICK_CNT	= MOB_MEDIA_MTH_STATS.TRGT_CLICK_CNT	+ S.TRGT_CLICK_CNT
			, MOB_MEDIA_MTH_STATS.TRGT_ADVRTS_AMT	= MOB_MEDIA_MTH_STATS.TRGT_ADVRTS_AMT	+ S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_MTH_STATS.ALT_USER_ID		= 'BATCH'
			, MOB_MEDIA_MTH_STATS.ALT_DTTM			= NOW();
	</insert>
	<insert id="INSERT_TEMP_PARGATR_STATS7" parameterType="Map">
		/* INSERT_TEMP_PARGATR_STATS7 */
		INSERT INTO
					BILLING.MOB_COM_STATS_MTH_INFO
				(STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM)
			SELECT * FROM (
				SELECT
					DATE_FORMAT(STATS_DTTM,'%Y%m')STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
					
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT
					, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					, 'BATCH' REG_USER_ID, NOW() REG_DTTM, NULL ALT_USER_ID, NULL ALT_DTTM
					
				FROM BILLING.MOB_COM_HH_STATS_INFO A
				
				WHERE STATS_DTTM =${STATS_DTTM}
					AND STATS_HH =#{STATS_HH}
					AND ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}

				GROUP BY DATE_FORMAT(STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
				LIMIT ${START_POINT}, ${END_POINT}
			) S
		ON DUPLICATE KEY UPDATE
			MOB_COM_STATS_MTH_INFO.TOT_EPRS_CNT			= MOB_COM_STATS_MTH_INFO.TOT_EPRS_CNT		+ S.TOT_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.PAR_EPRS_CNT		= MOB_COM_STATS_MTH_INFO.PAR_EPRS_CNT		+ S.PAR_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.CLICK_CNT			= MOB_COM_STATS_MTH_INFO.CLICK_CNT			+ S.CLICK_CNT
			, MOB_COM_STATS_MTH_INFO.ADVRTS_AMT			= MOB_COM_STATS_MTH_INFO.ADVRTS_AMT			+ S.ADVRTS_AMT
			, MOB_COM_STATS_MTH_INFO.MEDIA_PYMNT_AMT	= MOB_COM_STATS_MTH_INFO.MEDIA_PYMNT_AMT	+ S.MEDIA_PYMNT_AMT
			, MOB_COM_STATS_MTH_INFO.TRGT_EPRS_CNT		= MOB_COM_STATS_MTH_INFO.TRGT_EPRS_CNT		+ S.TRGT_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_PAR_EPRS_CNT	= MOB_COM_STATS_MTH_INFO.TRGT_PAR_EPRS_CNT	+ S.TRGT_PAR_EPRS_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_CLICK_CNT		= MOB_COM_STATS_MTH_INFO.TRGT_CLICK_CNT		+ S.TRGT_CLICK_CNT
			, MOB_COM_STATS_MTH_INFO.TRGT_ADVRTS_AMT	= MOB_COM_STATS_MTH_INFO.TRGT_ADVRTS_AMT	+ S.TRGT_ADVRTS_AMT
			, MOB_COM_STATS_MTH_INFO.ALT_USER_ID		= 'BATCH'
			, MOB_COM_STATS_MTH_INFO.ALT_DTTM			= NOW();
	</insert>
	<insert id="UPDATE_MOB_CNVRS_RENEW_MTH_STATS_REVISION" parameterType="Map">
	INSERT INTO BILLING.MOB_CNVRS_RENEW_MTH_STATS (
		STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, PAR_NO
		, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		)
		SELECT STATS_MTH , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, PAR_NO
		, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		FROM (
		SELECT
		LEFT(STATS_DTTM,6) AS STATS_MTH , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, S.SITE_CODE, PAR_NO
		, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		, SUM(ORDER_AMT     ) AS ORDER_AMT
		, SUM(ORDER_CNT     ) AS ORDER_CNT
		, IF(SUM(ORDER_QY) > 2000000000 , 2000000000 , SUM(ORDER_QY))  AS ORDER_QY
		, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
		, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
		, IF(SUM(TRGT_ORDER_QY) > 2000000000 , 2000000000 , SUM(TRGT_ORDER_QY)) AS TRGT_ORDER_QY
		, REG_USER_ID
		FROM BILLING.MOB_CNVRS_RENEW_STATS S
		WHERE STATS_DTTM BETWEEN #{firstDate} AND #{lastDate}
		GROUP BY
		LEFT(STATS_DTTM,6), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, PAR_NO
		, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) RESULT
		ON  DUPLICATE KEY UPDATE
		MOB_CNVRS_RENEW_MTH_STATS.ORDER_AMT = RESULT.ORDER_AMT
		, MOB_CNVRS_RENEW_MTH_STATS.ORDER_CNT = RESULT.ORDER_CNT
		, MOB_CNVRS_RENEW_MTH_STATS.ORDER_QY  = RESULT.ORDER_QY
		, MOB_CNVRS_RENEW_MTH_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT
		, MOB_CNVRS_RENEW_MTH_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT
		, MOB_CNVRS_RENEW_MTH_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
		;
	
	</insert>
	<insert id="DELETE_MOB_CNVRS_RENEW_MTH_STATS_REVISION" parameterType="Map">
 	DELETE FROM BILLING.MOB_CNVRS_RENEW_MTH_STATS WHERE STATS_MTH = LEFT(#{firstDate},6);
	</insert>
</mapper>

