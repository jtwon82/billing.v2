<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hHtoDDMapper">

	<select id="getCurrentData" resultType="Map">
		SELECT userid from adsite order by rand()
	</select>
	
	
	<select id="selectHistory" parameterType="Map" resultType="Map">
		SELECT * 
		FROM MOB_COM_FLAG_INFO 
		WHERE STATS_DTTM=#{yyyymmdd} AND STATS_HH=#{hh} AND ADVRTS_TP_CODE=#{adGubun} AND PLTFOM_TP_CODE=#{platform}
		LIMIT 1
	</select>
	
	<insert id="insertHistory" parameterType="Map">
		INSERT INTO MOB_COM_FLAG_INFO(STATS_DTTM, STATS_HH, ADVRTS_TP_CODE, PLTFOM_TP_CODE, REG_USER_ID, REG_DTTM)
		VALUES(#{yyyymmdd}, #{hh}, #{adGubun}, #{platform}, 'BATCH', now())
	</insert>
	
	<select id="selectGroupKey" resultType="Map" useCache="false">
		SELECT b.code_val, a.w, a.ymd, a.hh
		FROM (
			SELECT 'W'w, 'ymd'ymd, 'hh'hh UNION SELECT 'M'w, 'ymd'ymd, 'hh'hh
		)a, (
			SELECT a.CODE_ID, a.CODE_VAL FROM dreamsearch.MOBON_COM_CODE a WHERE a.CODE_TP_ID='ADVRTS_TP_CODE'
		)b
	</select>
	
	
	<insert id="MOB_ADVER_MEDIA_STATS" parameterType="Map">
	<![CDATA[
INSERT INTO MOB_ADVER_MEDIA_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, ADVER_ID, MEDIA_SCRIPT_NO
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID, MEDIA_SCRIPT_NO
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM MOB_ADVER_MEDIA_HH_STATS a 
		WHERE STATS_DTTM=#{yyyymmdd} AND STATS_HH=#{hh} AND PLTFOM_TP_CODE=#{platform} AND ADVRTS_TP_CODE=#{adGubun} 
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID, MEDIA_SCRIPT_NO
	) S
	ON DUPLICATE KEY UPDATE
			MOB_ADVER_MEDIA_STATS.TOT_EPRS_CNT	=	MOB_ADVER_MEDIA_STATS.TOT_EPRS_CNT+S.TOT_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.PAR_EPRS_CNT	=	MOB_ADVER_MEDIA_STATS.PAR_EPRS_CNT+S.PAR_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.CLICK_CNT	=	MOB_ADVER_MEDIA_STATS.CLICK_CNT+S.CLICK_CNT
		,	MOB_ADVER_MEDIA_STATS.ADVRTS_AMT	=	MOB_ADVER_MEDIA_STATS.ADVRTS_AMT+S.ADVRTS_AMT
		,	MOB_ADVER_MEDIA_STATS.MEDIA_PYMNT_AMT	=	MOB_ADVER_MEDIA_STATS.MEDIA_PYMNT_AMT+S.MEDIA_PYMNT_AMT
		,	MOB_ADVER_MEDIA_STATS.TRGT_EPRS_CNT	=	MOB_ADVER_MEDIA_STATS.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.TRGT_PAR_EPRS_CNT	=	MOB_ADVER_MEDIA_STATS.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
		,	MOB_ADVER_MEDIA_STATS.TRGT_CLICK_CNT	=	MOB_ADVER_MEDIA_STATS.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
		,	MOB_ADVER_MEDIA_STATS.TRGT_ADVRTS_AMT	=	MOB_ADVER_MEDIA_STATS.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW();
		]]>
	</insert>
	
	<insert id="MOB_ADVER_STATS" parameterType="Map">
	<![CDATA[
INSERT INTO MOB_ADVER_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, ADVER_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM MOB_ADVER_HH_STATS a 
		WHERE STATS_DTTM=#{yyyymmdd} AND STATS_HH=#{hh} AND PLTFOM_TP_CODE=#{platform} AND ADVRTS_TP_CODE=#{adGubun}
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, ADVER_ID
	) S
	ON DUPLICATE KEY UPDATE
			MOB_ADVER_STATS.TOT_EPRS_CNT	=	MOB_ADVER_STATS.TOT_EPRS_CNT+S.TOT_EPRS_CNT
		,	MOB_ADVER_STATS.PAR_EPRS_CNT	=	MOB_ADVER_STATS.PAR_EPRS_CNT+S.PAR_EPRS_CNT
		,	MOB_ADVER_STATS.CLICK_CNT	=	MOB_ADVER_STATS.CLICK_CNT+S.CLICK_CNT
		,	MOB_ADVER_STATS.ADVRTS_AMT	=	MOB_ADVER_STATS.ADVRTS_AMT+S.ADVRTS_AMT
		,	MOB_ADVER_STATS.MEDIA_PYMNT_AMT	=	MOB_ADVER_STATS.MEDIA_PYMNT_AMT+S.MEDIA_PYMNT_AMT
		,	MOB_ADVER_STATS.TRGT_EPRS_CNT	=	MOB_ADVER_STATS.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
		,	MOB_ADVER_STATS.TRGT_PAR_EPRS_CNT	=	MOB_ADVER_STATS.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
		,	MOB_ADVER_STATS.TRGT_CLICK_CNT	=	MOB_ADVER_STATS.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
		,	MOB_ADVER_STATS.TRGT_ADVRTS_AMT	=	MOB_ADVER_STATS.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW();
		]]>
	</insert>

	<insert id="MOB_CAMP_MEDIA_STATS" parameterType="Map">
	<![CDATA[
INSERT INTO MOB_CAMP_MEDIA_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, SITE_CODE, MEDIA_SCRIPT_NO
		, TOT_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE, MEDIA_SCRIPT_NO
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM MOB_CAMP_MEDIA_HH_STATS a 
		WHERE STATS_DTTM=#{yyyymmdd} AND STATS_HH=#{hh} AND PLTFOM_TP_CODE=#{platform} AND ADVRTS_TP_CODE=#{adGubun}
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE, MEDIA_SCRIPT_NO
	) S
	ON DUPLICATE KEY UPDATE
			MOB_CAMP_MEDIA_STATS.TOT_EPRS_CNT	=	MOB_CAMP_MEDIA_STATS.TOT_EPRS_CNT+S.TOT_EPRS_CNT
		,	MOB_CAMP_MEDIA_STATS.CLICK_CNT	=	MOB_CAMP_MEDIA_STATS.CLICK_CNT+S.CLICK_CNT
		,	MOB_CAMP_MEDIA_STATS.ADVRTS_AMT	=	MOB_CAMP_MEDIA_STATS.ADVRTS_AMT+S.ADVRTS_AMT
		,	MOB_CAMP_MEDIA_STATS.MEDIA_PYMNT_AMT	=	MOB_CAMP_MEDIA_STATS.MEDIA_PYMNT_AMT+S.MEDIA_PYMNT_AMT
		,	MOB_CAMP_MEDIA_STATS.TRGT_EPRS_CNT	=	MOB_CAMP_MEDIA_STATS.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
		,	MOB_CAMP_MEDIA_STATS.TRGT_PAR_EPRS_CNT	=	MOB_CAMP_MEDIA_STATS.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
		,	MOB_CAMP_MEDIA_STATS.TRGT_CLICK_CNT	=	MOB_CAMP_MEDIA_STATS.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
		,	MOB_CAMP_MEDIA_STATS.TRGT_ADVRTS_AMT	=	MOB_CAMP_MEDIA_STATS.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW();
		]]>
	</insert>

	<insert id="MOB_CAMP_STATS" parameterType="Map">
	<![CDATA[
INSERT INTO MOB_CAMP_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, SITE_CODE
		, TOT_EPRS_CNT, CLICK_CNT, ADVRTS_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM MOB_CAMP_HH_STATS a 
		WHERE STATS_DTTM=#{yyyymmdd} AND STATS_HH=#{hh} AND PLTFOM_TP_CODE=#{platform} AND ADVRTS_TP_CODE=#{adGubun}
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SITE_CODE
	) S
	ON DUPLICATE KEY UPDATE
			MOB_CAMP_STATS.TOT_EPRS_CNT	=	MOB_CAMP_STATS.TOT_EPRS_CNT+S.TOT_EPRS_CNT
		,	MOB_CAMP_STATS.CLICK_CNT	=	MOB_CAMP_STATS.CLICK_CNT+S.CLICK_CNT
		,	MOB_CAMP_STATS.ADVRTS_AMT	=	MOB_CAMP_STATS.ADVRTS_AMT+S.ADVRTS_AMT
		,	MOB_CAMP_STATS.TRGT_EPRS_CNT	=	MOB_CAMP_STATS.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
		,	MOB_CAMP_STATS.TRGT_PAR_EPRS_CNT	=	MOB_CAMP_STATS.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
		,	MOB_CAMP_STATS.TRGT_CLICK_CNT	=	MOB_CAMP_STATS.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
		,	MOB_CAMP_STATS.TRGT_ADVRTS_AMT	=	MOB_CAMP_STATS.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW();
		]]>
	</insert>

	<insert id="MOB_COM_STATS_INFO" parameterType="Map">
	<![CDATA[
INSERT INTO MOB_COM_STATS_INFO(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM MOB_COM_HH_STATS_INFO a 
		WHERE STATS_DTTM=#{yyyymmdd}
		AND STATS_HH=#{hh}
		AND PLTFOM_TP_CODE=#{platform}
		AND ADVRTS_TP_CODE=#{adGubun}
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
	) S
	ON DUPLICATE KEY UPDATE
			MOB_COM_STATS_INFO.TOT_EPRS_CNT	=	MOB_COM_STATS_INFO.TOT_EPRS_CNT+S.TOT_EPRS_CNT
		,	MOB_COM_STATS_INFO.PAR_EPRS_CNT	=	MOB_COM_STATS_INFO.PAR_EPRS_CNT+S.PAR_EPRS_CNT
		,	MOB_COM_STATS_INFO.CLICK_CNT	=	MOB_COM_STATS_INFO.CLICK_CNT+S.CLICK_CNT
		,	MOB_COM_STATS_INFO.ADVRTS_AMT	=	MOB_COM_STATS_INFO.ADVRTS_AMT+S.ADVRTS_AMT
		,	MOB_COM_STATS_INFO.MEDIA_PYMNT_AMT	=	MOB_COM_STATS_INFO.MEDIA_PYMNT_AMT+S.MEDIA_PYMNT_AMT
		,	MOB_COM_STATS_INFO.TRGT_EPRS_CNT	=	MOB_COM_STATS_INFO.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
		,	MOB_COM_STATS_INFO.TRGT_PAR_EPRS_CNT	=	MOB_COM_STATS_INFO.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
		,	MOB_COM_STATS_INFO.TRGT_CLICK_CNT	=	MOB_COM_STATS_INFO.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
		,	MOB_COM_STATS_INFO.TRGT_ADVRTS_AMT	=	MOB_COM_STATS_INFO.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW();
		]]>
	</insert>

	<insert id="MOB_MEDIA_SCRIPT_STATS" parameterType="Map">
	<![CDATA[
INSERT INTO MOB_MEDIA_SCRIPT_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, MEDIA_SCRIPT_NO
		, MEDIA_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_SCRIPT_NO
			, MEDIA_ID
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM MOB_MEDIA_SCRIPT_HH_STATS a 
		WHERE STATS_DTTM=#{yyyymmdd} AND STATS_HH=#{hh} AND PLTFOM_TP_CODE=#{platform} AND ADVRTS_TP_CODE=#{adGubun}
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_SCRIPT_NO
	) S
	ON DUPLICATE KEY UPDATE
			MOB_MEDIA_SCRIPT_STATS.TOT_EPRS_CNT	=	MOB_MEDIA_SCRIPT_STATS.TOT_EPRS_CNT+S.TOT_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.PAR_EPRS_CNT	=	MOB_MEDIA_SCRIPT_STATS.PAR_EPRS_CNT+S.PAR_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.CLICK_CNT	=	MOB_MEDIA_SCRIPT_STATS.CLICK_CNT+S.CLICK_CNT
		,	MOB_MEDIA_SCRIPT_STATS.ADVRTS_AMT	=	MOB_MEDIA_SCRIPT_STATS.ADVRTS_AMT+S.ADVRTS_AMT
		,	MOB_MEDIA_SCRIPT_STATS.MEDIA_PYMNT_AMT	=	MOB_MEDIA_SCRIPT_STATS.MEDIA_PYMNT_AMT+S.MEDIA_PYMNT_AMT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_EPRS_CNT	=	MOB_MEDIA_SCRIPT_STATS.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_PAR_EPRS_CNT	=	MOB_MEDIA_SCRIPT_STATS.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_CLICK_CNT	=	MOB_MEDIA_SCRIPT_STATS.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
		,	MOB_MEDIA_SCRIPT_STATS.TRGT_ADVRTS_AMT	=	MOB_MEDIA_SCRIPT_STATS.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW();		
		]]>
	</insert>

	<insert id="MOB_MEDIA_STATS" parameterType="Map">
	<![CDATA[
INSERT INTO MOB_MEDIA_STATS(STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
		, MEDIA_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
		, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
		)
	SELECT * FROM (
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_ID
			, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
			, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM MOB_MEDIA_HH_STATS a 
		WHERE STATS_DTTM=#{yyyymmdd} AND STATS_HH=#{hh} AND PLTFOM_TP_CODE=#{platform} AND ADVRTS_TP_CODE=#{adGubun}
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ITL_TP_CODE
			, MEDIA_ID
	) S
	ON DUPLICATE KEY UPDATE
			MOB_MEDIA_STATS.TOT_EPRS_CNT	=	MOB_MEDIA_STATS.TOT_EPRS_CNT+S.TOT_EPRS_CNT
		,	MOB_MEDIA_STATS.PAR_EPRS_CNT	=	MOB_MEDIA_STATS.PAR_EPRS_CNT+S.PAR_EPRS_CNT
		,	MOB_MEDIA_STATS.CLICK_CNT	=	MOB_MEDIA_STATS.CLICK_CNT+S.CLICK_CNT
		,	MOB_MEDIA_STATS.ADVRTS_AMT	=	MOB_MEDIA_STATS.ADVRTS_AMT+S.ADVRTS_AMT
		,	MOB_MEDIA_STATS.MEDIA_PYMNT_AMT	=	MOB_MEDIA_STATS.MEDIA_PYMNT_AMT+S.MEDIA_PYMNT_AMT
		,	MOB_MEDIA_STATS.TRGT_EPRS_CNT	=	MOB_MEDIA_STATS.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
		,	MOB_MEDIA_STATS.TRGT_PAR_EPRS_CNT	=	MOB_MEDIA_STATS.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
		,	MOB_MEDIA_STATS.TRGT_CLICK_CNT	=	MOB_MEDIA_STATS.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
		,	MOB_MEDIA_STATS.TRGT_ADVRTS_AMT	=	MOB_MEDIA_STATS.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
		,	ALT_USER_ID='BATCH', ALT_DTTM=NOW();
		]]>
	</insert>


	<insert id="MOB_CNVRS_STATS" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_STATS
		(
			STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,SITE_CODE,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
			,ORDER_AMT,ORDER_CNT,ORDER_QY,TRGT_ORDER_AMT,TRGT_ORDER_CNT,TRGT_ORDER_QY
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
		)
			SELECT * FROM (
				SELECT 
						STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,SITE_CODE,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
						,SUM(ORDER_AMT     ) AS ORDER_AMT     
						,SUM(ORDER_CNT     ) AS ORDER_CNT     
						,SUM(ORDER_QY      ) AS ORDER_QY      
						,SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
						,SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
						,SUM(TRGT_ORDER_QY ) AS TRGT_ORDER_QY 
						,REG_USER_ID
						,REG_DTTM
						,'BATCH' as ALT_USER_ID
						,NOW() AS ALT_DTTM
					FROM BILLING.MOB_CNVRS_HH_STATS a 
					WHERE STATS_DTTM BETWEEN DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -3 DAY),'%Y%m%d') 
						AND DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d')
					 GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO
					         , ITL_TP_CODE, SESION_SELNG_YN, DIRECT_YN, CLICK_TP, CNVRS_TP_CODE, MOB_ORDER_YN
			) S
			ON DUPLICATE KEY UPDATE
					MOB_CNVRS_STATS.ORDER_AMT	=	S.ORDER_AMT
				,	MOB_CNVRS_STATS.ORDER_CNT	=	S.ORDER_CNT
				,	MOB_CNVRS_STATS.ORDER_QY	=	S.ORDER_QY
				,	MOB_CNVRS_STATS.TRGT_ORDER_AMT	=	S.TRGT_ORDER_AMT
				,	MOB_CNVRS_STATS.TRGT_ORDER_CNT	=	S.TRGT_ORDER_CNT
				,	MOB_CNVRS_STATS.TRGT_ORDER_QY	=	S.TRGT_ORDER_QY
				,	ALT_USER_ID='BATCH', ALT_DTTM=NOW()
				;
		]]>
	</insert>
	<insert id="MOB_CNVRS_KPI_STATS" parameterType="Map">
	<![CDATA[
		INSERT INTO BILLING.MOB_CNVRS_KPI_STATS(
			STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
			,ORDER_AMT,ORDER_CNT,ORDER_QY,TRGT_ORDER_AMT,TRGT_ORDER_CNT,TRGT_ORDER_QY
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
				)
			SELECT * FROM (
				SELECT 
						STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
						,SUM(ORDER_AMT     ) AS ORDER_AMT     
						,SUM(ORDER_CNT     ) AS ORDER_CNT     
						,SUM(ORDER_QY      ) AS ORDER_QY      
						,SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
						,SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
						,SUM(TRGT_ORDER_QY ) AS TRGT_ORDER_QY 
						,REG_USER_ID
						,REG_DTTM
						,'BATCH' as ALT_USER_ID
						,NOW() AS ALT_DTTM
					FROM BILLING.MOB_CNVRS_STATS S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A
					WHERE STATS_DTTM=DATE_FORMAT(DATE_ADD(NOW(),interval -1 HOUR),'%Y%m%d')
						AND CONVERT(S.SITE_CODE USING EUCKR)=A.SITE_CODE
					 GROUP BY
						STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE,SESION_SELNG_YN,DIRECT_YN,CLICK_TP,CNVRS_TP_CODE,MOB_ORDER_YN
			) S
			ON DUPLICATE KEY UPDATE
					MOB_CNVRS_KPI_STATS.ORDER_AMT	=	S.ORDER_AMT
				,	MOB_CNVRS_KPI_STATS.ORDER_CNT	=	S.ORDER_CNT
				,	MOB_CNVRS_KPI_STATS.ORDER_QY	=	S.ORDER_QY
				,	MOB_CNVRS_KPI_STATS.TRGT_ORDER_AMT	=	S.TRGT_ORDER_AMT
				,	MOB_CNVRS_KPI_STATS.TRGT_ORDER_CNT	=	S.TRGT_ORDER_CNT
				,	MOB_CNVRS_KPI_STATS.TRGT_ORDER_QY	=	S.TRGT_ORDER_QY
				,	ALT_USER_ID='BATCH', ALT_DTTM=NOW()
				;
		]]>
	</insert>
	
	
	<!--  ////////////////////////////// 추가 시작 /////////////////////////// -->
	<!-- ////////////////////////// HH => HH 시작 //////////////////////////// -->
  
		
	<select id="sql_select_exe_his_last_time"  resultType="Map" >
		SELECT LAST_EXE_TIME, CAST(TIMEDIFF(NOW(),STR_TO_DATE(LAST_EXE_TIME,'%Y%m%d%H%i')) AS INTEGER)AS TIME_DIFF
		FROM (
			SELECT IFNULL(DATE_FORMAT(DATE_ADD(STR_TO_DATE(MAX(LAST_EXE_TIME),'%Y%m%d%H%i'),INTERVAL 1 MINUTE),'%Y%m%d%H%i'), DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -2 MINUTE),'%Y%m%d%H%i')) LAST_EXE_TIME
			FROM BILLING.MOB_BATCH_EXE_HIS
			WHERE TYPE = 'H'
		) T;
	</select>

	<select id="sql_SELECT_MOB_CAMP_MEDIA_HH_DDTM_HH"  parameterType="Map" resultType="Map">
	 		SELECT  
	 		     STATS_DTTM 
			    ,STATS_HH		    
			    ,DATE_FORMAT(DATE_ADD(now(),INTERVAL -1 MINUTE),'%Y%m%d%H%i') as NEW_LAST_EXE_TIME
		  FROM BILLING.MOB_CAMP_MEDIA_HH_STATS 		      
		 WHERE 1=1 			 
		   AND STATS_ALT_DT  BETWEEN #{LAST_EXE_TIME} AND date_format(now(),'%Y%m%d%H%i')
	    GROUP BY STATS_DTTM, STATS_HH
	</select>
	
	<select id="sql_SELECT_MOD_DATE" parameterType="Map" resultType="Map">
		SELECT
			DISTINCT A.STATS_DTTM
			, A.STATS_HH
			, A.ADVRTS_TP_CODE
			, DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 MINUTE),'%Y%m%d%H%i') MAX_LAST_EXE_TIME
		FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A
		WHERE 1=1 AND STATS_ALT_DT BETWEEN ${STATS_ALT_DT} AND  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 MINUTE),'%Y%m%d%H%i')
		ORDER BY STATS_DTTM DESC, STATS_HH DESC;
	</select>
		
	<select id="sql_SELECT_MOD_DATE_XXX" parameterType="Map" resultType="Map">
	
	 	SELECT  
 		     A.STATS_DTTM 
		    ,A.STATS_HH
		    ,A.ADVRTS_TP_CODE
		 FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A
		WHERE 1=1 
		    AND STATS_ALT_DT IN (
					    <foreach item="I" collection="list" separator=" , ">
					    	${I.LAST_EXE_TIME}
					    </foreach>
					   )
	    GROUP BY STATS_DTTM, STATS_HH,A.ADVRTS_TP_CODE 
	    
	</select>
	
	<select id="sql_SELECT_DATA_DIFF_LIST" parameterType="Map" resultType="Map">
	
	
	SELECT 
			 A.STATS_DTTM
			,A.STATS_HH
			,A.ADVRTS_TP_CODE
			,DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 MINUTE),'%Y%m%d%H%i') AS MAX_LAST_EXE_TIME
	FROM 
			(
				SELECT 
						  STATS_DTTM
						 ,STATS_HH	
						 ,ADVRTS_TP_CODE
						 ,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						 ,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						 ,SUM(CLICK_CNT) AS CLICK_CNT
						 ,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						 ,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT
			    FROM BILLING.MOB_CAMP_MEDIA_HH_STATS
			 WHERE 1=1
			      AND STATS_DTTM =  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 MINUTE) ,'%Y%m%d')
			      AND STATS_HH != DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -0 MINUTE) ,'%H')  
			 GROUP BY STATS_HH,ADVRTS_TP_CODE
		  ) A 
		LEFT OUTER JOIN 
	  	 (
			SELECT 
						  STATS_DTTM
						 ,STATS_HH	
						 ,ADVRTS_TP_CODE
						 ,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						 ,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						 ,SUM(CLICK_CNT) AS CLICK_CNT
						 ,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						 ,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT
			   FROM BILLING.MOB_MEDIA_SCRIPT_HH_STATS
			WHERE 1=1
			     AND STATS_DTTM =  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 MINUTE) ,'%Y%m%d')
			  	 AND STATS_HH != DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -0 MINUTE) ,'%H')
			 GROUP BY STATS_HH ,ADVRTS_TP_CODE   
		) B
		  ON A.STATS_DTTM  = B.STATS_DTTM
		AND A.STATS_HH = B.STATS_HH
		AND A.ADVRTS_TP_CODE = B.ADVRTS_TP_CODE
	WHERE 1= 1
	 	 AND (
	 	 				(A.TOT_EPRS_CNT - B.TOT_EPRS_CNT) != 0
					or (A.PAR_EPRS_CNT - B.PAR_EPRS_CNT) != 0
					or (A.CLICK_CNT - B.CLICK_CNT) != 0
					or (A.ADVRTS_AMT - B.ADVRTS_AMT) != 0
					or (A.MEDIA_PYMNT_AMT - B.MEDIA_PYMNT_AMT) != 0
				)

	
	</select>
	
	 
	
	<select id="sql_SELECT_MOD_DATE_COUNT" resultType="Map" parameterType="Map">
		SELECT
			A.STATS_DTTM, A.STATS_HH, A.ADVRTS_TP_CODE, COUNT(*) ROW_COUNT
		FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A
		WHERE 1=1
		AND		STATS_DTTM =${STATS_DTTM}
		AND 	STATS_HH =#{STATS_HH}
		AND 	ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}
		GROUP BY A.STATS_DTTM, A.STATS_HH, A.ADVRTS_TP_CODE;
	</select>
  
	<update id="hhTohhInsert">
	
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP;  
	
		CREATE TABLE IF NOT EXISTS BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP
		SELECT
				STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,SITE_CODE,MEDIA_SCRIPT_NO,ITL_TP_CODE
				,TOT_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
				,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM,PAR_EPRS_CNT
				,IFNULL(ADVER_ID,'-') AS ADVER_ID
				,IFNULL(MEDIA_ID,'-') AS MEDIA_ID
				,STATS_ALT_DT  
		FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A
		 WHERE 1=1    
		  AND STATS_DTTM =${STATS_DTTM}
		  AND STATS_HH =#{STATS_HH}
		  AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		;
	</update>
	
	
	<update id="sql_diff_MOB_COM_HH_STATS_INFO">
		
		INSERT INTO BILLING.MOB_COM_HH_STATS_INFO(
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ITL_TP_CODE
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM (
				/*///////////////////////////////////////////*/
				SELECT
					STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT      
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT      
					,SUM(CLICK_CNT   ) AS CLICK_CNT      
					,SUM(ADVRTS_AMT  ) AS ADVRTS_AMT           
					,SUM(MEDIA_PYMNT_AMT    ) AS MEDIA_PYMNT_AMT      
					,SUM(TRGT_EPRS_CNT   ) AS TRGT_EPRS_CNT      
					,SUM(TRGT_PAR_EPRS_CNT   ) AS TRGT_PAR_EPRS_CNT      
					,SUM(TRGT_CLICK_CNT   ) AS TRGT_CLICK_CNT      
					,SUM(TRGT_ADVRTS_AMT   ) AS TRGT_ADVRTS_AMT     
					,SUM(RETRN_CNT   ) AS RETRN_CNT
					,SUM(AVAL_CNT   ) AS AVAL_CNT
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP  A 
			  WHERE 1=1
				  AND STATS_DTTM = ${STATS_DTTM}
				  AND STATS_HH = #{STATS_HH}				  			
				GROUP BY STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ITL_TP_CODE
				/*///////////////////////////////////////////*/
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_COM_HH_STATS_INFO.TOT_EPRS_CNT 			= S.TOT_EPRS_CNT 
			,MOB_COM_HH_STATS_INFO.PAR_EPRS_CNT 			= S.PAR_EPRS_CNT 
			,MOB_COM_HH_STATS_INFO.CLICK_CNT 			= S.CLICK_CNT
			,MOB_COM_HH_STATS_INFO.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_COM_HH_STATS_INFO.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT
			,MOB_COM_HH_STATS_INFO.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_COM_HH_STATS_INFO.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_COM_HH_STATS_INFO.TRGT_CLICK_CNT 		= S.TRGT_CLICK_CNT
			,MOB_COM_HH_STATS_INFO.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_COM_HH_STATS_INFO.RETRN_CNT 		= S.RETRN_CNT
			,MOB_COM_HH_STATS_INFO.AVAL_CNT 		= S.AVAL_CNT
			,MOB_COM_HH_STATS_INFO.ALT_USER_ID 			='BATCH'
			,MOB_COM_HH_STATS_INFO.ALT_DTTM 				= NOW()  
			;
 
	</update>	 
	
	
	
	<update id="sql_diff_MOB_COM_HH_STATS_INFO_def">
		
		INSERT INTO BILLING.MOB_COM_HH_STATS_INFO(
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ITL_TP_CODE
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM (
				/*///////////////////////////////////////////*/
				SELECT
					STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT      
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT      
					,SUM(CLICK_CNT   ) AS CLICK_CNT      
					,SUM(ADVRTS_AMT  ) AS ADVRTS_AMT           
					,SUM(MEDIA_PYMNT_AMT    ) AS MEDIA_PYMNT_AMT      
					,SUM(TRGT_EPRS_CNT   ) AS TRGT_EPRS_CNT      
					,SUM(TRGT_PAR_EPRS_CNT   ) AS TRGT_PAR_EPRS_CNT      
					,SUM(TRGT_CLICK_CNT   ) AS TRGT_CLICK_CNT      
					,SUM(TRGT_ADVRTS_AMT   ) AS TRGT_ADVRTS_AMT     
					,SUM(RETRN_CNT   ) AS RETRN_CNT
					,SUM(AVAL_CNT   ) AS AVAL_CNT
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM
				FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A 
			  WHERE 1=1
				  AND STATS_DTTM = CAST(DATE_FORMAT(NOW(),'%Y%m%d') AS INT)
				  AND STATS_HH = DATE_FORMAT(NOW(),'%H')				  			
				GROUP BY STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ITL_TP_CODE
				/*///////////////////////////////////////////*/
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_COM_HH_STATS_INFO.TOT_EPRS_CNT 			= S.TOT_EPRS_CNT 
			,MOB_COM_HH_STATS_INFO.PAR_EPRS_CNT 			= S.PAR_EPRS_CNT 
			,MOB_COM_HH_STATS_INFO.CLICK_CNT 			= S.CLICK_CNT
			,MOB_COM_HH_STATS_INFO.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_COM_HH_STATS_INFO.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT
			,MOB_COM_HH_STATS_INFO.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_COM_HH_STATS_INFO.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_COM_HH_STATS_INFO.TRGT_CLICK_CNT 		= S.TRGT_CLICK_CNT
			,MOB_COM_HH_STATS_INFO.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_COM_HH_STATS_INFO.RETRN_CNT 		= S.RETRN_CNT
			,MOB_COM_HH_STATS_INFO.AVAL_CNT 		= S.AVAL_CNT
			,MOB_COM_HH_STATS_INFO.ALT_USER_ID 			='BATCH'
			,MOB_COM_HH_STATS_INFO.ALT_DTTM 				= NOW()  
			;
 
	</update>	 
	
	
	<update id="sql_diff_MOB_ADVER_HH_STATS">
		<![CDATA[ 
		 
		INSERT INTO BILLING.MOB_ADVER_HH_STATS(
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ADVER_ID,ITL_TP_CODE
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM ( 
				/*///////////////////////////////////////////*/
				SELECT
					STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ADVER_ID,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
					,SUM(CLICK_CNT) AS CLICK_CNT				
					,SUM(ADVRTS_AMT) AS ADVRTS_AMT
					,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
					,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
					,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
					,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)AS RETRN_CNT
					,SUM(AVAL_CNT)AS AVAL_CNT					
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() AS ALT_DTTM
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP  A 
				WHERE 1=1
				  AND STATS_DTTM = ${STATS_DTTM}
				  AND STATS_HH = #{STATS_HH} 
				GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, ITL_TP_CODE
				/*///////////////////////////////////////////*/
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_ADVER_HH_STATS.TOT_EPRS_CNT 			= S.TOT_EPRS_CNT 
			,MOB_ADVER_HH_STATS.PAR_EPRS_CNT 			= S.PAR_EPRS_CNT 			
			,MOB_ADVER_HH_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_ADVER_HH_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_ADVER_HH_STATS.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT			
			,MOB_ADVER_HH_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_ADVER_HH_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_ADVER_HH_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_ADVER_HH_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_ADVER_HH_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_ADVER_HH_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_ADVER_HH_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_ADVER_HH_STATS.ALT_DTTM 				= NOW()
			;
		]]>
	</update>
	
	<update id="sql_diff_MOB_CTGR_HH_STATS">
		<![CDATA[ 	
		
		INSERT INTO BILLING.MOB_CTGR_HH_STATS (
		STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,CTGR_SEQ,ITL_TP_CODE,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,
		ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,REG_USER_ID,REG_DTTM
		)
		SELECT * FROM (
					SELECT
				MCMHS.STATS_DTTM, MCMHS.STATS_HH,MCMHS.PLTFOM_TP_CODE,MCMHS.ADVRTS_PRDT_CODE,MCMHS.ADVRTS_TP_CODE,CTGR_SEQ,MCMHS.ITL_TP_CODE
				,SUM(MCMHS.TOT_EPRS_CNT) AS TOT_EPRS_CNT
				,SUM(MCMHS.PAR_EPRS_CNT) AS PAR_EPRS_CNT					
				,SUM(MCMHS.CLICK_CNT) AS CLICK_CNT				
				,SUM(MCMHS.ADVRTS_AMT) AS ADVRTS_AMT
				,SUM(MCMHS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
				,SUM(MCMHS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
				,SUM(MCMHS.TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
				,SUM(MCMHS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
				,SUM(MCMHS.TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
				,'BATCH' AS REG_USER_ID
				, NOW() AS REG_DTTM
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP AS  MCMHS 
				INNER JOIN dreamsearch.MOB_CTGR_USER_INFO  AS MCUI  ON MCMHS.ADVER_ID = MCUI.USER_ID
				WHERE STATS_DTTM = ${STATS_DTTM}
				AND STATS_HH = #{STATS_HH} 
				GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE
		) RESULT
		ON DUPLICATE KEY UPDATE 
		MOB_CTGR_HH_STATS.TOT_EPRS_CNT = RESULT.TOT_EPRS_CNT,
		MOB_CTGR_HH_STATS.PAR_EPRS_CNT = RESULT.PAR_EPRS_CNT,
		MOB_CTGR_HH_STATS.CLICK_CNT = RESULT.CLICK_CNT,
		MOB_CTGR_HH_STATS.ADVRTS_AMT = RESULT.ADVRTS_AMT,
		MOB_CTGR_HH_STATS.MEDIA_PYMNT_AMT = RESULT.MEDIA_PYMNT_AMT,
		MOB_CTGR_HH_STATS.TRGT_EPRS_CNT = RESULT.TRGT_EPRS_CNT,
		MOB_CTGR_HH_STATS.TRGT_PAR_EPRS_CNT  = RESULT.TRGT_PAR_EPRS_CNT,
		MOB_CTGR_HH_STATS.TRGT_CLICK_CNT = RESULT.TRGT_CLICK_CNT,
		MOB_CTGR_HH_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT,
		MOB_CTGR_HH_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
		MOB_CTGR_HH_STATS.REG_DTTM = RESULT.REG_DTTM,
		MOB_CTGR_HH_STATS.ALT_USER_ID = 'BATCH',
		MOB_CTGR_HH_STATS.ALT_DTTM = NOW() ;
		]]>
	</update>
	
	<update id="sql_diff_MOB_CAMP_HH_STATS">
 
		INSERT INTO BILLING.MOB_CAMP_HH_STATS (
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,SITE_CODE,ITL_TP_CODE
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM (
				/*///////////////////////////////////////////*/
				SELECT
					STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,SITE_CODE,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
					,SUM(CLICK_CNT) AS CLICK_CNT				
					,SUM(ADVRTS_AMT) AS ADVRTS_AMT			
					,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
					,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
					,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)AS RETRN_CNT
					,SUM(AVAL_CNT)AS AVAL_CNT
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP  A
				WHERE 1=1 
				  AND STATS_DTTM = ${STATS_DTTM}
				  AND STATS_HH = #{STATS_HH}				  
				GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ITL_TP_CODE
				/*///////////////////////////////////////////*/
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_CAMP_HH_STATS.TOT_EPRS_CNT 			= S.TOT_EPRS_CNT
			,MOB_CAMP_HH_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT
			,MOB_CAMP_HH_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_CAMP_HH_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_CAMP_HH_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_CAMP_HH_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_CAMP_HH_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_CAMP_HH_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_CAMP_HH_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_CAMP_HH_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_CAMP_HH_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_CAMP_HH_STATS.ALT_DTTM 				= NOW()
			;
  
	</update>
	
	
	<update id="sql_diff_MOB_MEDIA_HH_STATS">
		<![CDATA[ 
		 
		INSERT INTO BILLING.MOB_MEDIA_HH_STATS (
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,MEDIA_ID,ITL_TP_CODE
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM ( 
				/*///////////////////////////////////////////*/
				-- 수정된 데이타 
				SELECT
					STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,MEDIA_ID,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
					,SUM(CLICK_CNT) AS CLICK_CNT				
					,SUM(ADVRTS_AMT) AS ADVRTS_AMT
					,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
					,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
					,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
					,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)AS RETRN_CNT
					,SUM(AVAL_CNT)AS AVAL_CNT
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP  A 
				WHERE 1=1
				  AND STATS_DTTM = ${STATS_DTTM}
				  AND STATS_HH = #{STATS_HH}				  
				GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE
				/*///////////////////////////////////////////*/
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_MEDIA_HH_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_MEDIA_HH_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 			
			,MOB_MEDIA_HH_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_MEDIA_HH_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_MEDIA_HH_STATS.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT			
			,MOB_MEDIA_HH_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_MEDIA_HH_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_MEDIA_HH_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_MEDIA_HH_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_MEDIA_HH_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_MEDIA_HH_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_MEDIA_HH_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_MEDIA_HH_STATS.ALT_DTTM 			= NOW()
			;
		]]>
	</update>
	 
	
	
	<update id="sql_diff_MOB_MEDIA_SCRIPT_HH_STATS">
		<![CDATA[ 
		 
		INSERT INTO BILLING.MOB_MEDIA_SCRIPT_HH_STATS(
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,MEDIA_SCRIPT_NO,ITL_TP_CODE,MEDIA_ID
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM,MEDIA_TP_CODE
			) 
			SELECT * FROM (
				/*///////////////////////////////////////////*/
				SELECT
					STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,MEDIA_SCRIPT_NO,ITL_TP_CODE,MEDIA_ID
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
					,SUM(CLICK_CNT) AS CLICK_CNT				
					,SUM(ADVRTS_AMT) AS ADVRTS_AMT
					,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
					,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
					,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
					,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)AS RETRN_CNT
					,SUM(AVAL_CNT)AS AVAL_CNT
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM					
					, CASE WHEN LENGTH(IFNULL(B.scate,''))=0 THEN ''
				     WHEN LENGTH(IFNULL(B.scate,''))=1 THEN CONCAT('0',B.scate)
				       ELSE B.scate END AS MEDIA_TP_CODE
					FROM BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP    A  LEFT OUTER JOIN (
						SELECT b.scate,a.no 
						FROM dreamsearch.media_script a LEFT JOIN dreamsearch.media_site b 
						ON a.mediasite_no=b.no WHERE 1=1
					) B
					ON A.MEDIA_SCRIPT_NO = B.no 
				WHERE 1=1				
				  AND STATS_DTTM = ${STATS_DTTM}
				  AND STATS_HH = #{STATS_HH}				  
				GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
				/*///////////////////////////////////////////*/
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_MEDIA_SCRIPT_HH_STATS.TOT_EPRS_CNT 			= S.TOT_EPRS_CNT 
			,MOB_MEDIA_SCRIPT_HH_STATS.PAR_EPRS_CNT 			= S.PAR_EPRS_CNT 			
			,MOB_MEDIA_SCRIPT_HH_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_MEDIA_SCRIPT_HH_STATS.ADVRTS_AMT 			=S.ADVRTS_AMT
			,MOB_MEDIA_SCRIPT_HH_STATS.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT			
			,MOB_MEDIA_SCRIPT_HH_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_MEDIA_SCRIPT_HH_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_MEDIA_SCRIPT_HH_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_MEDIA_SCRIPT_HH_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT			
			,MOB_MEDIA_SCRIPT_HH_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_MEDIA_SCRIPT_HH_STATS.AVAL_CNT 		= S.AVAL_CNT			
			,MOB_MEDIA_SCRIPT_HH_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_MEDIA_SCRIPT_HH_STATS.ALT_DTTM 				= NOW()
			;
		]]>
	</update>
	
	
	<insert id="sql_createTable_MOB_ADVER_MEDIA_HH_STATS_Temp">
	 
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_ADVER_MEDIA_HH_STATS_TEMP;  
	
		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_ADVER_MEDIA_HH_STATS_TEMP
				SELECT
					STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
					,SUM(CLICK_CNT) AS CLICK_CNT				
					,SUM(ADVRTS_AMT) AS ADVRTS_AMT
					,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
					,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
					,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
					,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)AS RETRN_CNT
					,SUM(AVAL_CNT)AS AVAL_CNT
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM
				FROM 	BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP
				WHERE 1=1
				AND  STATS_DTTM = ${STATS_DTTM}
				AND  STATS_HH = #{STATS_HH}
				GROUP BY STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE,ADVER_ID, MEDIA_SCRIPT_NO, ITL_TP_CODE
		;
	</insert>
	
	
	
	
	
	<update id="sql_diff_MOB_ADVER_MEDIA_HH_STATS_T">
		<![CDATA[ 
		 
		INSERT INTO BILLING.MOB_ADVER_MEDIA_HH_STATS (
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			)  
			SELECT * FROM (
				SELECT
					O.STATS_DTTM,O.STATS_HH,O.PLTFOM_TP_CODE,O.ADVRTS_PRDT_CODE,O.ADVRTS_TP_CODE,O.ADVER_ID,O.MEDIA_SCRIPT_NO,O.ITL_TP_CODE
					,O.TOT_EPRS_CNT,O.PAR_EPRS_CNT,O.CLICK_CNT,O.ADVRTS_AMT,O.MEDIA_PYMNT_AMT,O.TRGT_EPRS_CNT,O.TRGT_PAR_EPRS_CNT,O.TRGT_CLICK_CNT,O.TRGT_ADVRTS_AMT,O.RETRN_CNT,O.AVAL_CNT
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() AS ALT_DTTM
			FROM BILLING_TEMP.MOB_ADVER_MEDIA_HH_STATS_TEMP O
			WHERE 1=1
			LIMIT ${START_POINT},${END_POINT}
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_ADVER_MEDIA_HH_STATS.TOT_EPRS_CNT 			= S.TOT_EPRS_CNT 
			,MOB_ADVER_MEDIA_HH_STATS.PAR_EPRS_CNT 			= S.PAR_EPRS_CNT 			
			,MOB_ADVER_MEDIA_HH_STATS.CLICK_CNT 				= S.CLICK_CNT
			,MOB_ADVER_MEDIA_HH_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_ADVER_MEDIA_HH_STATS.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT			
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_EPRS_CNT 			= S.TRGT_EPRS_CNT
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_PAR_EPRS_CNT 		= S.TRGT_PAR_EPRS_CNT
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_CLICK_CNT			= S.TRGT_CLICK_CNT
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_ADVER_MEDIA_HH_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_ADVER_MEDIA_HH_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_ADVER_MEDIA_HH_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_ADVER_MEDIA_HH_STATS.ALT_DTTM 				= NOW()
			; 

		]]>
	</update>
	
	
	
	
	
	<update id="sql_diff_MOB_ADVER_MEDIA_HH_STATS">
		<![CDATA[ 
		 
		INSERT INTO BILLING.MOB_ADVER_MEDIA_HH_STATS (
			STATS_DTTM,STATS_HH,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ADVER_ID,MEDIA_SCRIPT_NO,ITL_TP_CODE
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
		) 
		SELECT * FROM (
			SELECT * FROM (
			SELECT
			 O.STATS_DTTM
			,O.STATS_HH
			,O.PLTFOM_TP_CODE 
			,O.ADVRTS_PRDT_CODE 
			,O.ADVRTS_TP_CODE 
			,O.ADVER_ID
			,O.MEDIA_SCRIPT_NO
			,O.ITL_TP_CODE			
			,O.TOT_EPRS_CNT - IFNULL(S.TOT_EPRS_CNT,0) AS TOT_EPRS_CNT
			,O.PAR_EPRS_CNT - IFNULL(S.PAR_EPRS_CNT,0) AS PAR_EPRS_CNT			
			,O.CLICK_CNT - IFNULL(S.CLICK_CNT,0) AS CLICK_CNT
			,O.ADVRTS_AMT - IFNULL(S.ADVRTS_AMT,0) AS ADVRTS_AMT
			,O.MEDIA_PYMNT_AMT - IFNULL(S.MEDIA_PYMNT_AMT,0) AS MEDIA_PYMNT_AMT			
			,O.TRGT_EPRS_CNT - IFNULL(S.TRGT_EPRS_CNT,0) AS TRGT_EPRS_CNT
			,O.TRGT_PAR_EPRS_CNT - IFNULL(S.TRGT_PAR_EPRS_CNT,0) AS TRGT_PAR_EPRS_CNT
			,O.TRGT_CLICK_CNT - IFNULL(S.TRGT_CLICK_CNT,0) AS TRGT_CLICK_CNT
			,O.TRGT_ADVRTS_AMT - IFNULL(S.TRGT_ADVRTS_AMT,0) AS TRGT_ADVRTS_AMT
			,O.RETRN_CNT - IFNULL(S.RETRN_CNT,0) AS RETRN_CNT
			,O.AVAL_CNT - IFNULL(S.AVAL_CNT,0) AS AVAL_CNT
			,'BATCH' AS REG_USER_ID
			,NOW() AS REG_DTTM
			,'BATCH' AS ALT_USER_ID
			,NOW() AS ALT_DTTM
			FROM BILLING_TEMP.MOB_ADVER_MEDIA_HH_STATS_TEMP O 
			LEFT OUTER JOIN 
			(
			
			SELECT * 
			  FROM BILLING.MOB_ADVER_MEDIA_HH_STATS
			 WHERE 1=1 
			   	AND  STATS_DTTM = ${STATS_DTTM}
			    AND  STATS_HH = #{STATS_HH} 
			    
			) S
			 ON O.STATS_DTTM = S.STATS_DTTM
			AND O.STATS_HH = S.STATS_HH
			AND O.PLTFOM_TP_CODE = S.PLTFOM_TP_CODE
			AND O.ADVRTS_PRDT_CODE = S.ADVRTS_PRDT_CODE
			AND O.ADVRTS_TP_CODE = S.ADVRTS_TP_CODE
			AND O.ADVER_ID = S.ADVER_ID			
			AND O.MEDIA_SCRIPT_NO = S.MEDIA_SCRIPT_NO
			AND O.ITL_TP_CODE = S.ITL_TP_CODE
			
			) R
			WHERE 1=1
			  AND 
			    (
				TOT_EPRS_CNT!=0 
			     OR CLICK_CNT!=0 
			     OR ADVRTS_AMT!=0
			     OR MEDIA_PYMNT_AMT!=0			     
			     OR TRGT_EPRS_CNT!=0
			     OR PAR_EPRS_CNT!=0			     
			     OR TRGT_PAR_EPRS_CNT!=0 
			     OR TRGT_CLICK_CNT!=0 
			     OR TRGT_ADVRTS_AMT!=0
			     OR RETRN_CNT!=0
			     OR AVAL_CNT !=0
			     
			    )
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_ADVER_MEDIA_HH_STATS.TOT_EPRS_CNT 			= MOB_ADVER_MEDIA_HH_STATS.TOT_EPRS_CNT+S.TOT_EPRS_CNT 
			,MOB_ADVER_MEDIA_HH_STATS.PAR_EPRS_CNT 			= MOB_ADVER_MEDIA_HH_STATS.PAR_EPRS_CNT+S.PAR_EPRS_CNT 			
			,MOB_ADVER_MEDIA_HH_STATS.CLICK_CNT 				= MOB_ADVER_MEDIA_HH_STATS.CLICK_CNT+S.CLICK_CNT
			,MOB_ADVER_MEDIA_HH_STATS.ADVRTS_AMT 			= MOB_ADVER_MEDIA_HH_STATS.ADVRTS_AMT+S.ADVRTS_AMT
			,MOB_ADVER_MEDIA_HH_STATS.MEDIA_PYMNT_AMT 		= MOB_ADVER_MEDIA_HH_STATS.MEDIA_PYMNT_AMT+S.MEDIA_PYMNT_AMT			
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_EPRS_CNT 			= MOB_ADVER_MEDIA_HH_STATS.TRGT_EPRS_CNT+S.TRGT_EPRS_CNT
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_PAR_EPRS_CNT 		= MOB_ADVER_MEDIA_HH_STATS.TRGT_PAR_EPRS_CNT+S.TRGT_PAR_EPRS_CNT
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_CLICK_CNT			= MOB_ADVER_MEDIA_HH_STATS.TRGT_CLICK_CNT+S.TRGT_CLICK_CNT
			,MOB_ADVER_MEDIA_HH_STATS.TRGT_ADVRTS_AMT 		= MOB_ADVER_MEDIA_HH_STATS.TRGT_ADVRTS_AMT+S.TRGT_ADVRTS_AMT
			,MOB_ADVER_MEDIA_HH_STATS.RETRN_CNT 		= MOB_ADVER_MEDIA_HH_STATS.RETRN_CNT+S.RETRN_CNT
			,MOB_ADVER_MEDIA_HH_STATS.AVAL_CNT 		= MOB_ADVER_MEDIA_HH_STATS.AVAL_CNT+S.AVAL_CNT
			,MOB_ADVER_MEDIA_HH_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_ADVER_MEDIA_HH_STATS.ALT_DTTM 				= NOW()
			; 

		]]>
	</update>
	
	
	
	<update id="sql_dropTampTable" parameterType="Map">
			
			DROP TABLE IF EXISTS   BILLING_TEMP.MOB_CAMP_MEDIA_HH_STATS_TEMP;
			
			DROP TABLE IF EXISTS   BILLING_TEMP.MOB_ADVER_MEDIA_HH_STATS_TEMP;
			
			INSERT INTO BILLING.MOB_BATCH_EXE_HIS
			(
				STATS_DTTM
				,TYPE
				,LAST_EXE_TIME
				,STATS_HH
			) 
			VALUES
			(
				DATE_FORMAT( STR_TO_DATE(#{STATS_ALT_DT},'%Y%m%d%H%i'),'%Y%m%d')
				,'H'
			    ,#{STATS_ALT_DT}
			    ,DATE_FORMAT( STR_TO_DATE(#{STATS_ALT_DT},'%Y%m%d%H%i'),'%H') 
			)           
			 ;	
			 
			 
			DELETE FROM BILLING.MOB_BATCH_EXE_HIS
			 WHERE 1=1
                 AND STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -31 DAY),'%Y%m%d')
                 AND STATS_HH = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -31 DAY),'%H')
                 ;

			 
	</update>		
	
	<!-- ////////////////////////// HH => HH 끝 //////////////////////////// -->
	<!-- ///////////////////////  DD 시작 ////////////////////////////// -->
	
		<select id="sql_select_LAST_EXE_TIME"  resultType="Map">	
		
		SELECT	 DISTINCT LAST_EXE_TIME  AS LAST_EXE_TIME
		  	  FROM BILLING.MOB_BATCH_EXE_HIS
		     WHERE 1=1
		         AND STATS_DTTM =  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -10 MINUTE),'%Y%m%d')
		         AND STATS_HH = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -10 MINUTE),'%H')
		         AND TYPE='H'
		         ;
		</select>
		
		<select id="sql_select_mod_date_dd" resultType="Map">
			select distinct STATS_DTTM , ADVRTS_TP_CODE
				/*, CASE WHEN TIMESTAMPDIFF(DAY,DATE_FORMAT(STATS_DTTM, '%Y-%m-%d'), NOW()) between 0 and 15 THEN 'N' ELSE 'Y' END AS CHECK_DATE_YN*/
			from (
				select * from (
					   SELECT distinct STATS_DTTM , ADVRTS_TP_CODE
				         FROM BILLING.MOB_CAMP_MEDIA_HH_STATS A
					  WHERE 1=1
				           AND STATS_ALT_DT BETWEEN CONCAT(DATE_FORMAT(NOW(),'%Y%m%d%H'),'00') AND CONCAT(DATE_FORMAT(NOW(),'%Y%m%d%H'),'59')
				           ORDER BY STATS_DTTM 
				)a
				union ALL 
				select distinct A.STATS_DTTM , A.ADVRTS_TP_CODE
				from (
					select 1 g, STATS_DTTM, ADVRTS_TP_CODE
						, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT , SUM(PAR_EPRS_CNT)PAR_EPRS_CNT , SUM(CLICK_CNT)CLICK_CNT , SUM(ADVRTS_AMT)ADVRTS_AMT
					from BILLING.MOB_COM_HH_STATS_INFO where STATS_DTTM between CAST(DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -15 DAY) ,'%Y%m%d') AS INT) and CAST(DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY) ,'%Y%m%d') AS INT)
					GROUP BY STATS_DTTM, ADVRTS_TP_CODE
				)A join (
					select 2 g, STATS_DTTM, ADVRTS_TP_CODE
						, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT , SUM(PAR_EPRS_CNT)PAR_EPRS_CNT , SUM(CLICK_CNT)CLICK_CNT , SUM(ADVRTS_AMT)ADVRTS_AMT
					from BILLING.MOB_COM_STATS_INFO where STATS_DTTM between CAST(DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -15 DAY) ,'%Y%m%d') AS INT) and CAST(DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY) ,'%Y%m%d') AS INT)
					GROUP BY STATS_DTTM, ADVRTS_TP_CODE
				)B
				on A.STATS_DTTM=B.STATS_DTTM AND A.ADVRTS_TP_CODE=B.ADVRTS_TP_CODE
				where A.TOT_EPRS_CNT!=B.TOT_EPRS_CNT OR A.PAR_EPRS_CNT!=B.PAR_EPRS_CNT OR A.CLICK_CNT!=B.CLICK_CNT OR A.ADVRTS_AMT!=B.ADVRTS_AMT
			)a
			order by STATS_DTTM
		</select> 
		
		
		
		<select id="sql_SELECT_COM_CODE" resultType="Map" parameterType="Map">
		SELECT 
					code_id as ADVRTS_TP_CODE
					, code_val
					, DATE_FORMAT(NOW(),'%Y%m%d') STATS_DTTM
		  FROM dreamsearch.MOBON_COM_CODE
		 WHERE 1=1
		     AND CODE_TP_ID = 'ADVRTS_TP_CODE'
		       ORDER BY code_id	   
		</select>
		
		<select id="sql_SELECTYYYYMMDDADVRTSTPCODE"  resultType="Map" parameterType="Map">
			select A.STATS_DTTM, A.ADVRTS_TP_CODE 
			from (
				select 1, STATS_DTTM, ADVRTS_TP_CODE 
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT , SUM(PAR_EPRS_CNT)PAR_EPRS_CNT , SUM(CLICK_CNT)CLICK_CNT , SUM(ADVRTS_AMT)ADVRTS_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT , SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT , SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT , SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				from BILLING.MOB_COM_HH_STATS_INFO where STATS_DTTM =${STATS_DTTM}
				GROUP BY STATS_DTTM, ADVRTS_TP_CODE 
			)A join (
				select 2, STATS_DTTM, ADVRTS_TP_CODE 
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT , SUM(PAR_EPRS_CNT)PAR_EPRS_CNT , SUM(CLICK_CNT)CLICK_CNT , SUM(ADVRTS_AMT)ADVRTS_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT , SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT , SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT , SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				from BILLING.MOB_COM_STATS_INFO where STATS_DTTM =${STATS_DTTM}
				GROUP BY STATS_DTTM, ADVRTS_TP_CODE 
			)B
			on A.STATS_DTTM=B.STATS_DTTM AND A.ADVRTS_TP_CODE=B.ADVRTS_TP_CODE
			where A.TOT_EPRS_CNT!=B.TOT_EPRS_CNT OR A.PAR_EPRS_CNT!=B.PAR_EPRS_CNT OR A.CLICK_CNT!=B.CLICK_CNT OR A.ADVRTS_AMT!=B.ADVRTS_AMT
				OR A.TRGT_EPRS_CNT!=B.TRGT_EPRS_CNT OR A.TRGT_PAR_EPRS_CNT!=B.TRGT_PAR_EPRS_CNT OR A.TRGT_CLICK_CNT!=B.TRGT_CLICK_CNT OR A.TRGT_ADVRTS_AMT!=B.TRGT_ADVRTS_AMT
;
		</select>
		
		<select id="sql_dd_select_tp_code_count" resultType="Map">			 
			 SELECT  A.STATS_DTTM 		    
		    			,A.ADVRTS_TP_CODE
		    			,COUNT(*) AS TP_CODE_COUNT
		       FROM BILLING.MOB_CAMP_MEDIA_STATS A
		     WHERE 1=1 
		        AND A.STATS_DTTM = ${STATS_DTTM}
		        AND A.ADVRTS_TP_CODE =#{ADVRTS_TP_CODE}		    
	        GROUP BY A.STATS_DTTM,A.ADVRTS_TP_CODE	 
		</select> 
		
		
		<insert id="sql_CREATE_TABLE_CAMP_MEDIA_TEMP" parameterType="Map">	
			
			DROP TABLE IF EXISTS  BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP
			SELECT 
					*  
				FROM BILLING.MOB_CAMP_MEDIA_STATS A
			  WHERE 1=1
			  LIMIT 0,0
			  ;  
			      					      
		</insert>
		
		<insert id="sql_INSERT_TABLE_CAMP_MEDIA_TEMP" parameterType="Map">
			
			INSERT INTO BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP
			SELECT
			 		 STATS_DTTM
					,PLTFOM_TP_CODE
					,ADVRTS_PRDT_CODE
					,ADVRTS_TP_CODE
					,SITE_CODE
					,MEDIA_SCRIPT_NO
					,ITL_TP_CODE
					,TOT_EPRS_CNT
					,CLICK_CNT
					,ADVRTS_AMT
					,MEDIA_PYMNT_AMT
					,TRGT_EPRS_CNT
					,TRGT_PAR_EPRS_CNT
					,TRGT_CLICK_CNT
					,TRGT_ADVRTS_AMT
					,RETRN_CNT
					,AVAL_CNT
					,REG_USER_ID
					,REG_DTTM
					,ALT_USER_ID
					,ALT_DTTM
					,PAR_EPRS_CNT		
					,ALT_DTHM			
					,IFNULL(ADVER_ID,'-') AS ADVER_ID
					,IFNULL(MEDIA_ID,'-') AS MEDIA_ID
  
				FROM BILLING.MOB_CAMP_MEDIA_STATS A
			  WHERE 1=1  
			      AND STATS_DTTM =${STATS_DTTM}
			      AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			      LIMIT ${START_POINT}, ${END_POINT}
			      ;					      		
		</insert>
		
		
		
		
		 
		
		<insert id="sql_CREATE_DD_TABLE">
		
			DROP TABLE IF EXISTS  BILLING_TEMP.MOB_ADVER_MEDIA_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_ADVER_MEDIA_STATS_TEMP
			SELECT *  
			  FROM BILLING.MOB_ADVER_MEDIA_STATS
			  LIMIT 0,0;
			  
			  
			  
			 DROP TABLE IF EXISTS  BILLING_TEMP.MOB_MEDIA_SCRIPT_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_MEDIA_SCRIPT_STATS_TEMP
			SELECT *  
			  FROM BILLING.MOB_MEDIA_SCRIPT_STATS
			  LIMIT 0,0;
			  
			 DROP TABLE IF EXISTS  BILLING_TEMP.MOB_MEDIA_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_MEDIA_STATS_TEMP
			SELECT *  
			  FROM BILLING.MOB_MEDIA_STATS
			  LIMIT 0,0;			   

			 DROP TABLE IF EXISTS  BILLING_TEMP.MOB_CAMP_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_CAMP_STATS_TEMP
			SELECT *  
			  FROM BILLING.MOB_CAMP_STATS
			  LIMIT 0,0;			   


			 DROP TABLE IF EXISTS  BILLING_TEMP.MOB_KPI_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_KPI_STATS_TEMP
			SELECT *  
			  FROM BILLING.MOB_KPI_STATS
			  LIMIT 0,0;			   

			 DROP TABLE IF EXISTS  BILLING_TEMP.MOB_KPI_MEDIA_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_KPI_MEDIA_STATS_TEMP
			SELECT *  
			  FROM BILLING.MOB_KPI_MEDIA_STATS
			  LIMIT 0,0;


			 DROP TABLE IF EXISTS  BILLING_TEMP.MOB_ADVER_STATS_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_ADVER_STATS_TEMP
			SELECT *  
			  FROM BILLING.MOB_ADVER_STATS
			  LIMIT 0,0;
			  
			 DROP TABLE IF EXISTS  BILLING_TEMP.MOB_COM_STATS_INFO_TEMP;
			
			CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.MOB_COM_STATS_INFO_TEMP
			SELECT *  
			  FROM BILLING.MOB_COM_STATS_INFO
			  LIMIT 0,0; 		
		
		
		</insert>
		
		<update id ="sql_INSERT_MOB_ADVER_MEDIA_STATS_TEMP" parameterType="Map">		
			INSERT INTO BILLING_TEMP.MOB_ADVER_MEDIA_STATS_TEMP
			(
			
				STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,ADVER_ID
				,MEDIA_SCRIPT_NO
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
			)
			SELECT
			*
			FROM
			(
			SELECT			
				*
			 FROM
			 (
			 SELECT 
					 STATS_DTTM
					,PLTFOM_TP_CODE 
					,ADVRTS_PRDT_CODE 
					,ADVRTS_TP_CODE 
					,ADVER_ID
					,MEDIA_SCRIPT_NO
					,ITL_TP_CODE					
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
					,SUM(CLICK_CNT) AS CLICK_CNT				
					,SUM(ADVRTS_AMT) AS ADVRTS_AMT
					,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
					,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
					,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
					,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)AS RETRN_CNT
					,SUM(AVAL_CNT)AS AVAL_CNT					
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM
		   	FROM  BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP  A 
		   WHERE 1=1				
			  AND STATS_DTTM = ${STATS_DTTM}			
			  AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		GROUP BY STATS_DTTM,   PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE,ADVER_ID, MEDIA_SCRIPT_NO, ITL_TP_CODE
		LIMIT ${START_POINT}, ${END_POINT}
			 ) A
			
			) B
			ON DUPLICATE KEY UPDATE
			 	 MOB_ADVER_MEDIA_STATS_TEMP.TOT_EPRS_CNT         =   MOB_ADVER_MEDIA_STATS_TEMP.TOT_EPRS_CNT         + B.TOT_EPRS_CNT         
				,MOB_ADVER_MEDIA_STATS_TEMP.PAR_EPRS_CNT         =   MOB_ADVER_MEDIA_STATS_TEMP.PAR_EPRS_CNT         + B.PAR_EPRS_CNT         
				,MOB_ADVER_MEDIA_STATS_TEMP.CLICK_CNT            =   MOB_ADVER_MEDIA_STATS_TEMP.CLICK_CNT            + B.CLICK_CNT            
				,MOB_ADVER_MEDIA_STATS_TEMP.ADVRTS_AMT           =   MOB_ADVER_MEDIA_STATS_TEMP.ADVRTS_AMT           + B.ADVRTS_AMT           
				,MOB_ADVER_MEDIA_STATS_TEMP.MEDIA_PYMNT_AMT      =   MOB_ADVER_MEDIA_STATS_TEMP.MEDIA_PYMNT_AMT      + B.MEDIA_PYMNT_AMT      
				,MOB_ADVER_MEDIA_STATS_TEMP.TRGT_EPRS_CNT        =   MOB_ADVER_MEDIA_STATS_TEMP.TRGT_EPRS_CNT        + B.TRGT_EPRS_CNT        
				,MOB_ADVER_MEDIA_STATS_TEMP.TRGT_PAR_EPRS_CNT    =   MOB_ADVER_MEDIA_STATS_TEMP.TRGT_PAR_EPRS_CNT    + B.TRGT_PAR_EPRS_CNT    
				,MOB_ADVER_MEDIA_STATS_TEMP.TRGT_CLICK_CNT       =   MOB_ADVER_MEDIA_STATS_TEMP.TRGT_CLICK_CNT       + B.TRGT_CLICK_CNT       
				,MOB_ADVER_MEDIA_STATS_TEMP.TRGT_ADVRTS_AMT      =   MOB_ADVER_MEDIA_STATS_TEMP.TRGT_ADVRTS_AMT      + B.TRGT_ADVRTS_AMT      
				,MOB_ADVER_MEDIA_STATS_TEMP.RETRN_CNT            =   MOB_ADVER_MEDIA_STATS_TEMP.RETRN_CNT            + B.RETRN_CNT            
				,MOB_ADVER_MEDIA_STATS_TEMP.AVAL_CNT             =   MOB_ADVER_MEDIA_STATS_TEMP.AVAL_CNT             + B.AVAL_CNT             
			
		</update>
		
		
		
		<update id ="sql_MOB_MEDIA_SCRIPT_STATS_TEMP" parameterType="Map">
				
			INSERT INTO BILLING_TEMP.MOB_MEDIA_SCRIPT_STATS_TEMP
			(
				STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE				
				,MEDIA_SCRIPT_NO
				,ITL_TP_CODE
				,MEDIA_ID				
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
				,MEDIA_TP_CODE
			)
			SELECT 
			*
			FROM
			(			
			SELECT			
				*
			 FROM
			 (
			 
			 	SELECT
						STATS_DTTM
						,PLTFOM_TP_CODE 
						,ADVRTS_PRDT_CODE 
						,ADVRTS_TP_CODE 
						,MEDIA_SCRIPT_NO
						,ITL_TP_CODE 
						,MEDIA_ID
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
						,SUM(CLICK_CNT) AS CLICK_CNT				
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
						,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
						,SUM(RETRN_CNT)AS RETRN_CNT
						,SUM(AVAL_CNT)AS AVAL_CNT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() ALT_DTTM
					    , CASE WHEN LENGTH(IFNULL(B.scate,''))=0 THEN ''
					     WHEN LENGTH(IFNULL(B.scate,''))=1 THEN CONCAT('0',B.scate)
					      ELSE B.scate END AS MEDIA_TP_CODE
						FROM BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP   A  LEFT OUTER JOIN (
																															SELECT b.scate,a.no 
																															  FROM dreamsearch.media_script a LEFT JOIN dreamsearch.media_site b 
																															      ON a.mediasite_no=b.no WHERE 1=1
																													 ) B
					ON A.MEDIA_SCRIPT_NO = B.no 
				      WHERE 1=1				
					      AND STATS_DTTM = ${STATS_DTTM}			
						  AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
				       GROUP BY STATS_DTTM,PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
				       LIMIT ${START_POINT}, ${END_POINT}		
			 )		A 
			 
			) B
			ON DUPLICATE KEY UPDATE 
 				 MOB_MEDIA_SCRIPT_STATS_TEMP.TOT_EPRS_CNT          = MOB_MEDIA_SCRIPT_STATS_TEMP.TOT_EPRS_CNT       +  B.TOT_EPRS_CNT     
				,MOB_MEDIA_SCRIPT_STATS_TEMP.PAR_EPRS_CNT          = MOB_MEDIA_SCRIPT_STATS_TEMP.PAR_EPRS_CNT       +  B.PAR_EPRS_CNT     
				,MOB_MEDIA_SCRIPT_STATS_TEMP.CLICK_CNT             = MOB_MEDIA_SCRIPT_STATS_TEMP.CLICK_CNT          +  B.CLICK_CNT        
				,MOB_MEDIA_SCRIPT_STATS_TEMP.ADVRTS_AMT            = MOB_MEDIA_SCRIPT_STATS_TEMP.ADVRTS_AMT         +  B.ADVRTS_AMT       
				,MOB_MEDIA_SCRIPT_STATS_TEMP.MEDIA_PYMNT_AMT       = MOB_MEDIA_SCRIPT_STATS_TEMP.MEDIA_PYMNT_AMT    +  B.MEDIA_PYMNT_AMT  
				,MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_EPRS_CNT         = MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_EPRS_CNT      +  B.TRGT_EPRS_CNT    
				,MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_PAR_EPRS_CNT     = MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_PAR_EPRS_CNT  +  B.TRGT_PAR_EPRS_CNT
				,MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_CLICK_CNT        = MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_CLICK_CNT     +  B.TRGT_CLICK_CNT   
				,MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_ADVRTS_AMT       = MOB_MEDIA_SCRIPT_STATS_TEMP.TRGT_ADVRTS_AMT    +  B.TRGT_ADVRTS_AMT  
				,MOB_MEDIA_SCRIPT_STATS_TEMP.RETRN_CNT             = MOB_MEDIA_SCRIPT_STATS_TEMP.RETRN_CNT          +  B.RETRN_CNT        
				,MOB_MEDIA_SCRIPT_STATS_TEMP.AVAL_CNT              = MOB_MEDIA_SCRIPT_STATS_TEMP.AVAL_CNT           +  B.AVAL_CNT          
		</update>
		
		
				
		<update id ="sql_MOB_MEDIA_STATS_TEMP" parameterType="Map">
				
			INSERT INTO BILLING_TEMP.MOB_MEDIA_STATS_TEMP
			(
				STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,MEDIA_ID
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
			)			
			
			SELECT			
				*
			 FROM
			 (
			 
			SELECT			
				*
			 FROM
			 (
			 
				 SELECT
						STATS_DTTM
						,PLTFOM_TP_CODE 
						,ADVRTS_PRDT_CODE 
						,ADVRTS_TP_CODE 
						,MEDIA_ID
						,ITL_TP_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
						,SUM(CLICK_CNT) AS CLICK_CNT				
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
						,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
						,SUM(RETRN_CNT)AS RETRN_CNT
						,SUM(AVAL_CNT)AS AVAL_CNT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() ALT_DTTM
					FROM BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP  A 
				  WHERE 1=1				
					  AND STATS_DTTM = ${STATS_DTTM}			
					  AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}										  			  
					GROUP BY STATS_DTTM,  PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE
					LIMIT ${START_POINT}, ${END_POINT}
			 )	 A
			 
			 ) B
			 ON DUPLICATE KEY UPDATE 
			 MOB_MEDIA_STATS_TEMP.TOT_EPRS_CNT       = MOB_MEDIA_STATS_TEMP.TOT_EPRS_CNT       + B.TOT_EPRS_CNT      
			,MOB_MEDIA_STATS_TEMP.PAR_EPRS_CNT       = MOB_MEDIA_STATS_TEMP.PAR_EPRS_CNT       + B.PAR_EPRS_CNT      
			,MOB_MEDIA_STATS_TEMP.CLICK_CNT          = MOB_MEDIA_STATS_TEMP.CLICK_CNT          + B.CLICK_CNT         
			,MOB_MEDIA_STATS_TEMP.ADVRTS_AMT         = MOB_MEDIA_STATS_TEMP.ADVRTS_AMT         + B.ADVRTS_AMT        
			,MOB_MEDIA_STATS_TEMP.MEDIA_PYMNT_AMT    = MOB_MEDIA_STATS_TEMP.MEDIA_PYMNT_AMT    + B.MEDIA_PYMNT_AMT   
			,MOB_MEDIA_STATS_TEMP.TRGT_EPRS_CNT      = MOB_MEDIA_STATS_TEMP.TRGT_EPRS_CNT      + B.TRGT_EPRS_CNT     
			,MOB_MEDIA_STATS_TEMP.TRGT_PAR_EPRS_CNT  = MOB_MEDIA_STATS_TEMP.TRGT_PAR_EPRS_CNT  + B.TRGT_PAR_EPRS_CNT 
			,MOB_MEDIA_STATS_TEMP.TRGT_CLICK_CNT     = MOB_MEDIA_STATS_TEMP.TRGT_CLICK_CNT     + B.TRGT_CLICK_CNT    
			,MOB_MEDIA_STATS_TEMP.TRGT_ADVRTS_AMT    = MOB_MEDIA_STATS_TEMP.TRGT_ADVRTS_AMT    + B.TRGT_ADVRTS_AMT   
			,MOB_MEDIA_STATS_TEMP.RETRN_CNT          = MOB_MEDIA_STATS_TEMP.RETRN_CNT          + B.RETRN_CNT         
			,MOB_MEDIA_STATS_TEMP.AVAL_CNT           = MOB_MEDIA_STATS_TEMP.AVAL_CNT           + B.AVAL_CNT          
			 
		</update>
		
		
		
		<update id ="sql_MOB_CAMP_STATS_TEMP" parameterType="Map">
				
			INSERT INTO BILLING_TEMP.MOB_CAMP_STATS_TEMP
			(
			
				 STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,SITE_CODE
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM			
			)
						SELECT
				*
			  FROM
			  (
			SELECT
				*
			  FROM
			  (
			  
			  	SELECT
						STATS_DTTM 
						,PLTFOM_TP_CODE 
						,ADVRTS_PRDT_CODE 
						,ADVRTS_TP_CODE 
						,SITE_CODE
						,ITL_TP_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						,SUM(CLICK_CNT) AS CLICK_CNT
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT
						,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
						,SUM(RETRN_CNT)AS RETRN_CNT
						,SUM(AVAL_CNT)AS AVAL_CNT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() ALT_DTTM 
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP  A 
			  WHERE 1=1				
				  AND STATS_DTTM = ${STATS_DTTM}			
				  AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
				GROUP BY STATS_DTTM,PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ITL_TP_CODE
				LIMIT ${START_POINT}, ${END_POINT}
			  )A
			
			)B
			ON DUPLICATE KEY UPDATE
			 MOB_CAMP_STATS_TEMP.TOT_EPRS_CNT       = MOB_CAMP_STATS_TEMP.TOT_EPRS_CNT      + B.TOT_EPRS_CNT      
			,MOB_CAMP_STATS_TEMP.PAR_EPRS_CNT       = MOB_CAMP_STATS_TEMP.PAR_EPRS_CNT      + B.PAR_EPRS_CNT         
			,MOB_CAMP_STATS_TEMP.CLICK_CNT          = MOB_CAMP_STATS_TEMP.CLICK_CNT         + B.CLICK_CNT         
			,MOB_CAMP_STATS_TEMP.ADVRTS_AMT         = MOB_CAMP_STATS_TEMP.ADVRTS_AMT        + B.ADVRTS_AMT        
			,MOB_CAMP_STATS_TEMP.TRGT_EPRS_CNT      = MOB_CAMP_STATS_TEMP.TRGT_EPRS_CNT     + B.TRGT_EPRS_CNT     
			,MOB_CAMP_STATS_TEMP.TRGT_PAR_EPRS_CNT  = MOB_CAMP_STATS_TEMP.TRGT_PAR_EPRS_CNT + B.TRGT_PAR_EPRS_CNT 
			,MOB_CAMP_STATS_TEMP.TRGT_CLICK_CNT     = MOB_CAMP_STATS_TEMP.TRGT_CLICK_CNT    + B.TRGT_CLICK_CNT    
			,MOB_CAMP_STATS_TEMP.TRGT_ADVRTS_AMT    = MOB_CAMP_STATS_TEMP.TRGT_ADVRTS_AMT   + B.TRGT_ADVRTS_AMT   
			,MOB_CAMP_STATS_TEMP.RETRN_CNT          = MOB_CAMP_STATS_TEMP.RETRN_CNT         + B.RETRN_CNT         
			,MOB_CAMP_STATS_TEMP.AVAL_CNT           = MOB_CAMP_STATS_TEMP.AVAL_CNT          + B.AVAL_CNT          
				          
		</update>
		
		<update id ="sql_MOB_KPI_STATS_TEMP" parameterType="Map">
			/* 안씀 */
			INSERT INTO BILLING_TEMP.MOB_KPI_STATS_TEMP
			(
				STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ITL_TP_CODE
				,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
				,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			)
				SELECT * FROM  (
			SELECT * FROM   (
			  	SELECT
						STATS_DTTM 
						,PLTFOM_TP_CODE 
						,ADVRTS_PRDT_CODE 
						,ADVRTS_TP_CODE 
						,KPI_NO
						,ITL_TP_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						,SUM(CLICK_CNT) AS CLICK_CNT
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT
						,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
						,SUM(RETRN_CNT)AS RETRN_CNT
						,SUM(AVAL_CNT)AS AVAL_CNT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() ALT_DTTM 
				FROM BILLING_TEMP.MOB_CAMP_STATS_TEMP S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A 
				WHERE 1=1				
					AND STATS_DTTM = ${STATS_DTTM}
					AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
					AND CONVERT(S.SITE_CODE USING EUCKR) = A.SITE_CODE
				GROUP BY STATS_DTTM,PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, KPI_NO, ITL_TP_CODE
				LIMIT ${START_POINT}, ${END_POINT}
			  )A
			)B
			ON DUPLICATE KEY UPDATE
			 MOB_KPI_STATS_TEMP.TOT_EPRS_CNT       = MOB_KPI_STATS_TEMP.TOT_EPRS_CNT      + B.TOT_EPRS_CNT      
			,MOB_KPI_STATS_TEMP.PAR_EPRS_CNT       = MOB_KPI_STATS_TEMP.PAR_EPRS_CNT      + B.PAR_EPRS_CNT         
			,MOB_KPI_STATS_TEMP.CLICK_CNT          = MOB_KPI_STATS_TEMP.CLICK_CNT         + B.CLICK_CNT         
			,MOB_KPI_STATS_TEMP.ADVRTS_AMT         = MOB_KPI_STATS_TEMP.ADVRTS_AMT        + B.ADVRTS_AMT        
			,MOB_KPI_STATS_TEMP.TRGT_EPRS_CNT      = MOB_KPI_STATS_TEMP.TRGT_EPRS_CNT     + B.TRGT_EPRS_CNT     
			,MOB_KPI_STATS_TEMP.TRGT_PAR_EPRS_CNT  = MOB_KPI_STATS_TEMP.TRGT_PAR_EPRS_CNT + B.TRGT_PAR_EPRS_CNT 
			,MOB_KPI_STATS_TEMP.TRGT_CLICK_CNT     = MOB_KPI_STATS_TEMP.TRGT_CLICK_CNT    + B.TRGT_CLICK_CNT    
			,MOB_KPI_STATS_TEMP.TRGT_ADVRTS_AMT    = MOB_KPI_STATS_TEMP.TRGT_ADVRTS_AMT   + B.TRGT_ADVRTS_AMT   
			,MOB_KPI_STATS_TEMP.RETRN_CNT          = MOB_KPI_STATS_TEMP.RETRN_CNT         + B.RETRN_CNT         
			,MOB_KPI_STATS_TEMP.AVAL_CNT           = MOB_KPI_STATS_TEMP.AVAL_CNT          + B.AVAL_CNT          
				          
		</update>
		
		<update id ="sql_MOB_KPI_MEDIA_STATS_TEMP" parameterType="Map">
			INSERT INTO BILLING_TEMP.MOB_KPI_MEDIA_STATS_TEMP
			(
				STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_ID,ITL_TP_CODE
				,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
				,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			)
				SELECT * FROM  (
			SELECT * FROM   (
			  	SELECT
						STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_ID,ITL_TP_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						,SUM(CLICK_CNT) AS CLICK_CNT
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT
						,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
						,SUM(RETRN_CNT)AS RETRN_CNT
						,SUM(AVAL_CNT)AS AVAL_CNT
						,'BATCH' AS REG_USER_ID,NOW() AS REG_DTTM,'BATCH' AS ALT_USER_ID,NOW() ALT_DTTM 
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A 
				WHERE 1=1				
					AND STATS_DTTM = ${STATS_DTTM}
					AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
					AND CONVERT(S.SITE_CODE USING EUCKR) = A.SITE_CODE
				GROUP BY STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_ID,ITL_TP_CODE
				LIMIT ${START_POINT}, ${END_POINT}
			  )A
			)B
			ON DUPLICATE KEY UPDATE
			 MOB_KPI_MEDIA_STATS_TEMP.TOT_EPRS_CNT       = MOB_KPI_MEDIA_STATS_TEMP.TOT_EPRS_CNT      + B.TOT_EPRS_CNT      
			,MOB_KPI_MEDIA_STATS_TEMP.PAR_EPRS_CNT       = MOB_KPI_MEDIA_STATS_TEMP.PAR_EPRS_CNT      + B.PAR_EPRS_CNT         
			,MOB_KPI_MEDIA_STATS_TEMP.CLICK_CNT          = MOB_KPI_MEDIA_STATS_TEMP.CLICK_CNT         + B.CLICK_CNT         
			,MOB_KPI_MEDIA_STATS_TEMP.ADVRTS_AMT         = MOB_KPI_MEDIA_STATS_TEMP.ADVRTS_AMT        + B.ADVRTS_AMT        
			,MOB_KPI_MEDIA_STATS_TEMP.TRGT_EPRS_CNT      = MOB_KPI_MEDIA_STATS_TEMP.TRGT_EPRS_CNT     + B.TRGT_EPRS_CNT     
			,MOB_KPI_MEDIA_STATS_TEMP.TRGT_PAR_EPRS_CNT  = MOB_KPI_MEDIA_STATS_TEMP.TRGT_PAR_EPRS_CNT + B.TRGT_PAR_EPRS_CNT 
			,MOB_KPI_MEDIA_STATS_TEMP.TRGT_CLICK_CNT     = MOB_KPI_MEDIA_STATS_TEMP.TRGT_CLICK_CNT    + B.TRGT_CLICK_CNT    
			,MOB_KPI_MEDIA_STATS_TEMP.TRGT_ADVRTS_AMT    = MOB_KPI_MEDIA_STATS_TEMP.TRGT_ADVRTS_AMT   + B.TRGT_ADVRTS_AMT   
			,MOB_KPI_MEDIA_STATS_TEMP.RETRN_CNT          = MOB_KPI_MEDIA_STATS_TEMP.RETRN_CNT         + B.RETRN_CNT         
			,MOB_KPI_MEDIA_STATS_TEMP.AVAL_CNT           = MOB_KPI_MEDIA_STATS_TEMP.AVAL_CNT          + B.AVAL_CNT
			;
		</update>
		
				
		
		<update id ="sql_MOB_ADVER_STATS_TEMP" parameterType="Map">
				
			INSERT INTO BILLING_TEMP.MOB_ADVER_STATS_TEMP
			(
			
				STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,ADVER_ID
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
						
			)
			
			
						
			SELECT
				*
			  FROM
			  (
			  
			
			SELECT
				*
			  FROM
			  (
			  
				SELECT
						STATS_DTTM
						,PLTFOM_TP_CODE 
						,ADVRTS_PRDT_CODE 
						,ADVRTS_TP_CODE 
						,ADVER_ID
						,ITL_TP_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT					
						,SUM(CLICK_CNT) AS CLICK_CNT				
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT					
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT		
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT	
						,SUM(TRGT_ADVRTS_AMT)AS TRGT_ADVRTS_AMT
						,SUM(RETRN_CNT)AS RETRN_CNT
						,SUM(AVAL_CNT)AS AVAL_CNT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() ALT_DTTM
				FROM BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP  A 
			   WHERE 1=1				
				   AND STATS_DTTM = ${STATS_DTTM}			
			 	   AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE} 
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, ITL_TP_CODE  
			LIMIT ${START_POINT}, ${END_POINT}  
			  )			A
			
			
			) B			
			ON DUPLICATE KEY UPDATE
			     MOB_ADVER_STATS_TEMP.TOT_EPRS_CNT           =   MOB_ADVER_STATS_TEMP.TOT_EPRS_CNT      + B.TOT_EPRS_CNT      
				,MOB_ADVER_STATS_TEMP.PAR_EPRS_CNT           =   MOB_ADVER_STATS_TEMP.PAR_EPRS_CNT      + B.PAR_EPRS_CNT      
				,MOB_ADVER_STATS_TEMP.CLICK_CNT              =   MOB_ADVER_STATS_TEMP.CLICK_CNT         + B.CLICK_CNT         
				,MOB_ADVER_STATS_TEMP.ADVRTS_AMT             =   MOB_ADVER_STATS_TEMP.ADVRTS_AMT        + B.ADVRTS_AMT        
				,MOB_ADVER_STATS_TEMP.MEDIA_PYMNT_AMT        =   MOB_ADVER_STATS_TEMP.MEDIA_PYMNT_AMT   + B.MEDIA_PYMNT_AMT   
				,MOB_ADVER_STATS_TEMP.TRGT_EPRS_CNT          =   MOB_ADVER_STATS_TEMP.TRGT_EPRS_CNT     + B.TRGT_EPRS_CNT     
				,MOB_ADVER_STATS_TEMP.TRGT_PAR_EPRS_CNT      =   MOB_ADVER_STATS_TEMP.TRGT_PAR_EPRS_CNT + B.TRGT_PAR_EPRS_CNT 
				,MOB_ADVER_STATS_TEMP.TRGT_CLICK_CNT         =   MOB_ADVER_STATS_TEMP.TRGT_CLICK_CNT    + B.TRGT_CLICK_CNT    
				,MOB_ADVER_STATS_TEMP.TRGT_ADVRTS_AMT        =   MOB_ADVER_STATS_TEMP.TRGT_ADVRTS_AMT   + B.TRGT_ADVRTS_AMT   
				,MOB_ADVER_STATS_TEMP.RETRN_CNT              =   MOB_ADVER_STATS_TEMP.RETRN_CNT         + B.RETRN_CNT         
				,MOB_ADVER_STATS_TEMP.AVAL_CNT               =   MOB_ADVER_STATS_TEMP.AVAL_CNT          + B.AVAL_CNT           
		</update>
		
		
		<update id ="sql_MOB_COM_STATS_INFO_TEMP" parameterType="Map">
				
			INSERT INTO BILLING_TEMP.MOB_COM_STATS_INFO_TEMP
			(
				STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
			
			)
			SELECT
			*
			FROM 
			(
			SELECT
			*
			FROM 
			(
			SELECT
					STATS_DTTM        
					,PLTFOM_TP_CODE    
					,ADVRTS_PRDT_CODE  
					,ADVRTS_TP_CODE    		
					,ITL_TP_CODE       
					,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT      
					,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT      
					,SUM(CLICK_CNT   ) AS CLICK_CNT      
					,SUM(ADVRTS_AMT  ) AS ADVRTS_AMT           
					,SUM(MEDIA_PYMNT_AMT    ) AS MEDIA_PYMNT_AMT      
					,SUM(TRGT_EPRS_CNT   ) AS TRGT_EPRS_CNT      
					,SUM(TRGT_PAR_EPRS_CNT   ) AS TRGT_PAR_EPRS_CNT      
					,SUM(TRGT_CLICK_CNT   ) AS TRGT_CLICK_CNT      
					,SUM(TRGT_ADVRTS_AMT   ) AS TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT   ) AS RETRN_CNT
					,SUM(AVAL_CNT   ) AS AVAL_CNT      
					,'BATCH' AS REG_USER_ID
					,NOW() AS REG_DTTM
					,'BATCH' AS ALT_USER_ID
					,NOW() ALT_DTTM
			FROM BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP  A 
		  WHERE 1=1				
			  AND STATS_DTTM = ${STATS_DTTM}			
			  AND ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		  GROUP BY STATS_DTTM        
						,PLTFOM_TP_CODE    
						,ADVRTS_PRDT_CODE  
						,ADVRTS_TP_CODE    		
						,ITL_TP_CODE
			LIMIT ${START_POINT}, ${END_POINT}						
			)			A
			 
			) B
		ON DUPLICATE KEY UPDATE		 
				 MOB_COM_STATS_INFO_TEMP.TOT_EPRS_CNT       = MOB_COM_STATS_INFO_TEMP.TOT_EPRS_CNT       +  B.TOT_EPRS_CNT      
				,MOB_COM_STATS_INFO_TEMP.PAR_EPRS_CNT       = MOB_COM_STATS_INFO_TEMP.PAR_EPRS_CNT       +  B.PAR_EPRS_CNT      
				,MOB_COM_STATS_INFO_TEMP.CLICK_CNT          = MOB_COM_STATS_INFO_TEMP.CLICK_CNT          +  B.CLICK_CNT         
				,MOB_COM_STATS_INFO_TEMP.ADVRTS_AMT         = MOB_COM_STATS_INFO_TEMP.ADVRTS_AMT         +  B.ADVRTS_AMT        
				,MOB_COM_STATS_INFO_TEMP.MEDIA_PYMNT_AMT    = MOB_COM_STATS_INFO_TEMP.MEDIA_PYMNT_AMT    +  B.MEDIA_PYMNT_AMT   
				,MOB_COM_STATS_INFO_TEMP.TRGT_EPRS_CNT      = MOB_COM_STATS_INFO_TEMP.TRGT_EPRS_CNT      +  B.TRGT_EPRS_CNT     
				,MOB_COM_STATS_INFO_TEMP.TRGT_PAR_EPRS_CNT  = MOB_COM_STATS_INFO_TEMP.TRGT_PAR_EPRS_CNT  +  B.TRGT_PAR_EPRS_CNT 
				,MOB_COM_STATS_INFO_TEMP.TRGT_CLICK_CNT     = MOB_COM_STATS_INFO_TEMP.TRGT_CLICK_CNT     +  B.TRGT_CLICK_CNT    
				,MOB_COM_STATS_INFO_TEMP.TRGT_ADVRTS_AMT    = MOB_COM_STATS_INFO_TEMP.TRGT_ADVRTS_AMT    +  B.TRGT_ADVRTS_AMT   
				,MOB_COM_STATS_INFO_TEMP.RETRN_CNT          = MOB_COM_STATS_INFO_TEMP.RETRN_CNT          +  B.RETRN_CNT         
				,MOB_COM_STATS_INFO_TEMP.AVAL_CNT           = MOB_COM_STATS_INFO_TEMP.AVAL_CNT           +  B.AVAL_CNT          
		</update>
		
		  
		
		
		
	<update id="sql_MOB_ADVER_MEDIA_STATS" parameterType="Map">
		<![CDATA[ 
		 
		INSERT INTO BILLING.MOB_ADVER_MEDIA_STATS
			(
				STATS_DTTM 
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,ADVER_ID
				,MEDIA_SCRIPT_NO
				,ITL_TP_CODE				
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT 
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
			) 
			SELECT
			
			*
			FROM 
			(
			 
				/*///////////////////////////////////////////*/
 
				SELECT
					*
				FROM BILLING_TEMP.MOB_ADVER_MEDIA_STATS_TEMP   
				WHERE 1=1
			        AND STATS_DTTM =${STATS_DTTM}
			        AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			        LIMIT ${START_POINT}, ${END_POINT}	 
				/*///////////////////////////////////////////*/
		 
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_ADVER_MEDIA_STATS.TOT_EPRS_CNT 			= S.TOT_EPRS_CNT 
			,MOB_ADVER_MEDIA_STATS.PAR_EPRS_CNT 			= S.PAR_EPRS_CNT 			
			,MOB_ADVER_MEDIA_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_ADVER_MEDIA_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_ADVER_MEDIA_STATS.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT			
			,MOB_ADVER_MEDIA_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_ADVER_MEDIA_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_ADVER_MEDIA_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_ADVER_MEDIA_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_ADVER_MEDIA_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_ADVER_MEDIA_STATS.AVAL_CNT 		= S.AVAL_CNT			
			,MOB_ADVER_MEDIA_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_ADVER_MEDIA_STATS.ALT_DTTM 				= NOW()
			; 

		]]>
	</update>
	
	
	
	<update id="sql_MOB_MEDIA_SCRIPT_STATS" parameterType="Map">
		<![CDATA[ 
		                               
		INSERT INTO BILLING.MOB_MEDIA_SCRIPT_STATS
			(
				 STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,MEDIA_SCRIPT_NO
				,ITL_TP_CODE
				,MEDIA_TP_CODE
				,MEDIA_ID
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
			) 
			SELECT
			
				 STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,MEDIA_SCRIPT_NO
				,ITL_TP_CODE
				,MEDIA_TP_CODE
				,MEDIA_ID
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
				
			FROM 
			(
			 
				/*///////////////////////////////////////////*/
	 
				SELECT
					*             
				FROM BILLING_TEMP.MOB_MEDIA_SCRIPT_STATS_TEMP   
				WHERE 1=1
			        AND STATS_DTTM =${STATS_DTTM}
			        AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}	
	 				LIMIT ${START_POINT}, ${END_POINT}	 
				/*///////////////////////////////////////////*/
			 
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_MEDIA_SCRIPT_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_MEDIA_SCRIPT_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 			
			,MOB_MEDIA_SCRIPT_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_MEDIA_SCRIPT_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_MEDIA_SCRIPT_STATS.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT			
			,MOB_MEDIA_SCRIPT_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_MEDIA_SCRIPT_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_MEDIA_SCRIPT_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_MEDIA_SCRIPT_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_MEDIA_SCRIPT_STATS.RETRN_CNT		= S.RETRN_CNT
			,MOB_MEDIA_SCRIPT_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_MEDIA_SCRIPT_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_MEDIA_SCRIPT_STATS.ALT_DTTM 			= NOW()
			;
		]]>

		INSERT INTO BILLING.MOB_MEDIA_SCRIPT_MTH_STATS(
		STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
		, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, RETRN_CNT, AVAL_CNT
		) SELECT * FROM ( 
		SELECT DATE_FORMAT(STATS_DTTM , '%Y%m') AS STATS_MTH , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID , 
		SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(CLICK_CNT) AS CLICK_CNT, SUM(ADVRTS_AMT) AS ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, 
		SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT , SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT , SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT , SUM(RETRN_CNT) AS RETRN_CNT, SUM(AVAL_CNT) AS AVAL_CNT
		FROM BILLING.MOB_MEDIA_SCRIPT_STATS
		WHERE 1=1
		AND STATS_DTTM BETWEEN ${FIRST_DTTM} AND ${STATS_DTTM} 
		AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		GROUP BY DATE_FORMAT(STATS_DTTM , '%Y%m'),PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID ) S
		ON DUPLICATE KEY UPDATE 
		MOB_MEDIA_SCRIPT_MTH_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
		,MOB_MEDIA_SCRIPT_MTH_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 			
		,MOB_MEDIA_SCRIPT_MTH_STATS.CLICK_CNT 			= S.CLICK_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
		,MOB_MEDIA_SCRIPT_MTH_STATS.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT			
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
		,MOB_MEDIA_SCRIPT_MTH_STATS.RETRN_CNT		= S.RETRN_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.AVAL_CNT 		= S.AVAL_CNT
		,MOB_MEDIA_SCRIPT_MTH_STATS.ALT_USER_ID 			= 'BATCH'
		,MOB_MEDIA_SCRIPT_MTH_STATS.ALT_DTTM 			= NOW()
;
	</update>
	
	
	
	<update id="sql_MOB_MEDIA_STATS" parameterType="Map" >
		<![CDATA[ 
		 
		INSERT INTO BILLING.MOB_MEDIA_STATS
			(
				 STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,MEDIA_ID
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
			) 
			SELECT
			
			*
			FROM 
			(
			 
				/*///////////////////////////////////////////*/
 
					SELECT 
					
					* 
					FROM BILLING_TEMP.MOB_MEDIA_STATS_TEMP
					WHERE 1=1
					    AND STATS_DTTM =${STATS_DTTM}
			            AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			            LIMIT ${START_POINT}, ${END_POINT}	 
				/*///////////////////////////////////////////*/
		 
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_MEDIA_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_MEDIA_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 			
			,MOB_MEDIA_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_MEDIA_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_MEDIA_STATS.MEDIA_PYMNT_AMT 	= S.MEDIA_PYMNT_AMT			
			,MOB_MEDIA_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_MEDIA_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_MEDIA_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_MEDIA_STATS.TRGT_ADVRTS_AMT 	= S.TRGT_ADVRTS_AMT
			,MOB_MEDIA_STATS.RETRN_CNT 	= S.RETRN_CNT
			,MOB_MEDIA_STATS.AVAL_CNT 	= S.AVAL_CNT
			,MOB_MEDIA_STATS.ALT_USER_ID 		= 'BATCH'
			,MOB_MEDIA_STATS.ALT_DTTM 			= NOW()
			;
 
 

		]]>
	</update>
	
	
	<update id="sql_MOB_CAMP_STATS" parameterType="Map" >
 
		INSERT INTO BILLING.MOB_CAMP_STATS
			(
				 STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,SITE_CODE
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM

			) 
			SELECT
			
			*
			FROM 
			(
		 
				/*///////////////////////////////////////////*/

 
 					SELECT
				 STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,SITE_CODE
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM
 					FROM BILLING_TEMP.MOB_CAMP_STATS_TEMP
 					WHERE 1=1
					    AND STATS_DTTM =${STATS_DTTM}
			            AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE} 					
			LIMIT ${START_POINT}, ${END_POINT}	 
				/*///////////////////////////////////////////*/
			 
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_CAMP_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_CAMP_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 
			,MOB_CAMP_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_CAMP_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_CAMP_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_CAMP_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_CAMP_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_CAMP_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_CAMP_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_CAMP_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_CAMP_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_CAMP_STATS.ALT_DTTM 			= NOW()
			;
  
	</update>
	<update id="sql_MOB_KPI_STATS" parameterType="Map" >
 
		INSERT INTO BILLING.MOB_KPI_STATS
			(
				STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ITL_TP_CODE
				,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
				,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM (
 				SELECT * FROM (
 					SELECT
					 STATS_DTTM
					,PLTFOM_TP_CODE
					,ADVRTS_PRDT_CODE
					,ADVRTS_TP_CODE
					,KPI_NO
					,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT)TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT)PAR_EPRS_CNT
					,SUM(CLICK_CNT)CLICK_CNT
					,SUM(ADVRTS_AMT)ADVRTS_AMT
					,SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT
					,SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					,SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)RETRN_CNT
					,SUM(AVAL_CNT)AVAL_CNT
					,REG_USER_ID
					,REG_DTTM
					,ALT_USER_ID
					,ALT_DTTM
 					FROM BILLING.MOB_CAMP_STATS S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A 
 					WHERE 1=1
					    AND STATS_DTTM =${STATS_DTTM}
			            AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			            AND S.SITE_CODE = A.SITE_CODE
					GROUP BY STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ITL_TP_CODE
				) SS
				LIMIT ${START_POINT}, ${END_POINT}	 
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_KPI_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_KPI_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 
			,MOB_KPI_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_KPI_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_KPI_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_KPI_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_KPI_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_KPI_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_KPI_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_KPI_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_KPI_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_KPI_STATS.ALT_DTTM 			= NOW()
			;
  
	</update>
	

	<update id="sql_MOB_KPI_MEDIA_STATS" parameterType="Map" >
 
		INSERT INTO BILLING.MOB_KPI_MEDIA_STATS
			(
				STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_ID,ITL_TP_CODE
				,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT,RETRN_CNT,AVAL_CNT
				,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
			) 
			SELECT * FROM (
 				SELECT * FROM (
 					SELECT
					 STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_ID,ITL_TP_CODE
					,SUM(TOT_EPRS_CNT)TOT_EPRS_CNT
					,SUM(PAR_EPRS_CNT)PAR_EPRS_CNT
					,SUM(CLICK_CNT)CLICK_CNT
					,SUM(ADVRTS_AMT)ADVRTS_AMT
					,SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT
					,SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT
					,SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT
					,SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					,SUM(RETRN_CNT)RETRN_CNT
					,SUM(AVAL_CNT)AVAL_CNT
					,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
 					FROM BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP S, (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A 
 					WHERE 1=1
					    AND STATS_DTTM =${STATS_DTTM}
			            AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
						AND CONVERT(S.SITE_CODE USING EUCKR) = A.SITE_CODE
					GROUP BY STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,KPI_NO,ADVER_ID,MEDIA_ID,ITL_TP_CODE
				) SS
				LIMIT ${START_POINT}, ${END_POINT}	 
			) S 
			ON DUPLICATE KEY UPDATE 
			 MOB_KPI_MEDIA_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_KPI_MEDIA_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 
			,MOB_KPI_MEDIA_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_KPI_MEDIA_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_KPI_MEDIA_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_KPI_MEDIA_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_KPI_MEDIA_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_KPI_MEDIA_STATS.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT
			,MOB_KPI_MEDIA_STATS.RETRN_CNT 		= S.RETRN_CNT
			,MOB_KPI_MEDIA_STATS.AVAL_CNT 		= S.AVAL_CNT
			,MOB_KPI_MEDIA_STATS.ALT_USER_ID 			= 'BATCH'
			,MOB_KPI_MEDIA_STATS.ALT_DTTM 			= NOW()
			;
  
	</update>
	
	<update id="sql_MOB_ADVER_STATS" parameterType="Map">
   
		INSERT INTO BILLING.MOB_ADVER_STATS
			(
				STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,ADVER_ID
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM

			) 
			SELECT
			
			*
			FROM 
			(
			 
				/*///////////////////////////////////////////*/
			 	SELECT			 	
			 	*
			 	FROM BILLING_TEMP.MOB_ADVER_STATS_TEMP
			   WHERE 1=1
				   AND STATS_DTTM =${STATS_DTTM}
			       AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
			LIMIT ${START_POINT}, ${END_POINT}	 
				/*///////////////////////////////////////////*/
			 
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_ADVER_STATS.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_ADVER_STATS.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 			
			,MOB_ADVER_STATS.CLICK_CNT 			= S.CLICK_CNT
			,MOB_ADVER_STATS.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_ADVER_STATS.MEDIA_PYMNT_AMT 	= S.MEDIA_PYMNT_AMT			
			,MOB_ADVER_STATS.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_ADVER_STATS.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_ADVER_STATS.TRGT_CLICK_CNT		= S.TRGT_CLICK_CNT
			,MOB_ADVER_STATS.TRGT_ADVRTS_AMT 	= S.TRGT_ADVRTS_AMT
			,MOB_ADVER_STATS.RETRN_CNT 	= S.RETRN_CNT
			,MOB_ADVER_STATS.AVAL_CNT 	= S.AVAL_CNT	 
			,MOB_ADVER_STATS.ALT_USER_ID 		= 'BATCH'
			,MOB_ADVER_STATS.ALT_DTTM 			= NOW()
			;
 
	</update>
	
	
	<update id="sql_MOB_COM_STATS_INFO" parameterType="Map">
		
			INSERT INTO BILLING.MOB_COM_STATS_INFO
			(
				STATS_DTTM
				,PLTFOM_TP_CODE
				,ADVRTS_PRDT_CODE
				,ADVRTS_TP_CODE
				,ITL_TP_CODE
				,TOT_EPRS_CNT
				,PAR_EPRS_CNT
				,CLICK_CNT
				,ADVRTS_AMT
				,MEDIA_PYMNT_AMT
				,TRGT_EPRS_CNT
				,TRGT_PAR_EPRS_CNT
				,TRGT_CLICK_CNT
				,TRGT_ADVRTS_AMT
				,RETRN_CNT
				,AVAL_CNT
				,REG_USER_ID
				,REG_DTTM
				,ALT_USER_ID
				,ALT_DTTM

			) 
			SELECT
			
			*
			FROM 
			(
			 
				/*///////////////////////////////////////////*/

				SELECT
						*
				  FROM BILLING_TEMP.MOB_COM_STATS_INFO_TEMP
			    WHERE 1=1
				   AND STATS_DTTM =${STATS_DTTM}
			       AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}   
			       LIMIT ${START_POINT}, ${END_POINT}	 
				/*///////////////////////////////////////////*/
			
			 
			) S 
			ON DUPLICATE KEY UPDATE 
			MOB_COM_STATS_INFO.TOT_EPRS_CNT 		= S.TOT_EPRS_CNT 
			,MOB_COM_STATS_INFO.PAR_EPRS_CNT 		= S.PAR_EPRS_CNT 
			,MOB_COM_STATS_INFO.CLICK_CNT 			= S.CLICK_CNT
			,MOB_COM_STATS_INFO.ADVRTS_AMT 			= S.ADVRTS_AMT
			,MOB_COM_STATS_INFO.MEDIA_PYMNT_AMT 		= S.MEDIA_PYMNT_AMT
			,MOB_COM_STATS_INFO.TRGT_EPRS_CNT 		= S.TRGT_EPRS_CNT
			,MOB_COM_STATS_INFO.TRGT_PAR_EPRS_CNT 	= S.TRGT_PAR_EPRS_CNT
			,MOB_COM_STATS_INFO.TRGT_CLICK_CNT 		= S.TRGT_CLICK_CNT
			,MOB_COM_STATS_INFO.TRGT_ADVRTS_AMT 		= S.TRGT_ADVRTS_AMT			
			,MOB_COM_STATS_INFO.RETRN_CNT 		= S.RETRN_CNT
			,MOB_COM_STATS_INFO.AVAL_CNT 		= S.AVAL_CNT
			,MOB_COM_STATS_INFO.ALT_USER_ID 			='BATCH'
			,MOB_COM_STATS_INFO.ALT_DTTM 			= NOW()  
			;
 
	</update>	
	
	<update  id="sql_dropDDTempTable">

		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_CAMP_MEDIA_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_ADVER_MEDIA_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_MEDIA_SCRIPT_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_MEDIA_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_CAMP_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_ADVER_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.MOB_COM_STATS_INFO_TEMP;
		
		
		INSERT INTO BILLING.MOB_BATCH_EXE_HIS
		(
			STATS_DTTM
			,TYPE
			,LAST_EXE_TIME
			,STATS_HH
		) 
		VALUES
		(
			DATE_FORMAT(NOW(),'%Y%m%d')
			,'D'
		    ,DATE_FORMAT(NOW(),'%Y%m%d%H%i')
		    ,DATE_FORMAT(NOW(),'%H') 
		)           
		 ;	
		
	</update>

	
	
		<!-- /////////////////////// DD 끝 ////////////////////////////// -->
	<!--  ////////////////////////////// 추가  끝 /////////////////////////// -->
	<!-- /////////////////////// 지역 시간 테이블 시작 /////////////////////// -->
	<select id="sql_SELECT_NEAR_PRDT_CODE_COUNT" parameterType="Map" resultType="Map">
	
		SELECT
				 ADVRTS_TP_CODE
				 ,COUNT(*) AS ROW_COUNT
				 ,STATS_DTTM
		 FROM BILLING.RGN_TRGT_STATS
	   WHERE 1=1
	       AND STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 MINUTE) ,'%Y%m%d')
	       AND ADVRTS_TP_CODE =${ADVRTS_TP_CODE } 
	       GROUP BY ADVRTS_TP_CODE 
	</select>
 
	
	<insert id="sql_CREATE_TEMP_TABLE_NEAR" parameterType="Map">
	
		DROP TABLE IF EXISTS BILLING_TEMP.RGN_TRGT_STATS_TEMP;		                                          

		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.RGN_TRGT_STATS_TEMP
		SELECT *
		  FROM BILLING.RGN_TRGT_STATS
		WHERE 1=1
		  LIMIT 0,0;
		
		
		DROP TABLE IF EXISTS BILLING_TEMP.RGN_ADSTRD_ADVER_STATS_TEMP;
	
		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.RGN_ADSTRD_ADVER_STATS_TEMP
		SELECT *
		FROM BILLING.RGN_ADSTRD_ADVER_STATS
		LIMIT 0,0;
	
	
		DROP TABLE IF EXISTS BILLING_TEMP.RGN_ADSTRD_CAMP_STATS_TEMP;
	
		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.RGN_ADSTRD_CAMP_STATS_TEMP
		SELECT *
		FROM BILLING.RGN_ADSTRD_CAMP_STATS
		LIMIT 0,0;
	
	
		DROP TABLE IF EXISTS BILLING_TEMP.RGN_ADSTRD_MEDIA_STATS_TEMP;
	
		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.RGN_ADSTRD_MEDIA_STATS_TEMP
		SELECT *
		FROM BILLING.RGN_ADSTRD_MEDIA_STATS
		LIMIT 0,0;
	
	
		DROP TABLE IF EXISTS BILLING_TEMP.RGN_ADSTRD_STATS_TEMP;
	
		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.RGN_ADSTRD_STATS_TEMP
		SELECT *
		FROM BILLING.RGN_ADSTRD_STATS
		LIMIT 0,0;
	
	
		DROP TABLE IF EXISTS BILLING_TEMP.RGN_TRGT_STATS_TEMP;
	
		CREATE TEMPORARY TABLE IF NOT EXISTS BILLING_TEMP.RGN_TRGT_STATS_TEMP
		SELECT *
		FROM BILLING.RGN_TRGT_STATS
		LIMIT 0,0;
		
	</insert>
	
	<insert id="sql_INSERT_TABLE_RGN_TRGT_STATS_TEMP" parameterType="Map" >
		INSERT INTO BILLING_TEMP.RGN_TRGT_STATS_TEMP
		SELECT *
		   FROM BILLING.RGN_TRGT_STATS
		 WHERE 1=1
		     AND STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -30 MINUTE) ,'%Y%m%d')
	 	     AND ADVRTS_TP_CODE = ${ADVRTS_TP_CODE}
		   LIMIT ${START_POINT},${END_POINT}
		   ;
	</insert>
	
	
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_ADVER_STATS_TEMP" parameterType="Map" >
		
		INSERT INTO BILLING_TEMP.RGN_ADSTRD_ADVER_STATS_TEMP
		SELECT 
		*
		  FROM
		  (

				SELECT 
						 STATS_DTTM
						,PLTFOM_TP_CODE
						,ADVRTS_PRDT_CODE
						,ADVRTS_TP_CODE
						,ADVER_ID
						,ADSTRD_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						,SUM(CLICK_CNT) AS CLICK_CNT
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT
						,SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() AS ALT_DTTM
				FROM BILLING_TEMP. RGN_TRGT_STATS_TEMP
		   	   WHERE 1=1
				   AND STATS_DTTM = #{STATS_DTTM}
			       AND ADVRTS_TP_CODE =${ADVRTS_TP_CODE}
			       GROUP BY STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,ADVER_ID,ADSTRD_CODE		  
		  ) A
		  WHERE 1=1
		  LIMIT ${START_POINT},${END_POINT}  
;
	</insert>
	
	
	
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_CAMP_STATS_TEMP" parameterType="Map" >
		
		INSERT INTO BILLING_TEMP.RGN_ADSTRD_CAMP_STATS_TEMP
		SELECT 
		*
		  FROM
		  (

				SELECT 
 						 STATS_DTTM
	                    ,PLTFOM_TP_CODE
	                    ,ADVRTS_PRDT_CODE
	                    ,ADVRTS_TP_CODE
	                    ,SITE_CODE 
	                    ,ADSTRD_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						,SUM(CLICK_CNT) AS CLICK_CNT
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT
						,SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() AS ALT_DTTM
				FROM BILLING_TEMP. RGN_TRGT_STATS_TEMP
		   	   WHERE 1=1
				   AND STATS_DTTM =#{STATS_DTTM}
			       AND ADVRTS_TP_CODE =${ADVRTS_TP_CODE}
			       GROUP BY STATS_DTTM
			                    ,PLTFOM_TP_CODE
			                    ,ADVRTS_PRDT_CODE
			                    ,ADVRTS_TP_CODE
			                    ,SITE_CODE 
			                    ,ADSTRD_CODE
		  ) A
		  WHERE 1=1
		  LIMIT ${START_POINT},${END_POINT}  
;
	</insert>
	
	
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_MEDIA_STATS_TEMP" parameterType="Map" >
		
		INSERT INTO BILLING_TEMP.RGN_ADSTRD_MEDIA_STATS_TEMP
		SELECT 
		*
		  FROM
		  (

				SELECT 
 						 STATS_DTTM
	                    ,PLTFOM_TP_CODE
	                    ,ADVRTS_PRDT_CODE
	                    ,ADVRTS_TP_CODE
	                    ,IFNULL(B.USERID,'-')  AS MEDIA_ID
	                    ,ADSTRD_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						,SUM(CLICK_CNT) AS CLICK_CNT
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT
						,SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() AS ALT_DTTM
				FROM BILLING_TEMP.RGN_TRGT_STATS_TEMP A  LEFT OUTER JOIN dreamsearch.media_script B
				    ON A.MEDIA_SCRIPT_NO = B.NO
		   	   WHERE 1=1
				   AND STATS_DTTM = #{STATS_DTTM}
			       AND ADVRTS_TP_CODE =${ADVRTS_TP_CODE}
			       GROUP BY STATS_DTTM
			                    ,PLTFOM_TP_CODE
			                    ,ADVRTS_PRDT_CODE
			                    ,ADVRTS_TP_CODE
			                    ,MEDIA_ID
			                    ,ADSTRD_CODE
		  ) A
		  WHERE 1=1
		  LIMIT ${START_POINT},${END_POINT}  
;
	</insert>
	 
	
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_STATS_TEMP" parameterType="Map" >
		
		INSERT INTO BILLING_TEMP.RGN_ADSTRD_STATS_TEMP
		SELECT 
		*
		  FROM
		  (

				SELECT 
 						 STATS_DTTM
	                    ,PLTFOM_TP_CODE
	                    ,ADVRTS_PRDT_CODE
	                    ,ADVRTS_TP_CODE	                    
	                    ,ADSTRD_CODE
						,SUM(TOT_EPRS_CNT) AS TOT_EPRS_CNT
						,SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT
						,SUM(CLICK_CNT) AS CLICK_CNT
						,SUM(ADVRTS_AMT) AS ADVRTS_AMT
						,SUM(MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT
						,SUM(TRGT_EPRS_CNT) AS TRGT_EPRS_CNT
						,SUM(TRGT_PAR_EPRS_CNT) AS TRGT_PAR_EPRS_CNT
						,SUM(TRGT_CLICK_CNT) AS TRGT_CLICK_CNT
						,SUM(TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT
						,SUM(NEW_IP_CNT) AS NEW_IP_CNT
						,SUM(RGN_IP_CNT) AS RGN_IP_CNT
						,'BATCH' AS REG_USER_ID
						,NOW() AS REG_DTTM
						,'BATCH' AS ALT_USER_ID
						,NOW() AS ALT_DTTM
				FROM BILLING_TEMP.RGN_TRGT_STATS_TEMP
		   	   WHERE 1=1
				   AND STATS_DTTM = #{STATS_DTTM}
			       AND ADVRTS_TP_CODE =${ADVRTS_TP_CODE}
			       GROUP BY STATS_DTTM
			                    ,PLTFOM_TP_CODE
			                    ,ADVRTS_PRDT_CODE
			                    ,ADVRTS_TP_CODE			                    
			                    ,ADSTRD_CODE
		  ) A
		  WHERE 1=1
		  LIMIT ${START_POINT},${END_POINT}  
;
	</insert>
	
	 
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_ADVER_STATS" parameterType="Map" >
		INSERT INTO BILLING.RGN_ADSTRD_ADVER_STATS
		SELECT
		* 
		FROM 
		(
		SELECT
		* 
		FROM BILLING_TEMP.RGN_ADSTRD_ADVER_STATS_TEMP
		WHERE 1=1
	      AND STATS_DTTM = #{STATS_DTTM}
           AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
         LIMIT ${START_POINT}, ${END_POINT}	 
		) A
		ON DUPLICATE KEY UPDATE
		 RGN_ADSTRD_ADVER_STATS.TOT_EPRS_CNT             = A.TOT_EPRS_CNT
		,RGN_ADSTRD_ADVER_STATS.PAR_EPRS_CNT             = A.PAR_EPRS_CNT
		,RGN_ADSTRD_ADVER_STATS.CLICK_CNT                = A.CLICK_CNT
		,RGN_ADSTRD_ADVER_STATS.ADVRTS_AMT               = A.ADVRTS_AMT
		,RGN_ADSTRD_ADVER_STATS.MEDIA_PYMNT_AMT          = A.MEDIA_PYMNT_AMT
		,RGN_ADSTRD_ADVER_STATS.TRGT_EPRS_CNT            = A.TRGT_EPRS_CNT
		,RGN_ADSTRD_ADVER_STATS.TRGT_PAR_EPRS_CNT        = A.TRGT_PAR_EPRS_CNT
		,RGN_ADSTRD_ADVER_STATS.TRGT_CLICK_CNT           = A.TRGT_CLICK_CNT
		,RGN_ADSTRD_ADVER_STATS.TRGT_ADVRTS_AMT          = A.TRGT_ADVRTS_AMT
		,RGN_ADSTRD_ADVER_STATS.ALT_USER_ID          = 'BATCH'
		,RGN_ADSTRD_ADVER_STATS.ALT_DTTM          = NOW()
		
	;
	</insert>
	
	
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_CAMP_STATS" parameterType="Map">
		INSERT INTO BILLING.RGN_ADSTRD_CAMP_STATS
		SELECT
		* 
		FROM 
		(
		SELECT
		* 
		FROM BILLING_TEMP.RGN_ADSTRD_CAMP_STATS_TEMP
		WHERE 1=1
	      AND STATS_DTTM = #{STATS_DTTM}
           AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
         LIMIT ${START_POINT}, ${END_POINT}	 
		) A
		ON DUPLICATE KEY UPDATE
		 RGN_ADSTRD_CAMP_STATS.TOT_EPRS_CNT        = A.TOT_EPRS_CNT
		,RGN_ADSTRD_CAMP_STATS.PAR_EPRS_CNT        = A.PAR_EPRS_CNT
		,RGN_ADSTRD_CAMP_STATS.CLICK_CNT           = A.CLICK_CNT
		,RGN_ADSTRD_CAMP_STATS.ADVRTS_AMT          = A.ADVRTS_AMT
		,RGN_ADSTRD_CAMP_STATS.MEDIA_PYMNT_AMT     = A.MEDIA_PYMNT_AMT
		,RGN_ADSTRD_CAMP_STATS.TRGT_EPRS_CNT       = A.TRGT_EPRS_CNT
		,RGN_ADSTRD_CAMP_STATS.TRGT_PAR_EPRS_CNT   = A.TRGT_PAR_EPRS_CNT
		,RGN_ADSTRD_CAMP_STATS.TRGT_CLICK_CNT      = A.TRGT_CLICK_CNT
		,RGN_ADSTRD_CAMP_STATS.TRGT_ADVRTS_AMT     = A.TRGT_ADVRTS_AMT
		,RGN_ADSTRD_CAMP_STATS.ALT_USER_ID          = 'BATCH'
		,RGN_ADSTRD_CAMP_STATS.ALT_DTTM          = NOW()
		;	
	</insert>
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_MEDIA_STATS" parameterType="Map">
		INSERT INTO BILLING.RGN_ADSTRD_MEDIA_STATS
		SELECT
		* 
		FROM 
		(
		SELECT
		* 
		FROM BILLING_TEMP.RGN_ADSTRD_MEDIA_STATS_TEMP
		WHERE 1=1
	      AND STATS_DTTM = #{STATS_DTTM}
           AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
         LIMIT ${START_POINT}, ${END_POINT}	 
		) A
		ON DUPLICATE KEY UPDATE
		 RGN_ADSTRD_MEDIA_STATS.TOT_EPRS_CNT          = A.TOT_EPRS_CNT     
		,RGN_ADSTRD_MEDIA_STATS.PAR_EPRS_CNT          = A.PAR_EPRS_CNT     
		,RGN_ADSTRD_MEDIA_STATS.CLICK_CNT             = A.CLICK_CNT        
		,RGN_ADSTRD_MEDIA_STATS.ADVRTS_AMT            = A.ADVRTS_AMT       
		,RGN_ADSTRD_MEDIA_STATS.MEDIA_PYMNT_AMT       = A.MEDIA_PYMNT_AMT  
		,RGN_ADSTRD_MEDIA_STATS.TRGT_EPRS_CNT         = A.TRGT_EPRS_CNT    
		,RGN_ADSTRD_MEDIA_STATS.TRGT_PAR_EPRS_CNT     = A.TRGT_PAR_EPRS_CNT
		,RGN_ADSTRD_MEDIA_STATS.TRGT_CLICK_CNT        = A.TRGT_CLICK_CNT   
		,RGN_ADSTRD_MEDIA_STATS.TRGT_ADVRTS_AMT       = A.TRGT_ADVRTS_AMT  
		,RGN_ADSTRD_MEDIA_STATS.ALT_USER_ID          = 'BATCH'
		,RGN_ADSTRD_MEDIA_STATS.ALT_DTTM          = NOW()

		;	
	</insert>	
	<insert id="sql_INSERT_TABLE_RGN_ADSTRD_STATS"  parameterType="Map">
		INSERT INTO BILLING.RGN_ADSTRD_STATS
		SELECT
		* 
		FROM 
		(
		SELECT
		* 
		FROM BILLING_TEMP.RGN_ADSTRD_STATS_TEMP
		WHERE 1=1
	      AND STATS_DTTM = #{STATS_DTTM}
           AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
         LIMIT ${START_POINT}, ${END_POINT}	 
		) A
		ON DUPLICATE KEY UPDATE
		 RGN_ADSTRD_STATS.TOT_EPRS_CNT        = A.TOT_EPRS_CNT     
		,RGN_ADSTRD_STATS.PAR_EPRS_CNT        = A.PAR_EPRS_CNT     
		,RGN_ADSTRD_STATS.CLICK_CNT           = A.CLICK_CNT        
		,RGN_ADSTRD_STATS.ADVRTS_AMT          = A.ADVRTS_AMT       
		,RGN_ADSTRD_STATS.MEDIA_PYMNT_AMT     = A.MEDIA_PYMNT_AMT  
		,RGN_ADSTRD_STATS.TRGT_EPRS_CNT       = A.TRGT_EPRS_CNT    
		,RGN_ADSTRD_STATS.TRGT_PAR_EPRS_CNT   = A.TRGT_PAR_EPRS_CNT
		,RGN_ADSTRD_STATS.TRGT_CLICK_CNT      = A.TRGT_CLICK_CNT   
		,RGN_ADSTRD_STATS.TRGT_ADVRTS_AMT     = A.TRGT_ADVRTS_AMT  
		,RGN_ADSTRD_STATS.NEW_IP_CNT          = A.NEW_IP_CNT       
		,RGN_ADSTRD_STATS.RGN_IP_CNT          = A.RGN_IP_CNT
		,RGN_ADSTRD_STATS.ALT_USER_ID          = 'BATCH'
		,RGN_ADSTRD_STATS.ALT_DTTM          = NOW()
		
		;	
	</insert>		
	
	
	<insert id="sql_INSERT_TABLE_RGN_TRGT_STATS"  parameterType="Map">
		INSERT INTO BILLING.RGN_TRGT_STATS
		SELECT
		* 
		FROM 
		(
		SELECT
		* 
		FROM BILLING_TEMP.RGN_TRGT_STATS_TEMP
		WHERE 1=1
	      AND STATS_DTTM = #{STATS_DTTM}
           AND  ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
         LIMIT ${START_POINT}, ${END_POINT}	 
		) A
		ON DUPLICATE KEY UPDATE
		 RGN_TRGT_STATS.TOT_EPRS_CNT        = A.TOT_EPRS_CNT      
		,RGN_TRGT_STATS.PAR_EPRS_CNT        = A.PAR_EPRS_CNT      
		,RGN_TRGT_STATS.CLICK_CNT           = A.CLICK_CNT         
		,RGN_TRGT_STATS.ADVRTS_AMT          = A.ADVRTS_AMT        
		,RGN_TRGT_STATS.MEDIA_PYMNT_AMT     = A.MEDIA_PYMNT_AMT   
		,RGN_TRGT_STATS.TRGT_EPRS_CNT       = A.TRGT_EPRS_CNT     
		,RGN_TRGT_STATS.TRGT_PAR_EPRS_CNT   = A.TRGT_PAR_EPRS_CNT 
		,RGN_TRGT_STATS.TRGT_CLICK_CNT      = A.TRGT_CLICK_CNT    
		,RGN_TRGT_STATS.TRGT_ADVRTS_AMT     = A.TRGT_ADVRTS_AMT   
		,RGN_TRGT_STATS.NEW_IP_CNT          = A.NEW_IP_CNT        
		,RGN_TRGT_STATS.RGN_IP_CNT          = A.RGN_IP_CNT      
		,RGN_TRGT_STATS.ALT_USER_ID          = 'BATCH'
		,RGN_TRGT_STATS.ALT_DTTM          = NOW()  
		;	
	</insert>		
	
	<insert id="sql_INSERT_HIS_DORP_TEMP_TABLE_NEAR">
	
	
		DROP TABLE IF EXISTS  BILLING_TEMP.RGN_ADSTRD_ADVER_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.RGN_ADSTRD_CAMP_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.RGN_ADSTRD_MEDIA_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.RGN_ADSTRD_STATS_TEMP;
		DROP TABLE IF EXISTS  BILLING_TEMP.RGN_TRGT_STATS_TEMP;
		
		
		INSERT INTO BILLING.MOB_BATCH_EXE_HIS
		(
			STATS_DTTM
			,TYPE
			,LAST_EXE_TIME
			,STATS_HH
		) 
		VALUES
		(
			DATE_FORMAT(NOW(),'%Y%m%d')
			,'N'
		    ,DATE_FORMAT(NOW(),'%Y%m%d%H%i')
		    ,DATE_FORMAT(NOW(),'%H') 
		)           
		 ;	
		 
	
	
	</insert>
	
	<update id="sql_CREATE_TABLE_RGN_TRGT_STATS_TEMP">
		
		CREATE TABLE IF NOT EXISTS BILLING.RGN_TRGT_STATS_TEMP_REV
		SELECT *
		  FROM BILLING.RGN_TRGT_STATS
		WHERE 1=1
		  LIMIT 0,0;
		  
	</update>
	
	<update id="sql_UPDATE_RGN_TRGT_STATS_REVISION" parameterType="Map">
	<![CDATA[
		DELETE FROM BILLING.RGN_TRGT_STATS_TEMP_REV WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
		;
		
			
		INSERT
		  INTO BILLING.RGN_TRGT_STATS_TEMP_REV
		     ( 
		       STATS_DTTM
	         , PLTFOM_TP_CODE
	         , ADVRTS_PRDT_CODE
	         , ADVRTS_TP_CODE
	         , ADVER_ID
	         , SITE_CODE
	         , MEDIA_SCRIPT_NO
	         , ADSTRD_CODE
	         , TOT_EPRS_CNT
	         , PAR_EPRS_CNT
	         , CLICK_CNT
	         , ADVRTS_AMT
	         , MEDIA_PYMNT_AMT
	         , TRGT_EPRS_CNT
	         , TRGT_PAR_EPRS_CNT
	         , TRGT_CLICK_CNT
	         , TRGT_ADVRTS_AMT
	         , NEW_IP_CNT
	         , RGN_IP_CNT
	         , REG_USER_ID
	         , REG_DTTM
	         , ALT_USER_ID
	         , ALT_DTTM
			 )
		SELECT 
		       STATS_DTTM
	         , PLTFOM_TP_CODE
	         , ADVRTS_PRDT_CODE
	         , ADVRTS_TP_CODE
	         , ADVER_ID
	         , SITE_CODE
	         , MEDIA_SCRIPT_NO
	         , ADSTRD_CODE
	         , TOT_EPRS_CNT
	         , PAR_EPRS_CNT
	         , CLICK_CNT
	         , ADVRTS_AMT
	         , MEDIA_PYMNT_AMT
	         , TRGT_EPRS_CNT
	         , TRGT_PAR_EPRS_CNT
	         , TRGT_CLICK_CNT
	         , TRGT_ADVRTS_AMT
	         , NEW_IP_CNT
	         , RGN_IP_CNT
	         , REG_USER_ID
	         , REG_DTTM
	         , ALT_USER_ID
	         , ALT_DTTM
		  FROM  BILLING.RGN_TRGT_STATS
		 WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
		 ;
		 

	INSERT
	  INTO BILLING.RGN_TRGT_STATS
		 (
			  STATS_DTTM
			 , PLTFOM_TP_CODE
			 , ADVRTS_PRDT_CODE
			 , ADVRTS_TP_CODE
			 , ADVER_ID
			 , SITE_CODE
			 , MEDIA_SCRIPT_NO
			 , ADSTRD_CODE
			 , TOT_EPRS_CNT
			 , CLICK_CNT
			 , ADVRTS_AMT
			 , MEDIA_PYMNT_AMT
			 , TRGT_EPRS_CNT
			 , TRGT_PAR_EPRS_CNT
			 , TRGT_CLICK_CNT
			 , TRGT_ADVRTS_AMT
			 , NEW_IP_CNT
			 , RGN_IP_CNT
			 , ALT_USER_ID
			 , ALT_DTTM
			 )
		WITH
		DIFF_RATE
			   AS (SELECT DIFF.STATS_DTTM
						, DIFF.PLTFOM_TP_CODE
						, DIFF.ADVRTS_PRDT_CODE
						, DIFF.ADVRTS_TP_CODE
						, DIFF.ADVER_ID
						, DIFF.SITE_CODE
						, DIFF.MEDIA_SCRIPT_NO
						, IFNULL(RGN_RATE.ADSTRD_CODE, DIFF.ADSTRD_CODE) ADSTRD_CODE
						, DIFF.TOT_EPRS_CNT
						, DIFF.CLICK_CNT
						, DIFF.ADVRTS_AMT
						, FLOOR(DIFF.TOT_EPRS_CNT * IFNULL(RGN_RATE.VIEW_RATE, 0)) MOD_TOT_EPRS_CNT
						, FLOOR(DIFF.CLICK_CNT * IFNULL(RGN_RATE.CLICK_RATE, 0)) MOD_CLICK_CNT
						, FLOOR(DIFF.CLICK_CNT * IFNULL(RGN_RATE.CLICK_RATE, 0)) * IFNULL(RGN_RATE.ADVRTS_AMT_UNIT, 0) MOD_ADVRTS_AMT
						, IFNULL(RGN_RATE.RNUM, 1) RNUM
					 FROM (
					  SELECT MOB.STATS_DTTM
								, MOB.PLTFOM_TP_CODE
								, MOB.ADVRTS_PRDT_CODE
								, MOB.ADVRTS_TP_CODE
								, MOB.ADVER_ID
								, MOB.SITE_CODE
								, MOB.MEDIA_SCRIPT_NO
								, MOB.ADSTRD_CODE
								, MOB.TOT_EPRS_CNT - IFNULL(RGN.TOT_EPRS_CNT, 0) TOT_EPRS_CNT
								, MOB.CLICK_CNT - IFNULL(RGN.CLICK_CNT, 0) CLICK_CNT
								, MOB.ADVRTS_AMT - IFNULL(RGN.ADVRTS_AMT, 0) ADVRTS_AMT
						   FROM (WITH INF
									   AS (SELECT M.SITE_CODE , MIN(N.ADSTRD_CODE) ADSTRD_CODE
											 FROM dreamsearch.RGN_TRGT_INFO M
												, dreamsearch.RGN_TRGT_ADSTRD_MNG N
												, (SELECT SITE_CODE, COUNT(1) CNT
													 FROM BILLING.RGN_TRGT_STATS
													WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
													GROUP BY SITE_CODE
												   HAVING CNT > 0
												  ) O
											WHERE M.SITE_CODE = N.SITE_CODE
	
											  AND M.SITE_CODE = O.SITE_CODE
											GROUP BY M.SITE_CODE
										  )
								 SELECT X.SITE_CODE, X.MEDIA_SCRIPT_NO, X.ADVER_ID, X.STATS_DTTM, X.PLTFOM_TP_CODE
									  , X.ADVRTS_TP_CODE
	                                  , X.ADVRTS_PRDT_CODE
									  , MIN(X.ADSTRD_CODE) ADSTRD_CODE
									  , SUM(TOT_EPRS_CNT) TOT_EPRS_CNT, SUM(CLICK_CNT) CLICK_CNT, SUM(ADVRTS_AMT) ADVRTS_AMT
								   FROM (SELECT A.SITE_CODE, A.MEDIA_SCRIPT_NO, A.ADVER_ID, A.STATS_DTTM, A.TOT_EPRS_CNT, A.CLICK_CNT, A.ADVRTS_AMT, A.MEDIA_PYMNT_AMT, A.ADVRTS_TP_CODE, A.PLTFOM_TP_CODE, B.ADSTRD_CODE, A.ADVRTS_PRDT_CODE
										   FROM BILLING.MOB_CAMP_MEDIA_STATS A
											  , INF B
										  WHERE A.STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
											AND A.SITE_CODE = B.SITE_CODE
										) X
								  GROUP BY X.STATS_DTTM, X.SITE_CODE, X.MEDIA_SCRIPT_NO, X.ADVER_ID, X.PLTFOM_TP_CODE, X.ADVRTS_TP_CODE, X.ADVRTS_PRDT_CODE
								 ) MOB
								 LEFT JOIN
								 (SELECT A.STATS_DTTM, A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE, A.SITE_CODE, A.MEDIA_SCRIPT_NO, A.ADVER_ID
									   , SUM(A.TOT_EPRS_CNT) TOT_EPRS_CNT
									   , SUM(A.CLICK_CNT) CLICK_CNT
									   , SUM(A.ADVRTS_AMT) ADVRTS_AMT
									   , SUM(A.MEDIA_PYMNT_AMT) MEDIA_PYMNT_AMT
									FROM BILLING.RGN_TRGT_STATS A
								   WHERE A.STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
								   GROUP BY A.STATS_DTTM, A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE, A.SITE_CODE, A.MEDIA_SCRIPT_NO, A.ADVER_ID
								 ) RGN
								  ON MOB.STATS_DTTM = RGN.STATS_DTTM
								 AND MOB.PLTFOM_TP_CODE = RGN.PLTFOM_TP_CODE
								 AND MOB.ADVER_ID = RGN.ADVER_ID
								 AND MOB.MEDIA_SCRIPT_NO = RGN.MEDIA_SCRIPT_NO
								 AND MOB.ADVRTS_TP_CODE = RGN.ADVRTS_TP_CODE
								 AND MOB.SITE_CODE = RGN.SITE_CODE
						  ) DIFF
						  LEFT JOIN
						  (SELECT Y.STATS_DTTM, Y.PLTFOM_TP_CODE, Y.ADVRTS_PRDT_CODE, Y.ADVRTS_TP_CODE, Y.SITE_CODE, Y.MEDIA_SCRIPT_NO, Y.ADVER_ID, Y.ADSTRD_CODE
							   , Y.TOT_EPRS_CNT, Y.CLICK_CNT, Y.ADVRTS_AMT
							   , CASE X.TOT_EPRS_CNT WHEN 0 THEN 0 ELSE (Y.TOT_EPRS_CNT / X.TOT_EPRS_CNT) END VIEW_RATE
							   , CASE X.CLICK_CNT WHEN 0 THEN 0 ELSE (Y.CLICK_CNT / X.CLICK_CNT) END CLICK_RATE
							   , Y.RNUM
							   , X.ADVRTS_AMT_UNIT
							FROM (SELECT A.STATS_DTTM, A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE, A.SITE_CODE, A.MEDIA_SCRIPT_NO, A.ADVER_ID
									   , SUM(A.TOT_EPRS_CNT) TOT_EPRS_CNT
									   , SUM(A.CLICK_CNT) CLICK_CNT
									   , SUM(A.ADVRTS_AMT) ADVRTS_AMT
									   , SUM(A.MEDIA_PYMNT_AMT) MEDIA_PYMNT_AMT
									   , CASE SUM(A.CLICK_CNT) WHEN 0 THEN 0 ELSE (SUM(A.ADVRTS_AMT) / SUM(A.CLICK_CNT)) END ADVRTS_AMT_UNIT
									FROM BILLING.RGN_TRGT_STATS A
								   WHERE A.STATS_DTTM =DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
								   GROUP BY A.STATS_DTTM, A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE, A.SITE_CODE, A.MEDIA_SCRIPT_NO, A.ADVER_ID
								 ) X
							   , (SELECT A.STATS_DTTM, A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE, A.SITE_CODE, A.MEDIA_SCRIPT_NO, A.ADVER_ID, A.ADSTRD_CODE
									   , A.TOT_EPRS_CNT
									   , A.CLICK_CNT
									   , A.ADVRTS_AMT
									   , A.MEDIA_PYMNT_AMT
									   , ROW_NUMBER() OVER (PARTITION BY A.STATS_DTTM, A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE, A.SITE_CODE, A.MEDIA_SCRIPT_NO, A.ADVER_ID ORDER BY A.TOT_EPRS_CNT DESC) RNUM
									FROM BILLING.RGN_TRGT_STATS A
								   WHERE A.STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
								 ) Y
						   WHERE X.STATS_DTTM       = Y.STATS_DTTM
							 AND X.PLTFOM_TP_CODE   = Y.PLTFOM_TP_CODE
							 AND X.ADVRTS_PRDT_CODE = Y.ADVRTS_PRDT_CODE
							 AND X.ADVRTS_TP_CODE   = Y.ADVRTS_TP_CODE
							 AND X.SITE_CODE        = Y.SITE_CODE
							 AND X.MEDIA_SCRIPT_NO  = Y.MEDIA_SCRIPT_NO
							 AND X.ADVER_ID         = Y.ADVER_ID
						  ) RGN_RATE
						   ON DIFF.STATS_DTTM       = RGN_RATE.STATS_DTTM
						  AND DIFF.PLTFOM_TP_CODE   = RGN_RATE.PLTFOM_TP_CODE
						  AND DIFF.ADVRTS_PRDT_CODE = RGN_RATE.ADVRTS_PRDT_CODE
						  AND DIFF.ADVRTS_TP_CODE   = RGN_RATE.ADVRTS_TP_CODE
						  AND DIFF.ADVER_ID         = RGN_RATE.ADVER_ID
						  AND DIFF.SITE_CODE        = RGN_RATE.SITE_CODE
						  AND DIFF.MEDIA_SCRIPT_NO  = RGN_RATE.MEDIA_SCRIPT_NO
				  )
	SELECT * FROM
	(
		SELECT X.STATS_DTTM, X.PLTFOM_TP_CODE, X.ADVRTS_PRDT_CODE, X.ADVRTS_TP_CODE, X.ADVER_ID, X.SITE_CODE, X.MEDIA_SCRIPT_NO, X.ADSTRD_CODE
			 , X.TOT_EPRS_CNT - IFNULL(Y.MOD_TOT_EPRS_CNT, 0) TOT_EPRS_CNT
			 , X.CLICK_CNT - IFNULL(Y.MOD_CLICK_CNT, 0) CLICK_CNT
			 , X.ADVRTS_AMT - IFNULL(Y.MOD_ADVRTS_AMT, 0) ADVRTS_AMT
			 , 0	MEDIA_PYMNT_AMT
			 , 0	TRGT_EPRS_CNT
			 , 0	TRGT_PAR_EPRS_CNT
			 , 0	TRGT_CLICK_CNT
			 , 0	TRGT_ADVRTS_AMT
			 , 0	NEW_IP_CNT
			 , 0	RGN_IP_CNT
			 , 'batch'	ALT_USER_ID
			 , now()	ALT_DTTM
		  FROM (SELECT *
				  FROM DIFF_RATE
				 WHERE RNUM = 1
				   AND (TOT_EPRS_CNT <> 0 OR CLICK_CNT <> 0 OR ADVRTS_AMT <> 0)
			   ) X
			   LEFT JOIN
			   (SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, SITE_CODE, MEDIA_SCRIPT_NO
					 , SUM(MOD_TOT_EPRS_CNT) MOD_TOT_EPRS_CNT
					 , SUM(MOD_CLICK_CNT) MOD_CLICK_CNT
					 , SUM(MOD_ADVRTS_AMT) MOD_ADVRTS_AMT
				  FROM DIFF_RATE
				 WHERE RNUM > 1
				   AND (MOD_TOT_EPRS_CNT <> 0 OR MOD_CLICK_CNT <> 0 OR MOD_ADVRTS_AMT <> 0)
				 GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, SITE_CODE, MEDIA_SCRIPT_NO
			   ) Y
			ON X.STATS_DTTM       = Y.STATS_DTTM
		   AND X.PLTFOM_TP_CODE   = Y.PLTFOM_TP_CODE
		   AND X.ADVRTS_PRDT_CODE = Y.ADVRTS_PRDT_CODE
		   AND X.ADVRTS_TP_CODE   = Y.ADVRTS_TP_CODE
		   AND X.SITE_CODE        = Y.SITE_CODE
		   AND X.MEDIA_SCRIPT_NO  = Y.MEDIA_SCRIPT_NO
		   AND X.ADVER_ID         = Y.ADVER_ID
		 UNION ALL
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, SITE_CODE, MEDIA_SCRIPT_NO, ADSTRD_CODE
			 , MOD_TOT_EPRS_CNT TOT_EPRS_CNT
			 , MOD_CLICK_CNT CLICK_CNT
			 , MOD_ADVRTS_AMT ADVRTS_AMT
			 , 0	MEDIA_PYMNT_AMT
			 , 0	TRGT_EPRS_CNT
			 , 0	TRGT_PAR_EPRS_CNT
			 , 0	TRGT_CLICK_CNT
			 , 0	TRGT_ADVRTS_AMT
			 , 0	NEW_IP_CNT
			 , 0	RGN_IP_CNT
			 , 'batch'	ALT_USER_ID
			 , now()	ALT_DTTM
		  FROM DIFF_RATE
		 WHERE RNUM > 1
		   AND (MOD_TOT_EPRS_CNT <> 0 OR MOD_CLICK_CNT <> 0 OR MOD_ADVRTS_AMT <> 0)
	) S
		ON DUPLICATE KEY UPDATE
		 TOT_EPRS_CNT = RGN_TRGT_STATS.TOT_EPRS_CNT + S.TOT_EPRS_CNT
		,CLICK_CNT = RGN_TRGT_STATS.CLICK_CNT + S.CLICK_CNT
		,ADVRTS_AMT = RGN_TRGT_STATS.ADVRTS_AMT + S.ADVRTS_AMT
		,MEDIA_PYMNT_AMT = RGN_TRGT_STATS.MEDIA_PYMNT_AMT + S.MEDIA_PYMNT_AMT
		,TRGT_EPRS_CNT = RGN_TRGT_STATS.TRGT_EPRS_CNT + S.TRGT_EPRS_CNT
		,TRGT_PAR_EPRS_CNT = RGN_TRGT_STATS.TRGT_PAR_EPRS_CNT + S.TRGT_PAR_EPRS_CNT
		,TRGT_CLICK_CNT = RGN_TRGT_STATS.TRGT_CLICK_CNT + S.TRGT_CLICK_CNT
		,TRGT_ADVRTS_AMT = RGN_TRGT_STATS.TRGT_ADVRTS_AMT + S.TRGT_ADVRTS_AMT
		,NEW_IP_CNT = RGN_TRGT_STATS.NEW_IP_CNT + S.NEW_IP_CNT
		,RGN_IP_CNT = RGN_TRGT_STATS.RGN_IP_CNT + S.RGN_IP_CNT
		, ALT_USER_ID = S.ALT_USER_ID
		, ALT_DTTM = S.ALT_DTTM
		;
		 ]]>
	</update>
	<update id="sql_UPDATE_NEAR_OTHER_REVISION" parameterType="Map">
	
	DELETE FROM BILLING.RGN_ADSTRD_ADVER_STATS WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
		
	;
	
	INSERT
	  INTO BILLING.RGN_ADSTRD_ADVER_STATS
		 ( STATS_DTTM
		 , PLTFOM_TP_CODE
		 , ADVRTS_PRDT_CODE
		 , ADVRTS_TP_CODE
		 , ADVER_ID
		 , ADSTRD_CODE
		 , TOT_EPRS_CNT
		 , PAR_EPRS_CNT
		 , CLICK_CNT
		 , ADVRTS_AMT
		 , MEDIA_PYMNT_AMT
		 , TRGT_EPRS_CNT
		 , TRGT_PAR_EPRS_CNT
		 , TRGT_CLICK_CNT
		 , TRGT_ADVRTS_AMT
		 , REG_USER_ID
		 , REG_DTTM
		 , ALT_USER_ID
		 , ALT_DTTM
		 )
	SELECT STATS_DTTM
		 , PLTFOM_TP_CODE
		 , ADVRTS_PRDT_CODE
		 , ADVRTS_TP_CODE
		 , ADVER_ID 
		 , ADSTRD_CODE
		 , SUM(TOT_EPRS_CNT)	   TOT_EPRS_CNT
		 , SUM(PAR_EPRS_CNT)      PAR_EPRS_CNT
		 , SUM(CLICK_CNT)         CLICK_CNT
		 , SUM(ADVRTS_AMT)        ADVRTS_AMT
		 , SUM(MEDIA_PYMNT_AMT)   MEDIA_PYMNT_AMT
		 , SUM(TRGT_EPRS_CNT)     TRGT_EPRS_CNT
		 , SUM(TRGT_PAR_EPRS_CNT) TRGT_PAR_EPRS_CNT
		 , SUM(TRGT_CLICK_CNT)    TRGT_CLICK_CNT
		 , SUM(TRGT_ADVRTS_AMT)   TRGT_ADVRTS_AMT
		 , MIN(REG_USER_ID)       REG_USER_ID
		 , MIN(REG_DTTM)          REG_DTTM
		 , MIN(ALT_USER_ID)       ALT_USER_ID
		 , MIN(ALT_DTTM)          ALT_DTTM
	  FROM BILLING.RGN_TRGT_STATS
	 WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
	 GROUP BY STATS_DTTM
			, PLTFOM_TP_CODE
			, ADVRTS_PRDT_CODE
			, ADVRTS_TP_CODE
			, ADVER_ID
			, ADSTRD_CODE
			;


	DELETE FROM BILLING.RGN_ADSTRD_CAMP_STATS WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d');

	INSERT
	  INTO BILLING.RGN_ADSTRD_CAMP_STATS
		 ( STATS_DTTM
		 , PLTFOM_TP_CODE
		 , ADVRTS_PRDT_CODE
		 , ADVRTS_TP_CODE
		 , SITE_CODE
		 , ADSTRD_CODE
		 , TOT_EPRS_CNT
		 , PAR_EPRS_CNT
		 , CLICK_CNT
		 , ADVRTS_AMT
		 , MEDIA_PYMNT_AMT
		 , TRGT_EPRS_CNT
		 , TRGT_PAR_EPRS_CNT
		 , TRGT_CLICK_CNT
		 , TRGT_ADVRTS_AMT
		 , REG_USER_ID
		 , REG_DTTM
		 , ALT_USER_ID
		 , ALT_DTTM
		 )
	SELECT STATS_DTTM
		 , PLTFOM_TP_CODE
		 , ADVRTS_PRDT_CODE
		 , ADVRTS_TP_CODE
		 , SITE_CODE
		 , ADSTRD_CODE
		 , SUM(TOT_EPRS_CNT)      TOT_EPRS_CNT
		 , SUM(PAR_EPRS_CNT)      PAR_EPRS_CNT
		 , SUM(CLICK_CNT)         CLICK_CNT
		 , SUM(ADVRTS_AMT)        ADVRTS_AMT
		 , SUM(MEDIA_PYMNT_AMT)   MEDIA_PYMNT_AMT
		 , SUM(TRGT_EPRS_CNT)     TRGT_EPRS_CNT
		 , SUM(TRGT_PAR_EPRS_CNT) TRGT_PAR_EPRS_CNT
		 , SUM(TRGT_CLICK_CNT)    TRGT_CLICK_CNT
		 , SUM(TRGT_ADVRTS_AMT)   TRGT_ADVRTS_AMT
		 , MIN(REG_USER_ID)       REG_USER_ID
		 , MIN(REG_DTTM)          REG_DTTM
		 , MIN(ALT_USER_ID)       ALT_USER_ID
		 , MIN(ALT_DTTM)          ALT_DTTM
	  FROM BILLING.RGN_TRGT_STATS
	 WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
	 GROUP BY STATS_DTTM
			, PLTFOM_TP_CODE
			, ADVRTS_PRDT_CODE
			, ADVRTS_TP_CODE
			, SITE_CODE
			, ADSTRD_CODE
			;

	DELETE FROM BILLING.RGN_ADSTRD_MEDIA_STATS WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d') ;

	INSERT
	  INTO BILLING.RGN_ADSTRD_MEDIA_STATS
		 ( STATS_DTTM
		 , PLTFOM_TP_CODE
		 , ADVRTS_PRDT_CODE
		 , ADVRTS_TP_CODE
		 , MEDIA_ID
		 , ADSTRD_CODE
		 , TOT_EPRS_CNT
		 , PAR_EPRS_CNT
		 , CLICK_CNT
		 , ADVRTS_AMT
		 , MEDIA_PYMNT_AMT
		 , TRGT_EPRS_CNT
		 , TRGT_PAR_EPRS_CNT
		 , TRGT_CLICK_CNT
		 , TRGT_ADVRTS_AMT
		 , REG_USER_ID
		 , REG_DTTM
		 , ALT_USER_ID
		 , ALT_DTTM
		 )
		SELECT S.STATS_DTTM
			 , S.PLTFOM_TP_CODE
			 , S.ADVRTS_PRDT_CODE
			 , S.ADVRTS_TP_CODE
			 , IFNULL(M.userid, '') MEDIA_ID
			 , S.ADSTRD_CODE
			 , SUM(S.TOT_EPRS_CNT)      TOT_EPRS_CNT
			 , SUM(S.PAR_EPRS_CNT)      PAR_EPRS_CNT
			 , SUM(S.CLICK_CNT)         CLICK_CNT
			 , SUM(S.ADVRTS_AMT)        ADVRTS_AMT
			 , SUM(S.MEDIA_PYMNT_AMT)   MEDIA_PYMNT_AMT
			 , SUM(S.TRGT_EPRS_CNT)     TRGT_EPRS_CNT
			 , SUM(S.TRGT_PAR_EPRS_CNT) TRGT_PAR_EPRS_CNT
			 , SUM(S.TRGT_CLICK_CNT)    TRGT_CLICK_CNT
			 , SUM(S.TRGT_ADVRTS_AMT)   TRGT_ADVRTS_AMT
			 , MIN(S.REG_USER_ID)       REG_USER_ID
			 , MIN(S.REG_DTTM)          REG_DTTM
			 , MIN(S.ALT_USER_ID)       ALT_USER_ID
			 , MIN(S.ALT_DTTM)          ALT_DTTM
		FROM BILLING.RGN_TRGT_STATS S
		LEFT OUTER JOIN dreamsearch.media_script M ON S.MEDIA_SCRIPT_NO = M.NO
		WHERE S.STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
		GROUP BY S.STATS_DTTM
				, S.PLTFOM_TP_CODE
				, S.ADVRTS_PRDT_CODE
				, S.ADVRTS_TP_CODE
				, M.userid
				, S.ADSTRD_CODE;


	DELETE FROM BILLING.RGN_ADSTRD_STATS WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
	;

	INSERT
	  INTO BILLING.RGN_ADSTRD_STATS
		 ( STATS_DTTM
		 , PLTFOM_TP_CODE
		 , ADVRTS_PRDT_CODE
		 , ADVRTS_TP_CODE
		 , ADSTRD_CODE
		 , TOT_EPRS_CNT
		 , PAR_EPRS_CNT
		 , CLICK_CNT
		 , ADVRTS_AMT
		 , MEDIA_PYMNT_AMT
		 , TRGT_EPRS_CNT
		 , TRGT_PAR_EPRS_CNT
		 , TRGT_CLICK_CNT
		 , TRGT_ADVRTS_AMT
		 , NEW_IP_CNT
		 , RGN_IP_CNT
		 , REG_USER_ID
		 , REG_DTTM
		 , ALT_USER_ID
		 , ALT_DTTM
		 )
	SELECT STATS_DTTM
		 , PLTFOM_TP_CODE
		 , ADVRTS_PRDT_CODE
		 , ADVRTS_TP_CODE
		 , ADSTRD_CODE
		 , SUM(TOT_EPRS_CNT)      TOT_EPRS_CNT
		 , SUM(PAR_EPRS_CNT)      PAR_EPRS_CNT
		 , SUM(CLICK_CNT)         CLICK_CNT
		 , SUM(ADVRTS_AMT)        ADVRTS_AMT
		 , SUM(MEDIA_PYMNT_AMT)   MEDIA_PYMNT_AMT
		 , SUM(TRGT_EPRS_CNT)     TRGT_EPRS_CNT
		 , SUM(TRGT_PAR_EPRS_CNT) TRGT_PAR_EPRS_CNT
		 , SUM(TRGT_CLICK_CNT)    TRGT_CLICK_CNT
		 , SUM(TRGT_ADVRTS_AMT)   TRGT_ADVRTS_AMT
		 , SUM(NEW_IP_CNT)        NEW_IP_CNT
		 , SUM(RGN_IP_CNT)        NEW_IP_CNT
		 , MIN(REG_USER_ID)       REG_USER_ID
		 , MIN(REG_DTTM)          REG_DTTM
		 , MIN(ALT_USER_ID)       ALT_USER_ID
		 , MIN(ALT_DTTM)          ALT_DTTM
	  FROM BILLING.RGN_TRGT_STATS
	 WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
	 GROUP BY STATS_DTTM
			, PLTFOM_TP_CODE
			, ADVRTS_PRDT_CODE
			, ADVRTS_TP_CODE
			, ADSTRD_CODE
			;


    INSERT
		INTO   BILLING.RGN_ADSTRD_MTH_STATS
		       (
		             STATS_MTH
		            ,PLTFOM_TP_CODE
		            ,ADVRTS_PRDT_CODE
		            ,ADVRTS_TP_CODE
		            ,ADSTRD_CODE
		            ,TOT_EPRS_CNT
		            ,PAR_EPRS_CNT
		            ,CLICK_CNT
		            ,ADVRTS_AMT
		            ,MEDIA_PYMNT_AMT
		            ,TRGT_EPRS_CNT
		            ,TRGT_PAR_EPRS_CNT
		            ,TRGT_CLICK_CNT
		            ,TRGT_ADVRTS_AMT
		       )
		SELECT   DATE_FORMAT(a.STATS_DTTM,'%Y%m') STATS_MTH
		       , a.PLTFOM_TP_CODE PLTFOM_TP_CODE
		       , a.ADVRTS_PRDT_CODE ADVRTS_PRDT_CODE
		       , a.ADVRTS_TP_CODE ADVRTS_TP_CODE
		       , a.ADSTRD_CODE ADSTRD_CODE
		       , SUM(a.TOT_EPRS_CNT) TOT_EPRS_CNT
		       , SUM(a.PAR_EPRS_CNT) PAR_EPRS_CNT
		       , SUM(a.CLICK_CNT) CLICK_CNT
		       , SUM(a.ADVRTS_AMT) ADVRTS_AMT
		       , SUM(a.MEDIA_PYMNT_AMT) MEDIA_PYMNT_AMT
		       , SUM(TRGT_EPRS_CNT )TRGT_EPRS_CNT
		       , SUM(TRGT_PAR_EPRS_CNT) TRGT_PAR_EPRS_CNT
		       , SUM(TRGT_CLICK_CNT) TRGT_CLICK_CNT
		       , SUM(TRGT_ADVRTS_AMT) TRGT_ADVRTS_AMT
		FROM     BILLING.RGN_TRGT_STATS a
		WHERE    a.STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
		GROUP BY STATS_MTH
		       ,a.PLTFOM_TP_CODE
		       ,a.ADVRTS_PRDT_CODE
		       ,a.ADVRTS_TP_CODE
		       ,a.ADSTRD_CODE
		ON DUPLICATE KEY
		UPDATE
		        TOT_EPRS_CNT = TOT_EPRS_CNT + values(TOT_EPRS_CNT)
		       ,PAR_EPRS_CNT = PAR_EPRS_CNT + values(PAR_EPRS_CNT)
		       ,CLICK_CNT = CLICK_CNT + values(CLICK_CNT)
		       ,ADVRTS_AMT = ADVRTS_AMT + values(ADVRTS_AMT)
		       ,MEDIA_PYMNT_AMT = MEDIA_PYMNT_AMT + values(MEDIA_PYMNT_AMT)
		       ,TRGT_EPRS_CNT = TRGT_EPRS_CNT + values(TRGT_EPRS_CNT)
		       ,TRGT_PAR_EPRS_CNT = TRGT_PAR_EPRS_CNT + values(TRGT_PAR_EPRS_CNT)
		       ,TRGT_CLICK_CNT = TRGT_CLICK_CNT + values(TRGT_CLICK_CNT)
		       ,TRGT_ADVRTS_AMT = TRGT_ADVRTS_AMT + values(TRGT_ADVRTS_AMT)
		       ;
	</update>
	
	
	
	
	
	
	
	<!-- /////////////////////// 지역 시간 테이블 끝 /////////////////////// -->
	<!-- //////////////////////플레이링크 테이블 데이타 생성 시작 /////////// -->
	
	<select id="sql_SELECT_PLINK_AVAL_STATS_INS" parameterType="Map" resultType="Map">	
 		SELECT
				  STATS_DTTM
				 ,COUNT(*) AS ROW_COUNT				 
				 ,TO_DAYS(NOW()) - TO_DAYS(CAST(STATS_DTTM AS DATE)) AS DAY_DIFF	  
				 ,MIN(NO) AS MIN_NO
		 		 ,MAX(NO) AS MAX_NO     
		 FROM BILLING.PLINK_AVAL_STATS_INS
	   WHERE 1=1
	   	AND APP_YN ='N'	   	    
	       GROUP BY STATS_DTTM 
	</select>
	
	
	
	<insert id="sql_INSERT_PLINK_AVAL_STATS_2DAY_DIFF" parameterType="Map">

		INSERT INTO BILLING.PLINK_AVAL_STATS
		(
		STATS_DTTM
		,PLTFOM_TP_CODE
		,SITE_CODE
		,MEDIA_SCRIPT_NO
		,ADVER_AVAL_CNT
		,MEDIA_AVAL_CNT
		,ADVER_SALAMT
		,MEDIA_SALAMT
		,REG_USER_ID
		,REG_DTTM
		,ALT_USER_ID
		,ALT_DTTM
		,ADVER_ID
		)
		SELECT
			STATS_DTTM
			,PLTFOM_TP_CODE
			,SITE_CODE
			,MEDIA_SCRIPT_NO
			,ADVER_AVAL_CNT
			,MEDIA_AVAL_CNT
			,ADVER_SALAMT
			,MEDIA_SALAMT
			,REG_USER_ID
			,REG_DTTM
			,ALT_USER_ID
			,ALT_DTTM
			,ADVER_ID
		FROM 
		(
		
			SELECT 		 
				STATS_DTTM
				,PLTFOM_TP_CODE
				,SITE_CODE
				,MEDIA_SCRIPT_NO
				,SUM(ADVER_AVAL_CNT) AS ADVER_AVAL_CNT
				,SUM(MEDIA_AVAL_CNT) AS MEDIA_AVAL_CNT
				,SUM(ADVER_SALAMT) AS ADVER_SALAMT
				,SUM(MEDIA_SALAMT) AS MEDIA_SALAMT
				,'BATCH' AS REG_USER_ID
				,NOW() AS REG_DTTM
				,'BATCH' AS ALT_USER_ID
				,NOW() AS ALT_DTTM
				,ADVER_ID
			FROM BILLING.PLINK_AVAL_STATS_INS
			WHERE 1=1
			     AND STATS_DTTM = ${  STATS_DTTM}
			     AND NO BETWEEN ${MIN_NO} AND ${MAX_NO}
			 GROUP BY STATS_DTTM
							,PLTFOM_TP_CODE
							,SITE_CODE
							,MEDIA_SCRIPT_NO
				LIMIT ${START_POINT},${END_POINT}
			
		) A
		ON DUPLICATE KEY UPDATE
		 PLINK_AVAL_STATS.ADVER_AVAL_CNT = PLINK_AVAL_STATS.ADVER_AVAL_CNT + A.ADVER_AVAL_CNT
		,PLINK_AVAL_STATS.MEDIA_AVAL_CNT = PLINK_AVAL_STATS.MEDIA_AVAL_CNT + A.MEDIA_AVAL_CNT
		,PLINK_AVAL_STATS.ADVER_SALAMT =  PLINK_AVAL_STATS.ADVER_SALAMT + A.ADVER_SALAMT
		,PLINK_AVAL_STATS.MEDIA_SALAMT = PLINK_AVAL_STATS.MEDIA_SALAMT + A.MEDIA_SALAMT
		,PLINK_AVAL_STATS.ALT_DTTM = A.ALT_DTTM
		,PLINK_AVAL_STATS.ALT_USER_ID = A.ALT_USER_ID
		;
		
		UPDATE BILLING.PLINK_AVAL_STATS_INS
		      SET APP_YN = 'Y'
		WHERE 1=1
		     AND STATS_DTTM = ${ STATS_DTTM}  
		     AND NO BETWEEN ${MIN_NO} AND ${MAX_NO}
		     AND APP_YN != 'Y'
		 ;
		 
	
	</insert>
	
	
	
	<insert id="sql_INSERT_PLINK_AVAL_STATS" parameterType="Map">

		INSERT INTO BILLING.PLINK_AVAL_STATS
		(
		STATS_DTTM
		,PLTFOM_TP_CODE
		,SITE_CODE
		,MEDIA_SCRIPT_NO
		,ADVER_AVAL_CNT
		,MEDIA_AVAL_CNT
		,ADVER_SALAMT
		,MEDIA_SALAMT
		,REG_USER_ID
		,REG_DTTM
		,ALT_USER_ID
		,ALT_DTTM
		,ADVER_ID
		)
		SELECT
			STATS_DTTM
			,PLTFOM_TP_CODE
			,SITE_CODE
			,MEDIA_SCRIPT_NO
			,ADVER_AVAL_CNT
			,MEDIA_AVAL_CNT
			,ADVER_SALAMT
			,MEDIA_SALAMT
			,REG_USER_ID
			,REG_DTTM
			,ALT_USER_ID
			,ALT_DTTM
			,ADVER_ID
		FROM 
		(
		
			SELECT 		 
				STATS_DTTM
				,PLTFOM_TP_CODE
				,SITE_CODE
				,MEDIA_SCRIPT_NO
				,SUM(ADVER_AVAL_CNT) AS ADVER_AVAL_CNT
				,SUM(MEDIA_AVAL_CNT) AS MEDIA_AVAL_CNT
				,SUM(ADVER_SALAMT) AS ADVER_SALAMT
				,SUM(MEDIA_SALAMT) AS MEDIA_SALAMT
				,'BATCH' AS REG_USER_ID
				,NOW() AS REG_DTTM
				,'BATCH' AS ALT_USER_ID
				,NOW() AS ALT_DTTM
				,ADVER_ID
			FROM BILLING.PLINK_AVAL_STATS_INS
			WHERE 1=1
			 AND STATS_DTTM = ${ STATS_DTTM}
			 GROUP BY STATS_DTTM
							,PLTFOM_TP_CODE
							,SITE_CODE
							,MEDIA_SCRIPT_NO
				LIMIT ${START_POINT},${END_POINT}
			
		) A
		ON DUPLICATE KEY UPDATE
		 PLINK_AVAL_STATS.ADVER_AVAL_CNT = A.ADVER_AVAL_CNT
		,PLINK_AVAL_STATS.MEDIA_AVAL_CNT = A.MEDIA_AVAL_CNT
		,PLINK_AVAL_STATS.ADVER_SALAMT = A.ADVER_SALAMT
		,PLINK_AVAL_STATS.MEDIA_SALAMT = A.MEDIA_SALAMT
		,PLINK_AVAL_STATS.ALT_DTTM = A.ALT_DTTM
		,PLINK_AVAL_STATS.ALT_USER_ID = A.ALT_USER_ID
		;
		
		UPDATE BILLING.PLINK_AVAL_STATS_INS
		      SET APP_YN = 'Y'
		WHERE 1=1
		     AND STATS_DTTM = ${ STATS_DTTM}  
		     AND NO BETWEEN ${MIN_NO} AND ${MAX_NO}
		     AND APP_YN != 'Y'
		 ;
	
	</insert>
	
	<insert id="sql_INSERT_HIS_DORP_TEMP_TABLE_PLINK">
		
		INSERT INTO BILLING.MOB_BATCH_EXE_HIS
		(
			STATS_DTTM
			,TYPE
			,LAST_EXE_TIME
			,STATS_HH
		) 
		VALUES
		(
			DATE_FORMAT(NOW(),'%Y%m%d')
			,'P'
		    ,DATE_FORMAT(NOW(),'%Y%m%d%H%i')
		    ,DATE_FORMAT(NOW(),'%H') 
		)           
		 ;	
		 
		 
	DELETE 
	   FROM BILLING.PLINK_AVAL_STATS_INS
	WHERE 1=1
	     AND STATS_DTTM <![CDATA[ <	 ]]>DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -2 DAY) ,'%Y%m%d')
	     AND APP_YN = 'Y'
	        ;	      
		 
		  
	
	</insert>
	
	
	
	<!-- //////////////////////플레이링크 테이블 데이타 생성 끝 /////////// -->
	
	
	<!-- //////////////////////////드림디비 status_conversion//////////////////////////////////////// -->
	
	<select id="sql_SELECT_COUNT_DATA" parameterType="Map" resultType="Map">
						
						SELECT
							COUNT(*) AS ROW_COUNT
						FROM BILLING.MOB_CNVRS_NCL
					 WHERE 1=1					    
				  	      AND STATS_DTTM  =  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')  
					      AND ADVRTS_PRDT_CODE IN ('01','03','02','05','06')     
					      AND CLICK_TP='C' 
					      ;
					   
	</select>
	
	<select id="sql_SELECT_DATA" parameterType="Map" resultType="Map">
	
			SELECT 
				  MCS.STATS_DTTM
				, MCS.ORDER_NO
				, MCS.ADVER_ID
				, LOG.ADPRODUCT
				,LOG.ADGUBUN
				,MCS.SITE_CODE
				,'' AS  MEDIA_ID
				,MCS.MEDIA_SCRIPT_NO
				,'C' AS CONVTYPE
				,LOG.IN_HOUR
				,MCS.ORDER_CNT
				,MCS.ORDER_CNT
				,MCS.ORDER_AMT
				,MCS.REG_DTTM
				,LOG.MCGB
				,IF((MCS.DIRECT_YN='Y'),1,0) AS DIRECT
				,'' AS SDATE_TIME
				,LOG.MOBON_YN
		FROM (
						SELECT
							ADVER_ID,
							STATS_DTTM,
							PLTFOM_TP_CODE,
							ADVRTS_PRDT_CODE,
							ADVRTS_TP_CODE,
							SITE_CODE,
							/*ITL_TP_CODE,*/
							MEDIA_SCRIPT_NO,
							ORDER_NO,
							SESION_SELNG_YN,
							ORDER_AMT,
							DIRECT_YN,
							REG_DTTM, 
							ORDER_CNT 
					FROM BILLING.MOB_CNVRS_NCL
					 WHERE 1=1
				  	   AND  STATS_DTTM  = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')  
					   AND ADVRTS_PRDT_CODE IN ('01','03','02','05','06')     
					   AND CLICK_TP='C' 
					   LIMIT ${START_POINT},${END_POINT}
					) AS MCS
					LEFT OUTER JOIN
					(
						SELECT
									MAX(CSL.no) AS NO,
									CSL.USERID,
									CSL.ORDCODE,
									MAX(CSL.IP) AS IP,
									MAX(CSL.PNM) AS PNM,
									MAX(CSL.MOBON_YN) AS MOBON_YN,
									MAX(CSL.LAST_CLICK_TIME) AS LAST_CLICK_TIME,
									MAX(CSL.REGDATE) AS REGDATE,
									INFLOW_ROUTE,
									CVL.ADPRODUCT,
									CVL.MCGB,
									CVL.ADGUBUN,
									CSL.IN_HOUR
						  FROM dreamsearch.CONVERSION_LOG AS CSL
					        LEFT OUTER JOIN dreamsearch.CONVACT_LOG AS CVL 
					           ON (CSL.ACTION_LOG_NO = CVL.ADACTLOG_NO)
					    WHERE 1=1					     
					         AND CVL.ADPRODUCT IN ('nor','ico','sky','video','mbw','mbb','mbe','mbs','nct','mct','pl','mpl')
					         AND CSL.PARTDT   =  DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')  
					         AND CVL.ACTGUBUN='C'
						GROUP BY CSL.USERID, CSL.ORDCODE
					) AS LOG ON MCS.ADVER_ID=LOG.USERID AND LOG.ORDCODE = CONVERT(MCS.ORDER_NO USING EUCKR)
		WHERE 1=1   
		
		
	
	
	</select>
	
	<delete id="sql_DELETE_STATUS_CONVERSION">
	DELETE FROM dreamsearch.status_conversion
	WHERE 1=1
         AND SDATE =DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')  
         ;
	</delete>
	
	
	<insert id="sql_INSERT_STATUS_CONVERSION" parameterType="Map">
			
		INSERT INTO dreamsearch.status_conversion
		(
			sdate
			,ordcode
			,userid
			,product
			,gubun
			,sitecode
			,media_id
			,media_code
			,convtype
			,in_hour
			,ordcnt
			,ordpcnt
			,ordprice
			,REGDATE
			,MCGB
			,direct
			,sdate_time
			,MOBON_YN
		)
		 VALUES
		 (
			 #{STATS_DTTM     }
			,#{ORDER_NO       }
			,#{ADVER_ID       }
			,#{ADPRODUCT      }
			,#{ADGUBUN        }
			,#{SITE_CODE      }
			,#{MEDIA_ID       }
			,${MEDIA_SCRIPT_NO}
			,#{CONVTYPE       }
			,#{IN_HOUR        }
			,${ORDER_CNT      }
			,${ORDER_CNT      }
			,${ORDER_AMT      }
			,#{REG_DTTM       }
			,#{MCGB           }
			,${DIRECT         }
			,#{SDATE_TIME	}
			,#{MOBON_YN	} 
			
		 )
		
	</insert>	
	<!-- //////////////////////////드림디비 status_conversion//////////////////////////////////////// -->
	
	
	
	<insert id="UPDATE_MEDIA_SCRIPT_CHRG_RATE100" parameterType="Map">
	/* MOB_MEDIA_SCRIPT_CHRG_STATS : insert MOB_MEDIA_SCRIPT_CHRG_STATS */
		INSERT INTO BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS(
			STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			)
			SELECT * FROM (
				SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
					FROM BILLING.MOB_MEDIA_SCRIPT_STATS a JOIN dreamsearch.media_script b ON a.MEDIA_SCRIPT_NO = b.NO
					WHERE (b.EPRS_REST_RATE=100 OR a.ITL_TP_CODE = '99') 
					  AND CHRG_FOM_TP_CODE='01'
					  AND STATS_DTTM = ${STATS_DTTM}
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
					) a
			ON DUPLICATE KEY UPDATE 
					TOT_EPRS_CNT	= a.TOT_EPRS_CNT, PAR_EPRS_CNT		= a.PAR_EPRS_CNT
				, TRGT_EPRS_CNT	= a.TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT	= a.TRGT_PAR_EPRS_CNT
				, CLICK_CNT = a.CLICK_CNT, ADVRTS_AMT = a.ADVRTS_AMT
				, MEDIA_PYMNT_AMT = a.MEDIA_PYMNT_AMT , TRGT_CLICK_CNT = a.TRGT_CLICK_CNT
				, TRGT_ADVRTS_AMT = a.TRGT_ADVRTS_AMT 
				, ALT_USER_ID	='BATCH'
				, ALT_DTTM	= NOW();
	</insert>
	<update id="UPDATE_MEDIA_SCRIPT_CHRG_NONECLICK" parameterType="Map">
		INSERT INTO BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS(
			STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
			)
			SELECT * FROM (
				SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
					, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
					, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
				FROM BILLING.MOB_MEDIA_SCRIPT_STATS S
				WHERE NOT EXISTS(SELECT 1 FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS T
					WHERE S.STATS_DTTM=T.STATS_DTTM AND S.PLTFOM_TP_CODE=T.PLTFOM_TP_CODE AND S.ADVRTS_PRDT_CODE=T.ADVRTS_PRDT_CODE AND S.ADVRTS_TP_CODE=T.ADVRTS_TP_CODE 
						AND S.MEDIA_SCRIPT_NO=T.MEDIA_SCRIPT_NO AND S.ITL_TP_CODE=T.ITL_TP_CODE AND S.MEDIA_ID=T.MEDIA_ID
					)
					AND S.STATS_DTTM = ${STATS_DTTM} AND CLICK_CNT>0
				GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID
			)a
			ON DUPLICATE KEY UPDATE 
				MOB_MEDIA_SCRIPT_CHRG_STATS.CLICK_CNT = a.CLICK_CNT
				, MOB_MEDIA_SCRIPT_CHRG_STATS.ADVRTS_AMT = a.ADVRTS_AMT
				, MOB_MEDIA_SCRIPT_CHRG_STATS.MEDIA_PYMNT_AMT = a.MEDIA_PYMNT_AMT
				, MOB_MEDIA_SCRIPT_CHRG_STATS.TRGT_CLICK_CNT = a.TRGT_CLICK_CNT
				, MOB_MEDIA_SCRIPT_CHRG_STATS.TRGT_ADVRTS_AMT = a.TRGT_ADVRTS_AMT 
				, MOB_MEDIA_SCRIPT_CHRG_STATS.ALT_USER_ID	='BATCH'
				, MOB_MEDIA_SCRIPT_CHRG_STATS.ALT_DTTM	= NOW()
		;
	</update>
	<update id="UPDATE_MEDIA_SCRIPT_CHRG_DIFFCLICK" parameterType="Map">
		UPDATE 
			BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS S, (
				SELECT S.CLICK_CNT, S.ADVRTS_AMT
					, C.STATS_DTTM, C.PLTFOM_TP_CODE, C.ADVRTS_PRDT_CODE, C.ADVRTS_TP_CODE, C.MEDIA_SCRIPT_NO, C.ITL_TP_CODE
				FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS C RIGHT JOIN BILLING.MOB_MEDIA_SCRIPT_STATS S 
				ON S.STATS_DTTM=C.STATS_DTTM AND S.PLTFOM_TP_CODE=C.PLTFOM_TP_CODE AND S.ADVRTS_PRDT_CODE=C.ADVRTS_PRDT_CODE AND S.ADVRTS_TP_CODE=C.ADVRTS_TP_CODE AND S.MEDIA_SCRIPT_NO=C.MEDIA_SCRIPT_NO AND S.ITL_TP_CODE=C.ITL_TP_CODE
				LEFT JOIN dreamsearch.media_script M ON S.MEDIA_SCRIPT_NO=M.no AND EPRS_REST_RATE!=100 
				WHERE S.STATS_DTTM = ${STATS_DTTM} AND ( S.CLICK_CNT!=C.CLICK_CNT OR S.ADVRTS_AMT!=C.ADVRTS_AMT ) AND S.STATS_DTTM!=DATE_FORMAT(NOW(),'%Y%m%d') 
			) C
			 	SET S.CLICK_CNT=(CASE WHEN C.ADVRTS_PRDT_CODE = 03 THEN S.CLICK_CNT ELSE C.CLICK_CNT END), S.ADVRTS_AMT=C.ADVRTS_AMT, ALT_DTTM=NOW()
				WHERE S.STATS_DTTM=C.STATS_DTTM AND S.PLTFOM_TP_CODE=C.PLTFOM_TP_CODE AND S.ADVRTS_PRDT_CODE=C.ADVRTS_PRDT_CODE AND S.ADVRTS_TP_CODE=C.ADVRTS_TP_CODE 
					AND S.MEDIA_SCRIPT_NO=C.MEDIA_SCRIPT_NO AND S.ITL_TP_CODE=C.ITL_TP_CODE
			;
	</update>
	
	<update id="sql_UPDATE_MEDIA_TP_CODE" parameterType="Map">
		/* sql_UPDATE_MEDIA_TP_CODE : update MOB_MEDIA_SCRIPT_CHRG_STATS */
		UPDATE BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS MMSCS JOIN BILLING.MOB_MEDIA_SCRIPT_STATS MMSS 
		    ON MMSCS.STATS_DTTM = MMSS.STATS_DTTM
			AND MMSCS.PLTFOM_TP_CODE = MMSS.PLTFOM_TP_CODE
			AND MMSCS.ADVRTS_PRDT_CODE = MMSS.ADVRTS_PRDT_CODE
			AND MMSCS.ADVRTS_TP_CODE = MMSS.ADVRTS_TP_CODE
			AND MMSCS.MEDIA_SCRIPT_NO = MMSS.MEDIA_SCRIPT_NO
			AND MMSCS.ITL_TP_CODE = MMSS.ITL_TP_CODE
		   SET MMSCS.MEDIA_TP_CODE = MMSS.MEDIA_TP_CODE
		     , MMSCS.ALT_USER_ID ='BATCH'
		     , MMSCS.ALT_DTTM = NOW()
		  WHERE MMSCS.STATS_DTTM = ${STATS_DTTM} 
	</update>
	
	<select id="snapShotMediaScript" resultType="Map">
	SELECT STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,MEDIA_SCRIPT_NO,ITL_TP_CODE,MEDIA_TP_CODE,MEDIA_ID
			,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT
			,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
		FROM BILLING.MOB_MEDIA_SCRIPT_STATS 
		WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d')
	</select>
	
	<update id="sql_INSERT_MEDIA_CHRG" parameterType="Map">
		/* MOB_MEDIA_CHRG_STATS : insert tmptable TO mediaChrgStats */
		INSERT INTO BILLING.MOB_MEDIA_CHRG_STATS(
			STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE
				, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, MEDIA_PYMNT_AMT
				, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT
				, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
			)
				SELECT
					*
				FROM (
					SELECT
						STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, IFNULL(MEDIA_ID,'-') AS MEDIA_ID, ITL_TP_CODE
						, SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
						, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
						, REG_USER_ID, REG_DTTM, ALT_USER_ID, ALT_DTTM
					FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS
					WHERE STATS_DTTM =${STATS_DTTM}
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, IFNULL(MEDIA_ID,'-'), ITL_TP_CODE
				) S
		ON DUPLICATE KEY UPDATE
			MOB_MEDIA_CHRG_STATS.TOT_EPRS_CNT = S.TOT_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.PAR_EPRS_CNT = S.PAR_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.CLICK_CNT = S.CLICK_CNT
			, MOB_MEDIA_CHRG_STATS.ADVRTS_AMT = S.ADVRTS_AMT
			, MOB_MEDIA_CHRG_STATS.MEDIA_PYMNT_AMT = S.MEDIA_PYMNT_AMT
			, MOB_MEDIA_CHRG_STATS.TRGT_EPRS_CNT = S.TRGT_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.TRGT_PAR_EPRS_CNT = S.TRGT_PAR_EPRS_CNT
			, MOB_MEDIA_CHRG_STATS.TRGT_CLICK_CNT = S.TRGT_CLICK_CNT
			, MOB_MEDIA_CHRG_STATS.TRGT_ADVRTS_AMT = S.TRGT_ADVRTS_AMT
			, MOB_MEDIA_CHRG_STATS.ALT_USER_ID ='BATCH'
			, MOB_MEDIA_CHRG_STATS.ALT_DTTM = NOW()
		;
	</update>
	
	
	<!-- MOB_CNVRS_RENEW-->
	<update id="MOB_CNVRS_RENEW_STATS" parameterType = "Map">
		INSERT INTO BILLING.MOB_CNVRS_RENEW_STATS (
		STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, PAR_NO, MEDIA_ID, 
		MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN,
		ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID 
		) 
		SELECT * FROM (
			SELECT 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, PAR_NO, MEDIA_ID, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, HHSTATS.REG_USER_ID  
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS AS HHSTATS
			INNER JOIN (
				SELECT DISTINCT STATS_DTTM
				FROM BILLING.MOB_CNVRS_RENEW_NCL
				WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
			)  AS NCL ON HHSTATS.STATS_DTTM = NCL.STATS_DTTM 
			GROUP BY
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, PAR_NO, MEDIA_ID, ITL_TP_CODE, TRK_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
	</update>
	<update id="MOB_CNVRS_RENEW_ADVER_STATS" parameterType = "Map">
		INSERT INTO BILLING.MOB_CNVRS_RENEW_ADVER_STATS (
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE,
		MOB_ORDER_YN, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		)
		SELECT * FROM (
			SELECT 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, HHSTATS.REG_USER_ID  
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS AS HHSTATS
			INNER JOIN (
				SELECT DISTINCT STATS_DTTM
				FROM BILLING.MOB_CNVRS_RENEW_NCL
				WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
			)  AS NCL ON HHSTATS.STATS_DTTM = NCL.STATS_DTTM 
			GROUP BY 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, ADVER_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT		
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_ADVER_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_ADVER_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_ADVER_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_ADVER_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_ADVER_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_ADVER_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
	</update>
	<update id="MOB_CNVRS_RENEW_MEDIA_STATS" parameterType = "Map">
		INSERT INTO BILLING.MOB_CNVRS_RENEW_MEDIA_STATS(
				STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, MEDIA_TP_CODE
		)
		SELECT * FROM (
			SELECT 
				S.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, REG_USER_ID, MEDIA_TP_CODE
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS AS S
			INNER JOIN (
				SELECT DISTINCT STATS_DTTM
				FROM BILLING.MOB_CNVRS_RENEW_NCL
				WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
			)  AS NCL ON S.STATS_DTTM = NCL.STATS_DTTM 
			GROUP BY
				S.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_MEDIA_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_MEDIA_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_MEDIA_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_MEDIA_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_MEDIA_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_MEDIA_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
				
	</update>
	<update id="MOB_CNVRS_RENEW_COM_STATS" parameterType = "Map">
		INSERT INTO BILLING.MOB_CNVRS_RENEW_COM_STATS(
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, MEDIA_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN,
		ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		) 
		SELECT * FROM (
			SELECT 
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, MEDIA_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
				, SUM(ORDER_AMT) AS ORDER_AMT, SUM(ORDER_CNT) AS ORDER_CNT
				, CASE WHEN SUM(ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(ORDER_QY) END AS ORDER_QY
				, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
				, CASE WHEN SUM(TRGT_ORDER_QY)>2000000000 THEN 2000000000 ELSE SUM(TRGT_ORDER_QY) END AS TRGT_ORDER_QY
				, REG_USER_ID
			FROM BILLING.MOB_CNVRS_RENEW_HH_STATS AS HHSTATS
			INNER JOIN (
				SELECT DISTINCT STATS_DTTM
				FROM BILLING.MOB_CNVRS_RENEW_NCL
				WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
			)  AS NCL ON HHSTATS.STATS_DTTM = NCL.STATS_DTTM 
			GROUP BY
				HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, MEDIA_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) AS RESULT
		ON  DUPLICATE KEY UPDATE 
			MOB_CNVRS_RENEW_COM_STATS.ORDER_AMT = RESULT.ORDER_AMT,
			MOB_CNVRS_RENEW_COM_STATS.ORDER_CNT = RESULT.ORDER_CNT,
			MOB_CNVRS_RENEW_COM_STATS.ORDER_QY  = RESULT.ORDER_QY,
			MOB_CNVRS_RENEW_COM_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT,
			MOB_CNVRS_RENEW_COM_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
			MOB_CNVRS_RENEW_COM_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
			;
	</update>
	<insert id="INSERT_TABLE_MOB_MEDIA_PAR_WK_STATS">
	INSERT INTO BILLING.MOB_MEDIA_PAR_WK_STATS (
		STATS_DTTM, STATS_YTH, STATS_WK, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_PAR_NO, ITL_TP_CODE, MEDIA_TP_CODE, MEDIA_ID,
		TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, REG_USER_ID
	) 
		SELECT * FROM(
			SELECT 
			MEDIASCRIPTSTATS.STATS_DTTM,
			MEDIASCRIPTSTATS.STATS_YTH, 
			MEDIASCRIPTSTATS.STATS_WK, 
			MEDIASCRIPTSTATS.PLTFOM_TP_CODE,
			MEDIASCRIPTSTATS.ADVRTS_PRDT_CODE,
			MEDIASCRIPTSTATS.ADVRTS_TP_CODE,
			MEDIASCRIPTSTATS.MEDIA_PAR_NO,
			MEDIASCRIPTSTATS.ITL_TP_CODE,
			MEDIASCRIPTSTATS.MEDIA_TP_CODE,
			MEDIASCRIPTSTATS.MEDIA_ID,
			SUM(MEDIASCRIPTSTATS.TOT_EPRS_CNT) AS TOT_EPRS_CNT,
			SUM(MEDIASCRIPTSTATS.PAR_EPRS_CNT) AS PAR_EPRS_CNT,
			SUM(MEDIASCRIPTSTATS.CLICK_CNT) AS CLICK_CNT,
			SUM(MEDIASCRIPTSTATS.ADVRTS_AMT) AS ADVRTS_AMT,
			MEDIASCRIPTSTATS.REG_USER_ID
			FROM (
				SELECT CONCAT(DATE_FORMAT(REG_DTTM,'%Y%m'),'01') AS STATS_DTTM ,DATE_FORMAT(STATS_DTTM,'%Y%m') AS STATS_YTH, WEEKOFYEAR(STATS_DTTM) AS STATS_WK,  
				PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO AS MEDIA_PAR_NO, ITL_TP_CODE, 
				MEDIA_TP_CODE, MEDIA_ID, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, REG_USER_ID, REG_DTTM 
				FROM BILLING.MOB_MEDIA_SCRIPT_STATS
				WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -8 DAY),'%Y%m%d')
				) MEDIASCRIPTSTATS
			GROUP BY STATS_YTH, STATS_WK, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, MEDIA_ID, ITL_TP_CODE, MEDIA_PAR_NO, ADVRTS_TP_CODE
		) RESULT
	ON DUPLICATE KEY UPDATE 
		BILLING.MOB_MEDIA_PAR_WK_STATS.TOT_EPRS_CNT 		= BILLING.MOB_MEDIA_PAR_WK_STATS.TOT_EPRS_CNT + RESULT.TOT_EPRS_CNT 
		,BILLING.MOB_MEDIA_PAR_WK_STATS.PAR_EPRS_CNT 		= BILLING.MOB_MEDIA_PAR_WK_STATS.PAR_EPRS_CNT + RESULT.PAR_EPRS_CNT 			
		,BILLING.MOB_MEDIA_PAR_WK_STATS.CLICK_CNT 		= BILLING.MOB_MEDIA_PAR_WK_STATS.CLICK_CNT + RESULT.CLICK_CNT
		,BILLING.MOB_MEDIA_PAR_WK_STATS.ADVRTS_AMT 		= BILLING.MOB_MEDIA_PAR_WK_STATS.ADVRTS_AMT + RESULT.ADVRTS_AMT
		;
	</insert>
	
	
	<insert id="INSERT_BEFORE_M0B_RENEW_NCL" parameterType="Map">
		<![CDATA[
			INSERT INTO BILLING.MOB_CNVRS_RENEW_NCL(
				STATS_DTTM, STATS_HH, IP, AU_ID, ADVER_ID, ORDER_NO, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, CNVRS_TP_CODE, SITE_CODE, PAR_NO, MEDIA_ID, MEDIA_TP_CODE
				, CLICK_PCODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, MOB_ORDER_YN, INFLOW_ROUTE, PNM, CLICK_DTTM
				, ORDER_AMT, ORDER_CNT, ORDER_QY
				, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY
				, REG_USER_ID, REG_DTTM, STATS_ALT_DT, RGN_IP
				)
				 SELECT * FROM (
				          SELECT 
				            STATS_DTTM, STATS_HH, IP, IP AU_ID, ADVER_ID, ORDER_NO, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, CNVRS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, MEDIA_ID, MEDIA_TP_CODE
				            , ORDPCODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, MOB_ORDER_YN, INFLOW_ROUTE, PNM, CLICK_DTTM
				            , ORDER_AMT, ORDER_CNT, ORDER_QY
				            , CASE WHEN ADVRTS_TP_CODE IN('04','10','16','17','34','37','40') THEN ORDER_AMT ELSE 0 END TRGT_ORDER_AMT
				            , CASE WHEN ADVRTS_TP_CODE IN('04','10','16','17','34','37','40') THEN ORDER_CNT ELSE 0 END TRGT_ORDER_CNT
				            , CASE WHEN ADVRTS_TP_CODE IN('04','10','16','17','34','37','40') THEN ORDER_QY ELSE 0 END TRGT_ORDER_QY
				            , REG_USER_ID, REG_DTTM, STATS_ALT_DT, RGN_IP
				          FROM (
				            SELECT STATS_DTTM, IP, IP AU_ID, ADVER_ID, ORDER_NO, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, '90' TRK_TP_CODE
				              , CASE 
				                WHEN B.userid IN('kakao', 'mkakao') THEN '03' 
				                WHEN B.userid IN('agooglemedia', 'googlemedia', 'mgooglemedia') THEN '04' 
				                WHEN B.userid IN('igaworks', 'igaworks02','igaworksm','igaworksp') THEN '08' 
				                WHEN B.userid IN('rtbmobon') THEN '10'
				              ELSE '01' END ITL_TP_CODE
				              , CNVRS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, B.userid MEDIA_ID
				              , CASE WHEN LENGTH(IFNULL(c.scate,''))=0 THEN '' WHEN LENGTH(IFNULL(c.scate,''))=1 THEN CONCAT('0',c.scate) ELSE c.scate END MEDIA_TP_CODE
				              , ORDPCODE
				              , SESION_SELNG_YN
				              , CASE WHEN TIMESTAMPDIFF(MINUTE, A.CLICK_DTTM, A.REG_DTTM) <= 30 THEN 'Y' ELSE 'N' END SESION_SELNG2_YN
				              , DIRECT_YN, MOB_ORDER_YN, C.INFLOW_ROUTE, PNM
				              , A.CLICK_DTTM
				              , ORDER_AMT, ORDER_CNT, ORDER_QY
				              , DATE_FORMAT(NOW(),'%Y%m%d%H%i') STATS_ALT_DT
				              , DATE_FORMAT(REG_DTTM,'%H') STATS_HH
				              , REG_USER_ID, REG_DTTM, C.RGN_IP
				            FROM BILLING.MOB_CNVRS_NCL A LEFT JOIN dreamsearch.media_script B LEFT JOIN dreamsearch.media_site c ON B.mediasite_no=c.no
				            ON A.MEDIA_SCRIPT_NO=B.no LEFT JOIN dreamsearch.CONVERSION_LOG C ON A.STATS_DTTM=C.PARTDT 
				              AND CONVERT(A.ADVER_ID USING EUCKR)=C.USERID AND CONVERT(A.ORDER_NO USING EUCKR)=C.ORDCODE
				            WHERE C.PARTDT=A.STATS_DTTM AND A.STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
				            AND NOT EXISTS( 
				              SELECT 1 FROM BILLING.MOB_CNVRS_RENEW_NCL B WHERE A.STATS_DTTM=B.STATS_DTTM AND A.ADVER_ID=B.ADVER_ID AND A.ORDER_NO=B.ORDER_NO
				              GROUP BY STATS_DTTM
				            )
						/*
						UNION ALL
						SELECT STATS_DTTM, IP, IP AU_ID, ADVER_ID, ORDER_NO, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, '90' TRK_TP_CODE
							, CASE 
								WHEN B.userid IN('kakao', 'mkakao') THEN '03' 
								WHEN B.userid IN('agooglemedia', 'googlemedia', 'mgooglemedia') THEN '04' 
								WHEN B.userid IN('igaworks', 'igaworks02','igaworksm','igaworksp') THEN '08' 
								WHEN B.userid IN('rtbmobon') THEN '10'
							ELSE '01' END ITL_TP_CODE
							, CNVRS_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, B.userid MEDIA_ID
							, CASE WHEN LENGTH(IFNULL(c.scate,''))=0 THEN '' WHEN LENGTH(IFNULL(c.scate,''))=1 THEN CONCAT('0',c.scate) ELSE c.scate END MEDIA_TP_CODE
							, ORDPCODE
							, SESION_SELNG_YN
							, CASE WHEN TIMESTAMPDIFF(MINUTE, A.CLICK_DTTM, A.REG_DTTM) <= 30 THEN 'Y' ELSE 'N' END SESION_SELNG2_YN
							, DIRECT_YN, MOB_ORDER_YN, C.INFLOW_ROUTE, PNM
							, A.CLICK_DTTM
							, ORDER_AMT, ORDER_CNT, ORDER_QY
							, DATE_FORMAT(NOW(),'%Y%m%d%H%i') STATS_ALT_DT
							, DATE_FORMAT(REG_DTTM,'%H') STATS_HH
							, REG_USER_ID, REG_DTTM, C.RGN_IP
						FROM BILLING.MOB_CNVRS_NCL A LEFT JOIN dreamsearch.media_script B LEFT JOIN dreamsearch.media_site c ON B.mediasite_no=c.no
						ON A.MEDIA_SCRIPT_NO=B.no LEFT JOIN dreamsearch.CONVERSION_LOG C ON A.STATS_DTTM=C.PARTDT 
							AND CONVERT(A.ADVER_ID USING EUCKR)=C.USERID AND CONVERT(A.ORDER_NO USING EUCKR)=C.ORDCODE
						WHERE C.PARTDT=A.STATS_DTTM AND A.STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
						AND MEDIA_SCRIPT_NO=1999 AND ORDPCODE=''
						AND NOT EXISTS( 
							SELECT 1 FROM BILLING.MOB_CNVRS_RENEW_NCL B 
							WHERE A.STATS_DTTM=B.STATS_DTTM AND A.ADVER_ID=B.ADVER_ID AND A.ORDER_NO=B.ORDER_NO 
							AND A.MEDIA_SCRIPT_NO=B.PAR_NO AND C.ORDPCODE=B.CLICK_PCODE
						)
						*/
					) A 
				) SRC
			ON DUPLICATE KEY UPDATE 
				MOB_CNVRS_RENEW_NCL.ORDER_AMT = SRC.ORDER_AMT
				, MOB_CNVRS_RENEW_NCL.ORDER_CNT = SRC.ORDER_CNT
				, MOB_CNVRS_RENEW_NCL.ORDER_QY = SRC.ORDER_QY
				, MOB_CNVRS_RENEW_NCL.TRGT_ORDER_AMT = SRC.TRGT_ORDER_AMT
				, MOB_CNVRS_RENEW_NCL.TRGT_ORDER_CNT = SRC.TRGT_ORDER_CNT
				, MOB_CNVRS_RENEW_NCL.TRGT_ORDER_QY = SRC.TRGT_ORDER_QY
				;
			
			INSERT INTO BILLING.MOB_CNVRS_RENEW_HH_STATS(
				STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, PAR_NO, MEDIA_ID, MEDIA_TP_CODE
				, TRK_TP_CODE, ITL_TP_CODE, CNVRS_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, MOB_ORDER_YN
				, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
				)
				SELECT * FROM (
					SELECT STATS_DTTM, STATS_HH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, SITE_CODE, ADVER_ID, MEDIA_SCRIPT_NO, MEDIA_ID, MEDIA_TP_CODE
						, TRK_TP_CODE, ITL_TP_CODE, CNVRS_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, MOB_ORDER_YN
						, SUM(ORDER_AMT)ORDER_AMT, SUM(ORDER_CNT)ORDER_CNT, SUM(ORDER_QY)ORDER_QY
						, SUM(CASE WHEN ADVRTS_TP_CODE IN('04','10','16','17','34','37','40') THEN ORDER_AMT ELSE 0 END) TRGT_ORDER_AMT
						, SUM(CASE WHEN ADVRTS_TP_CODE IN('04','10','16','17','34','37','40') THEN ORDER_CNT ELSE 0 END) TRGT_ORDER_CNT
						, SUM(CASE WHEN ADVRTS_TP_CODE IN('04','10','16','17','34','37','40') THEN ORDER_QY ELSE 0 END) TRGT_ORDER_QY
						, CASE WHEN ITL_TP_CODE NOT IN ('01') THEN 'OPENRTB' ELSE REG_USER_ID END REG_USER_ID, REG_DTTM
					FROM (
						SELECT STATS_DTTM
							, DATE_FORMAT(REG_DTTM,'%H') STATS_HH
							, IP, IP AU_ID, ADVER_ID, ORDER_NO, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE
							, ITL_TP_CODE
							, CNVRS_TP_CODE, SITE_CODE, PAR_NO MEDIA_SCRIPT_NO, MEDIA_ID, MEDIA_TP_CODE
							, CLICK_PCODE
							, SESION_SELNG_YN, SESION_SELNG2_YN
							, DIRECT_YN, MOB_ORDER_YN, INFLOW_ROUTE, PNM
							, CLICK_DTTM
							, ORDER_AMT, ORDER_CNT, ORDER_QY
							, REG_USER_ID, REG_DTTM
						FROM BILLING.MOB_CNVRS_RENEW_NCL
						WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW() , INTERVAL -1 DAY),'%Y%m%d')
					) A
					GROUP BY STATS_DTTM, STATS_HH, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, PLTFOM_TP_CODE, SITE_CODE, MEDIA_SCRIPT_NO, TRK_TP_CODE, ITL_TP_CODE, CNVRS_TP_CODE
						, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, MOB_ORDER_YN
				) SRC
				WHERE ITL_TP_CODE NOT IN('01','03')
					/* OR MEDIA_SCRIPT_NO=1999*/
			ON DUPLICATE KEY UPDATE 
				MOB_CNVRS_RENEW_HH_STATS.ORDER_AMT = SRC.ORDER_AMT
				, MOB_CNVRS_RENEW_HH_STATS.ORDER_CNT = SRC.ORDER_CNT
				, MOB_CNVRS_RENEW_HH_STATS.ORDER_QY = SRC.ORDER_QY
				, MOB_CNVRS_RENEW_HH_STATS.TRGT_ORDER_AMT = SRC.TRGT_ORDER_AMT
				, MOB_CNVRS_RENEW_HH_STATS.TRGT_ORDER_CNT = SRC.TRGT_ORDER_CNT
				, MOB_CNVRS_RENEW_HH_STATS.TRGT_ORDER_QY = SRC.TRGT_ORDER_QY
				;
		]]>
	</insert>
	<update id="MOB_CNVRS_RENEW_KPI_STATS" parameterType = "Map">
		INSERT INTO BILLING.MOB_CNVRS_RENEW_KPI_STATS (
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
		, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		)
		SELECT STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, IFNULL(KPI_NO,0)KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
		, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID
		FROM (
		SELECT
		HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
		, MEDIA_TP_CODE, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		, SUM(ORDER_AMT     ) AS ORDER_AMT
		, SUM(ORDER_CNT     ) AS ORDER_CNT
		, SUM(ORDER_QY      ) AS ORDER_QY
		, SUM(TRGT_ORDER_AMT) AS TRGT_ORDER_AMT
		, SUM(TRGT_ORDER_CNT) AS TRGT_ORDER_CNT
		, SUM(TRGT_ORDER_QY ) AS TRGT_ORDER_QY
		, REG_USER_ID
		FROM BILLING.MOB_CNVRS_RENEW_HH_STATS HHSTATS LEFT JOIN (SELECT SITE_CODE, KPI_NO FROM dreamsearch.adsite UNION ALL SELECT SITE_CODE, KPI_NO FROM dreamsearch.iadsite) A
		ON CONVERT(HHSTATS.SITE_CODE USING EUCKR)=A.SITE_CODE
		INNER JOIN (
		SELECT DISTINCT STATS_DTTM
		FROM BILLING.MOB_CNVRS_RENEW_NCL
		WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
		)  AS NCL ON HHSTATS.STATS_DTTM = NCL.STATS_DTTM
		GROUP BY
		HHSTATS.STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, KPI_NO, ADVER_ID, PAR_NO, MEDIA_ID
		, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
		) RESULT
		ON  DUPLICATE KEY UPDATE
		MOB_CNVRS_RENEW_KPI_STATS.ORDER_AMT = RESULT.ORDER_AMT
		, MOB_CNVRS_RENEW_KPI_STATS.ORDER_CNT = RESULT.ORDER_CNT
		, MOB_CNVRS_RENEW_KPI_STATS.ORDER_QY  = RESULT.ORDER_QY
		, MOB_CNVRS_RENEW_KPI_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT
		, MOB_CNVRS_RENEW_KPI_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT
		, MOB_CNVRS_RENEW_KPI_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY
		;
	</update>
	
	<update id="sql_MOB_CTGR_STATS" parameterType = "Map">
	INSERT INTO BILLING.MOB_CTGR_STATS ( 
	STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, 
	MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM
		)
	SELECT * FROM (
		SELECT MCHS.STATS_DTTM, MCHS.PLTFOM_TP_CODE, MCHS.ADVRTS_PRDT_CODE, MCHS.ADVRTS_TP_CODE, MCHS.CTGR_SEQ, MCHS.ITL_TP_CODE,
		SUM(MCHS.TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(MCHS.PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(MCHS.CLICK_CNT) AS CLICK_CNT, SUM(MCHS.ADVRTS_AMT) AS ADVRTS_AMT, SUM(MCHS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, 
		SUM(MCHS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT, SUM(MCHS.TRGT_PAR_EPRS_CNT) AS  TRGT_PAR_EPRS_CNT, SUM(MCHS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT, SUM(MCHS.TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT,
		MCHS.REG_USER_ID, MCHS.REG_DTTM 
		FROM BILLING.MOB_CTGR_HH_STATS AS MCHS
		WHERE MCHS.STATS_DTTM = ${STATS_DTTM}
		AND MCHS.ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CTGR_STATS.TOT_EPRS_CNT = RESULT.TOT_EPRS_CNT,
	MOB_CTGR_STATS.PAR_EPRS_CNT = RESULT.PAR_EPRS_CNT,
	MOB_CTGR_STATS.CLICK_CNT = RESULT.CLICK_CNT,
	MOB_CTGR_STATS.ADVRTS_AMT = RESULT.ADVRTS_AMT,
	MOB_CTGR_STATS.MEDIA_PYMNT_AMT = RESULT.MEDIA_PYMNT_AMT,
	MOB_CTGR_STATS.TRGT_EPRS_CNT = RESULT.TRGT_EPRS_CNT,
	MOB_CTGR_STATS.TRGT_PAR_EPRS_CNT  = RESULT.TRGT_PAR_EPRS_CNT,
	MOB_CTGR_STATS.TRGT_CLICK_CNT = RESULT.TRGT_CLICK_CNT,
	MOB_CTGR_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT,
	MOB_CTGR_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CTGR_STATS.REG_DTTM = RESULT.REG_DTTM,
	MOB_CTGR_STATS.ALT_USER_ID = 'BATCH',
	MOB_CTGR_STATS.ALT_DTTM = NOW();
	
	
	INSERT INTO BILLING.MOB_CTGR_MTH_STATS ( 
	STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE, TOT_EPRS_CNT, PAR_EPRS_CNT, CLICK_CNT, ADVRTS_AMT, 
	MEDIA_PYMNT_AMT, TRGT_EPRS_CNT, TRGT_PAR_EPRS_CNT, TRGT_CLICK_CNT, TRGT_ADVRTS_AMT, REG_USER_ID, REG_DTTM
		)
	SELECT * FROM (
		SELECT DATE_FORMAT(MCHS.STATS_DTTM,'%Y%m') AS STATS_MTH, MCHS.PLTFOM_TP_CODE, MCHS.ADVRTS_PRDT_CODE, MCHS.ADVRTS_TP_CODE, MCHS.CTGR_SEQ, MCHS.ITL_TP_CODE,
		SUM(MCHS.TOT_EPRS_CNT) AS TOT_EPRS_CNT, SUM(MCHS.PAR_EPRS_CNT) AS PAR_EPRS_CNT, SUM(MCHS.CLICK_CNT) AS CLICK_CNT, SUM(MCHS.ADVRTS_AMT) AS ADVRTS_AMT, SUM(MCHS.MEDIA_PYMNT_AMT) AS MEDIA_PYMNT_AMT, 
		SUM(MCHS.TRGT_EPRS_CNT) AS TRGT_EPRS_CNT, SUM(MCHS.TRGT_PAR_EPRS_CNT) AS  TRGT_PAR_EPRS_CNT, SUM(MCHS.TRGT_CLICK_CNT) AS TRGT_CLICK_CNT, SUM(MCHS.TRGT_ADVRTS_AMT) AS TRGT_ADVRTS_AMT,
		MCHS.REG_USER_ID, MCHS.REG_DTTM 
		FROM BILLING.MOB_CTGR_STATS AS MCHS
		WHERE MCHS.STATS_DTTM BETWEEN ${FIRST_DTTM} AND ${STATS_DTTM} 
		AND MCHS.ADVRTS_TP_CODE = #{ADVRTS_TP_CODE}
		GROUP BY DATE_FORMAT(MCHS.STATS_DTTM,'%Y%m'), PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, ITL_TP_CODE
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CTGR_MTH_STATS.TOT_EPRS_CNT = RESULT.TOT_EPRS_CNT,
	MOB_CTGR_MTH_STATS.PAR_EPRS_CNT = RESULT.PAR_EPRS_CNT,
	MOB_CTGR_MTH_STATS.CLICK_CNT = RESULT.CLICK_CNT,
	MOB_CTGR_MTH_STATS.ADVRTS_AMT = RESULT.ADVRTS_AMT,
	MOB_CTGR_MTH_STATS.MEDIA_PYMNT_AMT = RESULT.MEDIA_PYMNT_AMT,
	MOB_CTGR_MTH_STATS.TRGT_EPRS_CNT = RESULT.TRGT_EPRS_CNT,
	MOB_CTGR_MTH_STATS.TRGT_PAR_EPRS_CNT  = RESULT.TRGT_PAR_EPRS_CNT,
	MOB_CTGR_MTH_STATS.TRGT_CLICK_CNT = RESULT.TRGT_CLICK_CNT,
	MOB_CTGR_MTH_STATS.TRGT_ADVRTS_AMT = RESULT.TRGT_ADVRTS_AMT,
	MOB_CTGR_MTH_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CTGR_MTH_STATS.REG_DTTM = RESULT.REG_DTTM,
	MOB_CTGR_MTH_STATS.ALT_USER_ID = 'BATCH',
	MOB_CTGR_MTH_STATS.ALT_DTTM = NOW(); 
	</update>
	
	<update id = 'MOB_CNVRS_RENEW_CTGR_STATS'>
	INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_STATS (
		STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
			, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
	)
	SELECT * FROM (
		SELECT MCRSHS.STATS_DTTM, MCRSHS.PLTFOM_TP_CODE, MCRSHS.ADVRTS_PRDT_CODE, MCRSHS.ADVRTS_TP_CODE, MCRSHS.CTGR_SEQ, MCRSHS.TRK_TP_CODE, MCRSHS.ITL_TP_CODE
		, MCRSHS.SESION_SELNG_YN, MCRSHS.SESION_SELNG2_YN, MCRSHS.DIRECT_YN, MCRSHS.CNVRS_TP_CODE, MCRSHS.MOB_ORDER_YN
		, SUM(MCRSHS.ORDER_AMT) AS ORDER_AMT , SUM(MCRSHS.ORDER_CNT) AS ORDER_CNT, SUM(MCRSHS.ORDER_QY) AS ORDER_QY, SUM(MCRSHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRSHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(MCRSHS.TRGT_ORDER_QY) AS TRGT_ORDER_QY
		, MCRSHS.REG_USER_ID, MCRSHS.REG_DTTM  
		FROM BILLING.MOB_CNVRS_RENEW_CTGR_HH_STATS AS MCRSHS
		INNER JOIN (
					SELECT DISTINCT STATS_DTTM
					FROM BILLING.MOB_CNVRS_RENEW_NCL
					WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
				)  AS NCL ON MCRSHS.STATS_DTTM = NCL.STATS_DTTM 
		GROUP BY STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, CTGR_SEQ, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CNVRS_RENEW_CTGR_STATS.ORDER_AMT = RESULT.ORDER_AMT,
	MOB_CNVRS_RENEW_CTGR_STATS.ORDER_CNT = RESULT.ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_STATS.ORDER_QY = RESULT.ORDER_QY, 
	MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT, 
	MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY,  
	MOB_CNVRS_RENEW_CTGR_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CNVRS_RENEW_CTGR_STATS.REG_DTTM = RESULT.REG_DTTM, 
	MOB_CNVRS_RENEW_CTGR_STATS.ALT_USER_ID = 'BATCH',
	MOB_CNVRS_RENEW_CTGR_STATS.ALT_DTTM = NOW();
	
	INSERT INTO BILLING.MOB_CNVRS_RENEW_CTGR_MTH_STATS (
		STATS_MTH, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, CTGR_SEQ, TRK_TP_CODE, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
			, ORDER_AMT, ORDER_CNT, ORDER_QY, TRGT_ORDER_AMT, TRGT_ORDER_CNT, TRGT_ORDER_QY, REG_USER_ID, REG_DTTM
	)
	SELECT * FROM (
		SELECT DATE_FORMAT(MCRSHS.STATS_DTTM, '%Y%m') AS STATS_MTH, MCRSHS.PLTFOM_TP_CODE, MCRSHS.ADVRTS_PRDT_CODE, MCRSHS.ADVRTS_TP_CODE, MCRSHS.CTGR_SEQ, MCRSHS.TRK_TP_CODE, MCRSHS.ITL_TP_CODE
		, MCRSHS.SESION_SELNG_YN, MCRSHS.SESION_SELNG2_YN, MCRSHS.DIRECT_YN, MCRSHS.CNVRS_TP_CODE, MCRSHS.MOB_ORDER_YN
		, SUM(MCRSHS.ORDER_AMT) AS ORDER_AMT , SUM(MCRSHS.ORDER_CNT) AS ORDER_CNT, SUM(MCRSHS.ORDER_QY) AS ORDER_QY, SUM(MCRSHS.TRGT_ORDER_AMT) AS TRGT_ORDER_AMT, SUM(MCRSHS.TRGT_ORDER_CNT) AS TRGT_ORDER_CNT, SUM(MCRSHS.TRGT_ORDER_QY) AS TRGT_ORDER_QY
		, MCRSHS.REG_USER_ID, MCRSHS.REG_DTTM  
		FROM BILLING.MOB_CNVRS_RENEW_CTGR_STATS AS MCRSHS
		INNER JOIN (
					SELECT DISTINCT DATE_FORMAT(STATS_DTTM,'%Y%m') AS STATS_MTH FROM BILLING.MOB_CNVRS_RENEW_NCL
					WHERE STATS_ALT_DT >= DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 HOUR),'%Y%m%d%H%i')
				)  AS NCL ON DATE_FORMAT(MCRSHS.STATS_DTTM, '%Y%m') = NCL.STATS_MTH 
		GROUP BY DATE_FORMAT(STATS_DTTM, '%Y%m') , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, TRK_TP_CODE, CTGR_SEQ, ITL_TP_CODE, SESION_SELNG_YN, SESION_SELNG2_YN, DIRECT_YN, CNVRS_TP_CODE, MOB_ORDER_YN
	) RESULT
	ON DUPLICATE KEY UPDATE 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_AMT = RESULT.ORDER_AMT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_CNT = RESULT.ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ORDER_QY = RESULT.ORDER_QY, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_AMT = RESULT.TRGT_ORDER_AMT, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_CNT = RESULT.TRGT_ORDER_CNT,
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.TRGT_ORDER_QY = RESULT.TRGT_ORDER_QY,  
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.REG_USER_ID = RESULT.REG_USER_ID, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.REG_DTTM = RESULT.REG_DTTM, 
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ALT_USER_ID = 'BATCH',
	MOB_CNVRS_RENEW_CTGR_MTH_STATS.ALT_DTTM = NOW();	 
	</update>

	<update id="UPDATE_DIFF_MOB_MEDIA_SCRIPT_CHRG_STATS" >
	UPDATE BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS MMSCS JOIN (
		SELECT A.STATS_DTTM , A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE,A.MEDIA_SCRIPT_NO, A.ITL_TP_CODE ,A.PAR_EPRS_CNT,A.TOT_EPRS_CNT 
			FROM (
				SELECT 'S' G, STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
					, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
					FROM BILLING.MOB_MEDIA_SCRIPT_STATS WHERE STATS_DTTM = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y%m%d')
					AND MEDIA_SCRIPT_NO IN (
						SELECT NO FROM dreamsearch.media_script WHERE EPRS_REST_RATE!=100)
					AND ITL_TP_CODE != '99'
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			) A, (
				SELECT 'C', STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
					, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
					FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS WHERE STATS_DTTM =  DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y%m%d') 
					AND MEDIA_SCRIPT_NO IN (
						SELECT NO FROM dreamsearch.media_script WHERE EPRS_REST_RATE!=100
						)
					AND ITL_TP_CODE != '99'
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			)B
			WHERE A.STATS_DTTM=B.STATS_DTTM AND A.PLTFOM_TP_CODE=B.PLTFOM_TP_CODE AND A.ADVRTS_PRDT_CODE=B.ADVRTS_PRDT_CODE AND A.ADVRTS_TP_CODE=B.ADVRTS_TP_CODE AND A.MEDIA_SCRIPT_NO=B.MEDIA_SCRIPT_NO AND A.ITL_TP_CODE=B.ITL_TP_CODE 
			AND A.PAR_EPRS_CNT <![CDATA[ < ]]> B.PAR_EPRS_CNT
		) MMSS 
		    ON MMSCS.STATS_DTTM = MMSS.STATS_DTTM
			AND MMSCS.PLTFOM_TP_CODE = MMSS.PLTFOM_TP_CODE
			AND MMSCS.ADVRTS_PRDT_CODE = MMSS.ADVRTS_PRDT_CODE
			AND MMSCS.ADVRTS_TP_CODE = MMSS.ADVRTS_TP_CODE
			AND MMSCS.MEDIA_SCRIPT_NO = MMSS.MEDIA_SCRIPT_NO
			AND MMSCS.ITL_TP_CODE = MMSS.ITL_TP_CODE
		   SET MMSCS.PAR_EPRS_CNT = MMSS.PAR_EPRS_CNT
		    , MMSCS.TOT_EPRS_CNT = MMSS.TOT_EPRS_CNT
		     , MMSCS.ALT_USER_ID ='BATCH'
		     , MMSCS.ALT_DTTM = NOW()
		  WHERE MMSCS.STATS_DTTM = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y%m%d')  ;
	</update>
	
	<update id="UPDATE_DIFF_MOB_MEDIA_CHRG_STATS">
		UPDATE BILLING.MOB_MEDIA_CHRG_STATS MMCS JOIN (
			SELECT STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE, SUM(PAR_EPRS_CNT) AS PAR_EPRS_CNT, 
			SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
 			FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS
			WHERE STATS_DTTM = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y%m%d') 
			GROUP BY STATS_DTTM , PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_ID, ITL_TP_CODE
		) MMSCS 
		ON MMCS.STATS_DTTM = MMSCS.STATS_DTTM
		AND MMCS.PLTFOM_TP_CODE = MMSCS.PLTFOM_TP_CODE
		AND MMCS.ADVRTS_PRDT_CODE = MMSCS.ADVRTS_PRDT_CODE
		AND MMCS.ADVRTS_TP_CODE = MMSCS.ADVRTS_TP_CODE
		AND MMCS.MEDIA_ID = MMSCS.MEDIA_ID
		AND MMCS.ITL_TP_CODE = MMSCS.ITL_TP_CODE
		SET MMCS.PAR_EPRS_CNT = MMSCS.PAR_EPRS_CNT
			, MMCS.TOT_EPRS_CNT = MMSCS.TOT_EPRS_CNT
			, MMCS.ALT_USER_ID ='BATCH'
		    , MMCS.ALT_DTTM = NOW() 
		WHERE MMCS.STATS_DTTM = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y%m%d')  ;
	</update>
	
	<update id="sql_UPDATE_DIFF_MOB_MEDIA_SCRIPT_CHRG">
		UPDATE BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS MMSCS JOIN (
		SELECT A.STATS_DTTM , A.PLTFOM_TP_CODE, A.ADVRTS_PRDT_CODE, A.ADVRTS_TP_CODE,A.MEDIA_SCRIPT_NO, A.ITL_TP_CODE ,A.PAR_EPRS_CNT,A.TOT_EPRS_CNT 
			FROM (
				SELECT 'S' G, STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
					, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
					FROM BILLING.MOB_MEDIA_SCRIPT_HH_STATS WHERE STATS_DTTM = DATE_FORMAT(NOW(),'%Y%m%d')
					AND MEDIA_SCRIPT_NO IN (
						SELECT NO FROM dreamsearch.media_script WHERE EPRS_REST_RATE!=100)
					AND ITL_TP_CODE != '99'
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			) A, (
				SELECT 'C' G, STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
					, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(TOT_EPRS_CNT) TOT_EPRS_CNT
					FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS WHERE STATS_DTTM =  DATE_FORMAT(NOW(),'%Y%m%d') 
					AND MEDIA_SCRIPT_NO IN (
						SELECT NO FROM dreamsearch.media_script WHERE EPRS_REST_RATE!=100
						)
					AND ITL_TP_CODE != '99'
					GROUP BY STATS_DTTM, PLTFOM_TP_CODE, ADVRTS_PRDT_CODE, ADVRTS_TP_CODE, MEDIA_SCRIPT_NO, ITL_TP_CODE
			)B
			WHERE A.STATS_DTTM=B.STATS_DTTM AND A.PLTFOM_TP_CODE=B.PLTFOM_TP_CODE AND A.ADVRTS_PRDT_CODE=B.ADVRTS_PRDT_CODE AND A.ADVRTS_TP_CODE=B.ADVRTS_TP_CODE AND A.MEDIA_SCRIPT_NO=B.MEDIA_SCRIPT_NO AND A.ITL_TP_CODE=B.ITL_TP_CODE 
			AND A.PAR_EPRS_CNT <![CDATA[ < ]]> B.PAR_EPRS_CNT
		) MMSS 
		    ON MMSCS.STATS_DTTM = MMSS.STATS_DTTM
			AND MMSCS.PLTFOM_TP_CODE = MMSS.PLTFOM_TP_CODE
			AND MMSCS.ADVRTS_PRDT_CODE = MMSS.ADVRTS_PRDT_CODE
			AND MMSCS.ADVRTS_TP_CODE = MMSS.ADVRTS_TP_CODE
			AND MMSCS.MEDIA_SCRIPT_NO = MMSS.MEDIA_SCRIPT_NO
			AND MMSCS.ITL_TP_CODE = MMSS.ITL_TP_CODE
		   SET MMSCS.PAR_EPRS_CNT = MMSS.PAR_EPRS_CNT
		    , MMSCS.TOT_EPRS_CNT = MMSS.TOT_EPRS_CNT
		     , MMSCS.ALT_USER_ID ='BATCH'
		     , MMSCS.ALT_DTTM = NOW()
		  WHERE MMSCS.STATS_DTTM = DATE_FORMAT(NOW(),'%Y%m%d');
	</update>

	<select id="snapShotMediaScriptChrg" resultType="Map">
		SELECT STATS_DTTM,PLTFOM_TP_CODE,ADVRTS_PRDT_CODE,ADVRTS_TP_CODE,MEDIA_SCRIPT_NO,ITL_TP_CODE,MEDIA_TP_CODE,MEDIA_ID
			 ,TOT_EPRS_CNT,PAR_EPRS_CNT,CLICK_CNT,ADVRTS_AMT,MEDIA_PYMNT_AMT,TRGT_EPRS_CNT,TRGT_PAR_EPRS_CNT,TRGT_CLICK_CNT,TRGT_ADVRTS_AMT
			 ,REG_USER_ID,REG_DTTM,ALT_USER_ID,ALT_DTTM
		FROM BILLING.MOB_MEDIA_SCRIPT_CHRG_STATS
		WHERE STATS_DTTM = DATE_FORMAT(DATE_ADD(NOW(),INTERVAL -1 DAY),'%Y%m%d');
	</select>

	<select id="check_select_date_dd" resultType="Map" parameterType="Map">
		SELECT COUNT(1) AS CHECK_RESULT FROM (
		select STATS_DTTM ,  SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
		, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		FROM BILLING.MOB_CAMP_MEDIA_STATS
		WHERE STATS_DTTM  = #{STATS_DTTM}
		) AS A
		JOIN (
		select  STATS_DTTM,  SUM(TOT_EPRS_CNT)TOT_EPRS_CNT, SUM(PAR_EPRS_CNT)PAR_EPRS_CNT, SUM(CLICK_CNT)CLICK_CNT, SUM(ADVRTS_AMT)ADVRTS_AMT, SUM(MEDIA_PYMNT_AMT)MEDIA_PYMNT_AMT
		, SUM(TRGT_EPRS_CNT)TRGT_EPRS_CNT, SUM(TRGT_PAR_EPRS_CNT)TRGT_PAR_EPRS_CNT, SUM(TRGT_CLICK_CNT)TRGT_CLICK_CNT, SUM(TRGT_ADVRTS_AMT)TRGT_ADVRTS_AMT
		from BILLING.MOB_COM_STATS_INFO where STATS_DTTM = #{STATS_DTTM}
		) AS B  ON A.STATS_DTTM = B.STATS_DTTM
		where A.TOT_EPRS_CNT!=B.TOT_EPRS_CNT OR A.PAR_EPRS_CNT!=B.PAR_EPRS_CNT OR A.CLICK_CNT!=B.CLICK_CNT OR A.ADVRTS_AMT!=B.ADVRTS_AMT
		;

	</select>
</mapper>

